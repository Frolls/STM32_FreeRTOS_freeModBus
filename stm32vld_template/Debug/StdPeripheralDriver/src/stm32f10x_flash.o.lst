   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_flash.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.FLASH_SetLatency,"ax",%progbits
  19              		.align	2
  20              		.global	FLASH_SetLatency
  21              		.thumb
  22              		.thumb_func
  24              	FLASH_SetLatency:
  25              	.LFB29:
  26              		.file 1 "../StdPeripheralDriver/src/stm32f10x_flash.c"
   1:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
   2:../StdPeripheralDriver/src/stm32f10x_flash.c ****  ******************************************************************************
   3:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @file    stm32f10x_flash.c
   4:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @author  MCD Application Team
   5:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @version V3.5.0
   6:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @date    11-March-2011
   7:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief   This file provides all the FLASH firmware functions.
   8:../StdPeripheralDriver/src/stm32f10x_flash.c ****  ******************************************************************************
   9:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @attention
  10:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *
  11:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *
  18:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../StdPeripheralDriver/src/stm32f10x_flash.c ****  ******************************************************************************
  20:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
  21:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  22:../StdPeripheralDriver/src/stm32f10x_flash.c **** /* Includes ------------------------------------------------------------------*/
  23:../StdPeripheralDriver/src/stm32f10x_flash.c **** #include "stm32f10x_flash.h"
  24:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  25:../StdPeripheralDriver/src/stm32f10x_flash.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  26:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @{
  27:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
  28:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  29:../StdPeripheralDriver/src/stm32f10x_flash.c **** /** @defgroup FLASH 
  30:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief FLASH driver modules
  31:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @{
  32:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
  33:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  34:../StdPeripheralDriver/src/stm32f10x_flash.c **** /** @defgroup FLASH_Private_TypesDefinitions
  35:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @{
  36:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
  37:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  38:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
  39:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @}
  40:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
  41:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  42:../StdPeripheralDriver/src/stm32f10x_flash.c **** /** @defgroup FLASH_Private_Defines
  43:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @{
  44:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
  45:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  46:../StdPeripheralDriver/src/stm32f10x_flash.c **** /* Flash Access Control Register bits */
  47:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define ACR_LATENCY_Mask         ((uint32_t)0x00000038)
  48:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define ACR_HLFCYA_Mask          ((uint32_t)0xFFFFFFF7)
  49:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define ACR_PRFTBE_Mask          ((uint32_t)0xFFFFFFEF)
  50:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  51:../StdPeripheralDriver/src/stm32f10x_flash.c **** /* Flash Access Control Register bits */
  52:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define ACR_PRFTBS_Mask          ((uint32_t)0x00000020) 
  53:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  54:../StdPeripheralDriver/src/stm32f10x_flash.c **** /* Flash Control Register bits */
  55:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define CR_PG_Set                ((uint32_t)0x00000001)
  56:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define CR_PG_Reset              ((uint32_t)0x00001FFE) 
  57:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define CR_PER_Set               ((uint32_t)0x00000002)
  58:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define CR_PER_Reset             ((uint32_t)0x00001FFD)
  59:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define CR_MER_Set               ((uint32_t)0x00000004)
  60:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define CR_MER_Reset             ((uint32_t)0x00001FFB)
  61:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define CR_OPTPG_Set             ((uint32_t)0x00000010)
  62:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define CR_OPTPG_Reset           ((uint32_t)0x00001FEF)
  63:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define CR_OPTER_Set             ((uint32_t)0x00000020)
  64:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define CR_OPTER_Reset           ((uint32_t)0x00001FDF)
  65:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define CR_STRT_Set              ((uint32_t)0x00000040)
  66:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define CR_LOCK_Set              ((uint32_t)0x00000080)
  67:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  68:../StdPeripheralDriver/src/stm32f10x_flash.c **** /* FLASH Mask */
  69:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define RDPRT_Mask               ((uint32_t)0x00000002)
  70:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define WRP0_Mask                ((uint32_t)0x000000FF)
  71:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define WRP1_Mask                ((uint32_t)0x0000FF00)
  72:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define WRP2_Mask                ((uint32_t)0x00FF0000)
  73:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define WRP3_Mask                ((uint32_t)0xFF000000)
  74:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define OB_USER_BFB2             ((uint16_t)0x0008)
  75:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  76:../StdPeripheralDriver/src/stm32f10x_flash.c **** /* FLASH Keys */
  77:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define RDP_Key                  ((uint16_t)0x00A5)
  78:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define FLASH_KEY1               ((uint32_t)0x45670123)
  79:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define FLASH_KEY2               ((uint32_t)0xCDEF89AB)
  80:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  81:../StdPeripheralDriver/src/stm32f10x_flash.c **** /* FLASH BANK address */
  82:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define FLASH_BANK1_END_ADDRESS   ((uint32_t)0x807FFFF)
  83:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  84:../StdPeripheralDriver/src/stm32f10x_flash.c **** /* Delay definition */
  85:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define EraseTimeout          ((uint32_t)0x000B0000)
  86:../StdPeripheralDriver/src/stm32f10x_flash.c **** #define ProgramTimeout        ((uint32_t)0x00002000)
  87:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
  88:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @}
  89:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
  90:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  91:../StdPeripheralDriver/src/stm32f10x_flash.c **** /** @defgroup FLASH_Private_Macros
  92:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @{
  93:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
  94:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  95:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
  96:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @}
  97:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
  98:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
  99:../StdPeripheralDriver/src/stm32f10x_flash.c **** /** @defgroup FLASH_Private_Variables
 100:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @{
 101:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 102:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 103:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 104:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @}
 105:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 106:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 107:../StdPeripheralDriver/src/stm32f10x_flash.c **** /** @defgroup FLASH_Private_FunctionPrototypes
 108:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @{
 109:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 110:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 111:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 112:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @}
 113:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 114:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 115:../StdPeripheralDriver/src/stm32f10x_flash.c **** /** @defgroup FLASH_Private_Functions
 116:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @{
 117:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 118:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 119:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 120:../StdPeripheralDriver/src/stm32f10x_flash.c ****  @code  
 121:../StdPeripheralDriver/src/stm32f10x_flash.c ****  
 122:../StdPeripheralDriver/src/stm32f10x_flash.c ****  This driver provides functions to configure and program the Flash memory of all STM32F10x devices,
 123:../StdPeripheralDriver/src/stm32f10x_flash.c ****  including the latest STM32F10x_XL density devices. 
 124:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 125:../StdPeripheralDriver/src/stm32f10x_flash.c ****  STM32F10x_XL devices feature up to 1 Mbyte with dual bank architecture for read-while-write (RWW) 
 126:../StdPeripheralDriver/src/stm32f10x_flash.c ****  - bank1: fixed size of 512 Kbytes (256 pages of 2Kbytes each)
 127:../StdPeripheralDriver/src/stm32f10x_flash.c ****  - bank2: up to 512 Kbytes (up to 256 pages of 2Kbytes each)
 128:../StdPeripheralDriver/src/stm32f10x_flash.c ****  While other STM32F10x devices features only one bank with memory up to 512 Kbytes.
 129:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 130:../StdPeripheralDriver/src/stm32f10x_flash.c ****  In version V3.3.0, some functions were updated and new ones were added to support
 131:../StdPeripheralDriver/src/stm32f10x_flash.c ****  STM32F10x_XL devices. Thus some functions manages all devices, while other are 
 132:../StdPeripheralDriver/src/stm32f10x_flash.c ****  dedicated for XL devices only.
 133:../StdPeripheralDriver/src/stm32f10x_flash.c ****  
 134:../StdPeripheralDriver/src/stm32f10x_flash.c ****  The table below presents the list of available functions depending on the used STM32F10x devices. 
 135:../StdPeripheralDriver/src/stm32f10x_flash.c ****  
 136:../StdPeripheralDriver/src/stm32f10x_flash.c ****  ***************************************************
 137:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * Legacy functions used for all STM32F10x devices *
 138:../StdPeripheralDriver/src/stm32f10x_flash.c ****  ***************************************************
 139:../StdPeripheralDriver/src/stm32f10x_flash.c ****  +-------------------------------------------------------------------------------------------------
 140:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |       Functions prototypes         |STM32F10x_XL|Other STM32F10x|    Comments                   
 141:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |                                    |   devices  |  devices      |                               
 142:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 143:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_SetLatency                    |    Yes     |      Yes      | No change                     
 144:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 145:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_HalfCycleAccessCmd            |    Yes     |      Yes      | No change                     
 146:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 147:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_PrefetchBufferCmd             |    Yes     |      Yes      | No change                     
 148:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 149:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_Unlock                        |    Yes     |      Yes      | - For STM32F10X_XL devices: un
 150:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |                                    |            |               | - For other devices: unlock Ba
 151:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |                                    |            |               |   to FLASH_UnlockBank1 functio
 152:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 153:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_Lock                          |    Yes     |      Yes      | - For STM32F10X_XL devices: lo
 154:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |                                    |            |               | - For other devices: lock Bank
 155:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |                                    |            |               |   to FLASH_LockBank1 function.
 156:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 157:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_ErasePage                     |    Yes     |      Yes      | - For STM32F10x_XL devices: er
 158:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |                                    |            |               | - For other devices: erase a p
 159:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 160:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_EraseAllPages                 |    Yes     |      Yes      | - For STM32F10x_XL devices: er
 161:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |                                    |            |               | - For other devices: erase all
 162:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 163:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_EraseOptionBytes              |    Yes     |      Yes      | No change                     
 164:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 165:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_ProgramWord                   |    Yes     |      Yes      | Updated to program up to 1MByt
 166:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 167:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_ProgramHalfWord               |    Yes     |      Yes      | Updated to program up to 1MByt
 168:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 169:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_ProgramOptionByteData         |    Yes     |      Yes      | No change                     
 170:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 171:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_EnableWriteProtection         |    Yes     |      Yes      | No change                     
 172:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 173:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_ReadOutProtection             |    Yes     |      Yes      | No change                     
 174:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 175:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_UserOptionByteConfig          |    Yes     |      Yes      | No change                     
 176:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 177:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_GetUserOptionByte             |    Yes     |      Yes      | No change                     
 178:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 179:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_GetWriteProtectionOptionByte  |    Yes     |      Yes      | No change                     
 180:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 181:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_GetReadOutProtectionStatus    |    Yes     |      Yes      | No change                     
 182:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 183:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_GetPrefetchBufferStatus       |    Yes     |      Yes      | No change                     
 184:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 185:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_ITConfig                      |    Yes     |      Yes      | - For STM32F10x_XL devices: en
 186:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |                                    |            |               | - For other devices: enable Ba
 187:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 188:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_GetFlagStatus                 |    Yes     |      Yes      | - For STM32F10x_XL devices: re
 189:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |                                    |            |               | - For other devices: return Ba
 190:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 191:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_ClearFlag                     |    Yes     |      Yes      | - For STM32F10x_XL devices: cl
 192:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |                                    |            |               | - For other devices: clear Ban
 193:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 194:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_GetStatus                     |    Yes     |      Yes      | - Return the status of Bank1 (
 195:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |                                    |            |               |   equivalent to FLASH_GetBank1
 196:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 197:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_WaitForLastOperation          |    Yes     |      Yes      | - Wait for Bank1 last operatio
 198:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |                                    |            |               |   equivalent to: FLASH_WaitFor
 199:../StdPeripheralDriver/src/stm32f10x_flash.c ****  +-------------------------------------------------------------------------------------------------
 200:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 201:../StdPeripheralDriver/src/stm32f10x_flash.c ****  **************************************************************************************************
 202:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * New functions used for all STM32F10x devices to manage Bank1:                                   
 203:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   - These functions are mainly useful for STM32F10x_XL density devices, to have separate control
 204:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   - For other devices, these functions are optional (covered by functions listed above)         
 205:../StdPeripheralDriver/src/stm32f10x_flash.c ****  **************************************************************************************************
 206:../StdPeripheralDriver/src/stm32f10x_flash.c ****  +-------------------------------------------------------------------------------------------------
 207:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |       Functions prototypes         |STM32F10x_XL|Other STM32F10x|    Comments                   
 208:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |                                    |   devices  |  devices      |                               
 209:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 210:../StdPeripheralDriver/src/stm32f10x_flash.c ****  | FLASH_UnlockBank1                  |    Yes     |      Yes      | - Unlock Bank1                
 211:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 212:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_LockBank1                     |    Yes     |      Yes      | - Lock Bank1                  
 213:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 214:../StdPeripheralDriver/src/stm32f10x_flash.c ****  | FLASH_EraseAllBank1Pages           |    Yes     |      Yes      | - Erase all pages in Bank1    
 215:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 216:../StdPeripheralDriver/src/stm32f10x_flash.c ****  | FLASH_GetBank1Status               |    Yes     |      Yes      | - Return the status of Bank1  
 217:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 218:../StdPeripheralDriver/src/stm32f10x_flash.c ****  | FLASH_WaitForLastBank1Operation    |    Yes     |      Yes      | - Wait for Bank1 last operatio
 219:../StdPeripheralDriver/src/stm32f10x_flash.c ****  +-------------------------------------------------------------------------------------------------
 220:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 221:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *****************************************************************************
 222:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * New Functions used only with STM32F10x_XL density devices to manage Bank2 *
 223:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *****************************************************************************
 224:../StdPeripheralDriver/src/stm32f10x_flash.c ****  +-------------------------------------------------------------------------------------------------
 225:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |       Functions prototypes         |STM32F10x_XL|Other STM32F10x|    Comments                   
 226:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |                                    |   devices  |  devices      |                               
 227:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 228:../StdPeripheralDriver/src/stm32f10x_flash.c ****  | FLASH_UnlockBank2                  |    Yes     |      No       | - Unlock Bank2                
 229:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 230:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |FLASH_LockBank2                     |    Yes     |      No       | - Lock Bank2                  
 231:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 232:../StdPeripheralDriver/src/stm32f10x_flash.c ****  | FLASH_EraseAllBank2Pages           |    Yes     |      No       | - Erase all pages in Bank2    
 233:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 234:../StdPeripheralDriver/src/stm32f10x_flash.c ****  | FLASH_GetBank2Status               |    Yes     |      No       | - Return the status of Bank2  
 235:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 236:../StdPeripheralDriver/src/stm32f10x_flash.c ****  | FLASH_WaitForLastBank2Operation    |    Yes     |      No       | - Wait for Bank2 last operatio
 237:../StdPeripheralDriver/src/stm32f10x_flash.c ****  |-------------------------------------------------------------------------------------------------
 238:../StdPeripheralDriver/src/stm32f10x_flash.c ****  | FLASH_BootConfig                   |    Yes     |      No       | - Configure to boot from Bank1
 239:../StdPeripheralDriver/src/stm32f10x_flash.c ****  +-------------------------------------------------------------------------------------------------
 240:../StdPeripheralDriver/src/stm32f10x_flash.c ****  @endcode
 241:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 242:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 243:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 244:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Sets the code latency value.
 245:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
 246:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  FLASH_Latency: specifies the FLASH Latency value.
 247:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   This parameter can be one of the following values:
 248:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_Latency_0: FLASH Zero Latency cycle
 249:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_Latency_1: FLASH One Latency cycle
 250:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_Latency_2: FLASH Two Latency cycles
 251:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval None
 252:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 253:../StdPeripheralDriver/src/stm32f10x_flash.c **** void FLASH_SetLatency(uint32_t FLASH_Latency) {
  27              		.loc 1 253 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 254:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	uint32_t tmpreg = 0;
  43              		.loc 1 254 0
  44 0008 4FF00003 		mov	r3, #0
  45 000c FB60     		str	r3, [r7, #12]
 255:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 256:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
 257:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FLASH_LATENCY(FLASH_Latency));
 258:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 259:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Read the ACR register */
 260:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	tmpreg = FLASH ->ACR;
  46              		.loc 1 260 0
  47 000e 4FF40053 		mov	r3, #8192
  48 0012 C4F20203 		movt	r3, 16386
  49 0016 1B68     		ldr	r3, [r3, #0]
  50 0018 FB60     		str	r3, [r7, #12]
 261:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 262:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Sets the Latency value */
 263:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	tmpreg &= ACR_LATENCY_Mask;
  51              		.loc 1 263 0
  52 001a FB68     		ldr	r3, [r7, #12]
  53 001c 03F03803 		and	r3, r3, #56
  54 0020 FB60     		str	r3, [r7, #12]
 264:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	tmpreg |= FLASH_Latency;
  55              		.loc 1 264 0
  56 0022 FA68     		ldr	r2, [r7, #12]
  57 0024 7B68     		ldr	r3, [r7, #4]
  58 0026 1343     		orrs	r3, r3, r2
  59 0028 FB60     		str	r3, [r7, #12]
 265:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 266:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Write the ACR register */
 267:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH ->ACR = tmpreg;
  60              		.loc 1 267 0
  61 002a 4FF40053 		mov	r3, #8192
  62 002e C4F20203 		movt	r3, 16386
  63 0032 FA68     		ldr	r2, [r7, #12]
  64 0034 1A60     		str	r2, [r3, #0]
 268:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
  65              		.loc 1 268 0
  66 0036 07F11407 		add	r7, r7, #20
  67 003a BD46     		mov	sp, r7
  68 003c 80BC     		pop	{r7}
  69 003e 7047     		bx	lr
  70              		.cfi_endproc
  71              	.LFE29:
  73              		.section	.text.FLASH_HalfCycleAccessCmd,"ax",%progbits
  74              		.align	2
  75              		.global	FLASH_HalfCycleAccessCmd
  76              		.thumb
  77              		.thumb_func
  79              	FLASH_HalfCycleAccessCmd:
  80              	.LFB30:
 269:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 270:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 271:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Enables or disables the Half cycle flash access.
 272:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
 273:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  FLASH_HalfCycleAccess: specifies the FLASH Half cycle Access mode.
 274:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   This parameter can be one of the following values:
 275:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_HalfCycleAccess_Enable: FLASH Half Cycle Enable
 276:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_HalfCycleAccess_Disable: FLASH Half Cycle Disable
 277:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval None
 278:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 279:../StdPeripheralDriver/src/stm32f10x_flash.c **** void FLASH_HalfCycleAccessCmd(uint32_t FLASH_HalfCycleAccess) {
  81              		.loc 1 279 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 8
  84              		@ frame_needed = 1, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86 0000 80B4     		push	{r7}
  87              	.LCFI3:
  88              		.cfi_def_cfa_offset 4
  89              		.cfi_offset 7, -4
  90 0002 83B0     		sub	sp, sp, #12
  91              	.LCFI4:
  92              		.cfi_def_cfa_offset 16
  93 0004 00AF     		add	r7, sp, #0
  94              	.LCFI5:
  95              		.cfi_def_cfa_register 7
  96 0006 7860     		str	r0, [r7, #4]
 280:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
 281:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FLASH_HALFCYCLEACCESS_STATE(FLASH_HalfCycleAccess));
 282:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 283:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Enable or disable the Half cycle access */FLASH ->ACR &= ACR_HLFCYA_Mask;
  97              		.loc 1 283 0
  98 0008 4FF40053 		mov	r3, #8192
  99 000c C4F20203 		movt	r3, 16386
 100 0010 4FF40052 		mov	r2, #8192
 101 0014 C4F20202 		movt	r2, 16386
 102 0018 1268     		ldr	r2, [r2, #0]
 103 001a 22F00802 		bic	r2, r2, #8
 104 001e 1A60     		str	r2, [r3, #0]
 284:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH ->ACR |= FLASH_HalfCycleAccess;
 105              		.loc 1 284 0
 106 0020 4FF40053 		mov	r3, #8192
 107 0024 C4F20203 		movt	r3, 16386
 108 0028 4FF40052 		mov	r2, #8192
 109 002c C4F20202 		movt	r2, 16386
 110 0030 1168     		ldr	r1, [r2, #0]
 111 0032 7A68     		ldr	r2, [r7, #4]
 112 0034 0A43     		orrs	r2, r2, r1
 113 0036 1A60     		str	r2, [r3, #0]
 285:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 114              		.loc 1 285 0
 115 0038 07F10C07 		add	r7, r7, #12
 116 003c BD46     		mov	sp, r7
 117 003e 80BC     		pop	{r7}
 118 0040 7047     		bx	lr
 119              		.cfi_endproc
 120              	.LFE30:
 122              		.section	.text.FLASH_PrefetchBufferCmd,"ax",%progbits
 123              		.align	2
 124              		.global	FLASH_PrefetchBufferCmd
 125              		.thumb
 126              		.thumb_func
 128              	FLASH_PrefetchBufferCmd:
 129              	.LFB31:
 286:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 287:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 288:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Enables or disables the Prefetch Buffer.
 289:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
 290:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  FLASH_PrefetchBuffer: specifies the Prefetch buffer status.
 291:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   This parameter can be one of the following values:
 292:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_PrefetchBuffer_Enable: FLASH Prefetch Buffer Enable
 293:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_PrefetchBuffer_Disable: FLASH Prefetch Buffer Disable
 294:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval None
 295:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 296:../StdPeripheralDriver/src/stm32f10x_flash.c **** void FLASH_PrefetchBufferCmd(uint32_t FLASH_PrefetchBuffer) {
 130              		.loc 1 296 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 8
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135 0000 80B4     		push	{r7}
 136              	.LCFI6:
 137              		.cfi_def_cfa_offset 4
 138              		.cfi_offset 7, -4
 139 0002 83B0     		sub	sp, sp, #12
 140              	.LCFI7:
 141              		.cfi_def_cfa_offset 16
 142 0004 00AF     		add	r7, sp, #0
 143              	.LCFI8:
 144              		.cfi_def_cfa_register 7
 145 0006 7860     		str	r0, [r7, #4]
 297:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
 298:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FLASH_PREFETCHBUFFER_STATE(FLASH_PrefetchBuffer));
 299:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 300:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Enable or disable the Prefetch Buffer */FLASH ->ACR &= ACR_PRFTBE_Mask;
 146              		.loc 1 300 0
 147 0008 4FF40053 		mov	r3, #8192
 148 000c C4F20203 		movt	r3, 16386
 149 0010 4FF40052 		mov	r2, #8192
 150 0014 C4F20202 		movt	r2, 16386
 151 0018 1268     		ldr	r2, [r2, #0]
 152 001a 22F01002 		bic	r2, r2, #16
 153 001e 1A60     		str	r2, [r3, #0]
 301:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH ->ACR |= FLASH_PrefetchBuffer;
 154              		.loc 1 301 0
 155 0020 4FF40053 		mov	r3, #8192
 156 0024 C4F20203 		movt	r3, 16386
 157 0028 4FF40052 		mov	r2, #8192
 158 002c C4F20202 		movt	r2, 16386
 159 0030 1168     		ldr	r1, [r2, #0]
 160 0032 7A68     		ldr	r2, [r7, #4]
 161 0034 0A43     		orrs	r2, r2, r1
 162 0036 1A60     		str	r2, [r3, #0]
 302:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 163              		.loc 1 302 0
 164 0038 07F10C07 		add	r7, r7, #12
 165 003c BD46     		mov	sp, r7
 166 003e 80BC     		pop	{r7}
 167 0040 7047     		bx	lr
 168              		.cfi_endproc
 169              	.LFE31:
 171              		.section	.text.FLASH_Unlock,"ax",%progbits
 172              		.align	2
 173              		.global	FLASH_Unlock
 174              		.thumb
 175              		.thumb_func
 177              	FLASH_Unlock:
 178              	.LFB32:
 303:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 304:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 305:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Unlocks the FLASH Program Erase Controller.
 306:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
 307:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For STM32F10X_XL devices this function unlocks Bank1 and Bank2.
 308:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For all other devices it unlocks Bank1 and it is equivalent 
 309:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *           to FLASH_UnlockBank1 function.. 
 310:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
 311:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval None
 312:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 313:../StdPeripheralDriver/src/stm32f10x_flash.c **** void FLASH_Unlock(void) {
 179              		.loc 1 313 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184 0000 80B4     		push	{r7}
 185              	.LCFI9:
 186              		.cfi_def_cfa_offset 4
 187              		.cfi_offset 7, -4
 188 0002 00AF     		add	r7, sp, #0
 189              	.LCFI10:
 190              		.cfi_def_cfa_register 7
 314:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Authorize the FPEC of Bank1 Access */
 315:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH ->KEYR = FLASH_KEY1;
 191              		.loc 1 315 0
 192 0004 4FF40053 		mov	r3, #8192
 193 0008 C4F20203 		movt	r3, 16386
 194 000c 40F22312 		movw	r2, #291
 195 0010 C4F26752 		movt	r2, 17767
 196 0014 5A60     		str	r2, [r3, #4]
 316:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH ->KEYR = FLASH_KEY2;
 197              		.loc 1 316 0
 198 0016 4FF40053 		mov	r3, #8192
 199 001a C4F20203 		movt	r3, 16386
 200 001e 48F6AB12 		movw	r2, #35243
 201 0022 CCF6EF52 		movt	r2, 52719
 202 0026 5A60     		str	r2, [r3, #4]
 317:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 318:../StdPeripheralDriver/src/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 319:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Authorize the FPEC of Bank2 Access */
 320:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH->KEYR2 = FLASH_KEY1;
 321:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH->KEYR2 = FLASH_KEY2;
 322:../StdPeripheralDriver/src/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 323:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 203              		.loc 1 323 0
 204 0028 BD46     		mov	sp, r7
 205 002a 80BC     		pop	{r7}
 206 002c 7047     		bx	lr
 207              		.cfi_endproc
 208              	.LFE32:
 210 002e 00BF     		.section	.text.FLASH_UnlockBank1,"ax",%progbits
 211              		.align	2
 212              		.global	FLASH_UnlockBank1
 213              		.thumb
 214              		.thumb_func
 216              	FLASH_UnlockBank1:
 217              	.LFB33:
 324:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 325:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Unlocks the FLASH Bank1 Program Erase Controller.
 326:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
 327:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For STM32F10X_XL devices this function unlocks Bank1.
 328:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For all other devices it unlocks Bank1 and it is 
 329:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *           equivalent to FLASH_Unlock function.
 330:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
 331:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval None
 332:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 333:../StdPeripheralDriver/src/stm32f10x_flash.c **** void FLASH_UnlockBank1(void) {
 218              		.loc 1 333 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223 0000 80B4     		push	{r7}
 224              	.LCFI11:
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 7, -4
 227 0002 00AF     		add	r7, sp, #0
 228              	.LCFI12:
 229              		.cfi_def_cfa_register 7
 334:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Authorize the FPEC of Bank1 Access */
 335:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH ->KEYR = FLASH_KEY1;
 230              		.loc 1 335 0
 231 0004 4FF40053 		mov	r3, #8192
 232 0008 C4F20203 		movt	r3, 16386
 233 000c 40F22312 		movw	r2, #291
 234 0010 C4F26752 		movt	r2, 17767
 235 0014 5A60     		str	r2, [r3, #4]
 336:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH ->KEYR = FLASH_KEY2;
 236              		.loc 1 336 0
 237 0016 4FF40053 		mov	r3, #8192
 238 001a C4F20203 		movt	r3, 16386
 239 001e 48F6AB12 		movw	r2, #35243
 240 0022 CCF6EF52 		movt	r2, 52719
 241 0026 5A60     		str	r2, [r3, #4]
 337:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 242              		.loc 1 337 0
 243 0028 BD46     		mov	sp, r7
 244 002a 80BC     		pop	{r7}
 245 002c 7047     		bx	lr
 246              		.cfi_endproc
 247              	.LFE33:
 249 002e 00BF     		.section	.text.FLASH_Lock,"ax",%progbits
 250              		.align	2
 251              		.global	FLASH_Lock
 252              		.thumb
 253              		.thumb_func
 255              	FLASH_Lock:
 256              	.LFB34:
 338:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 339:../StdPeripheralDriver/src/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 340:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 341:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Unlocks the FLASH Bank2 Program Erase Controller.
 342:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used only for STM32F10X_XL density devices.
 343:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
 344:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval None
 345:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 346:../StdPeripheralDriver/src/stm32f10x_flash.c **** void FLASH_UnlockBank2(void)
 347:../StdPeripheralDriver/src/stm32f10x_flash.c **** {
 348:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Authorize the FPEC of Bank2 Access */
 349:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH->KEYR2 = FLASH_KEY1;
 350:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH->KEYR2 = FLASH_KEY2;
 351:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 352:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 353:../StdPeripheralDriver/src/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 354:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 355:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 356:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Locks the FLASH Program Erase Controller.
 357:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
 358:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For STM32F10X_XL devices this function Locks Bank1 and Bank2.
 359:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For all other devices it Locks Bank1 and it is equivalent 
 360:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *           to FLASH_LockBank1 function.
 361:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
 362:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval None
 363:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 364:../StdPeripheralDriver/src/stm32f10x_flash.c **** void FLASH_Lock(void) {
 257              		.loc 1 364 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 262 0000 80B4     		push	{r7}
 263              	.LCFI13:
 264              		.cfi_def_cfa_offset 4
 265              		.cfi_offset 7, -4
 266 0002 00AF     		add	r7, sp, #0
 267              	.LCFI14:
 268              		.cfi_def_cfa_register 7
 365:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Set the Lock Bit to lock the FPEC and the CR of  Bank1 */
 366:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH ->CR |= CR_LOCK_Set;
 269              		.loc 1 366 0
 270 0004 4FF40053 		mov	r3, #8192
 271 0008 C4F20203 		movt	r3, 16386
 272 000c 4FF40052 		mov	r2, #8192
 273 0010 C4F20202 		movt	r2, 16386
 274 0014 1269     		ldr	r2, [r2, #16]
 275 0016 42F08002 		orr	r2, r2, #128
 276 001a 1A61     		str	r2, [r3, #16]
 367:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 368:../StdPeripheralDriver/src/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 369:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Set the Lock Bit to lock the FPEC and the CR of  Bank2 */
 370:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH->CR2 |= CR_LOCK_Set;
 371:../StdPeripheralDriver/src/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 372:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 277              		.loc 1 372 0
 278 001c BD46     		mov	sp, r7
 279 001e 80BC     		pop	{r7}
 280 0020 7047     		bx	lr
 281              		.cfi_endproc
 282              	.LFE34:
 284 0022 00BF     		.section	.text.FLASH_LockBank1,"ax",%progbits
 285              		.align	2
 286              		.global	FLASH_LockBank1
 287              		.thumb
 288              		.thumb_func
 290              	FLASH_LockBank1:
 291              	.LFB35:
 373:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 374:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 375:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Locks the FLASH Bank1 Program Erase Controller.
 376:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   this function can be used for all STM32F10x devices.
 377:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For STM32F10X_XL devices this function Locks Bank1.
 378:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For all other devices it Locks Bank1 and it is equivalent 
 379:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *           to FLASH_Lock function.
 380:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
 381:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval None
 382:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 383:../StdPeripheralDriver/src/stm32f10x_flash.c **** void FLASH_LockBank1(void) {
 292              		.loc 1 383 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 1, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 297 0000 80B4     		push	{r7}
 298              	.LCFI15:
 299              		.cfi_def_cfa_offset 4
 300              		.cfi_offset 7, -4
 301 0002 00AF     		add	r7, sp, #0
 302              	.LCFI16:
 303              		.cfi_def_cfa_register 7
 384:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Set the Lock Bit to lock the FPEC and the CR of  Bank1 */
 385:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH ->CR |= CR_LOCK_Set;
 304              		.loc 1 385 0
 305 0004 4FF40053 		mov	r3, #8192
 306 0008 C4F20203 		movt	r3, 16386
 307 000c 4FF40052 		mov	r2, #8192
 308 0010 C4F20202 		movt	r2, 16386
 309 0014 1269     		ldr	r2, [r2, #16]
 310 0016 42F08002 		orr	r2, r2, #128
 311 001a 1A61     		str	r2, [r3, #16]
 386:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 312              		.loc 1 386 0
 313 001c BD46     		mov	sp, r7
 314 001e 80BC     		pop	{r7}
 315 0020 7047     		bx	lr
 316              		.cfi_endproc
 317              	.LFE35:
 319 0022 00BF     		.section	.text.FLASH_ErasePage,"ax",%progbits
 320              		.align	2
 321              		.global	FLASH_ErasePage
 322              		.thumb
 323              		.thumb_func
 325              	FLASH_ErasePage:
 326              	.LFB36:
 387:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 388:../StdPeripheralDriver/src/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 389:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 390:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Locks the FLASH Bank2 Program Erase Controller.
 391:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used only for STM32F10X_XL density devices.
 392:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
 393:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval None
 394:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 395:../StdPeripheralDriver/src/stm32f10x_flash.c **** void FLASH_LockBank2(void)
 396:../StdPeripheralDriver/src/stm32f10x_flash.c **** {
 397:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Set the Lock Bit to lock the FPEC and the CR of  Bank2 */
 398:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH->CR2 |= CR_LOCK_Set;
 399:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 400:../StdPeripheralDriver/src/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 401:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 402:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 403:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Erases a specified FLASH page.
 404:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
 405:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  Page_Address: The page address to be erased.
 406:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PG,
 407:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 408:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 409:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_ErasePage(uint32_t Page_Address) {
 327              		.loc 1 409 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 16
 330              		@ frame_needed = 1, uses_anonymous_args = 0
 331 0000 80B5     		push	{r7, lr}
 332              	.LCFI17:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 7, -8
 335              		.cfi_offset 14, -4
 336 0002 84B0     		sub	sp, sp, #16
 337              	.LCFI18:
 338              		.cfi_def_cfa_offset 24
 339 0004 00AF     		add	r7, sp, #0
 340              	.LCFI19:
 341              		.cfi_def_cfa_register 7
 342 0006 7860     		str	r0, [r7, #4]
 410:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status status = FLASH_COMPLETE;
 343              		.loc 1 410 0
 344 0008 4FF00403 		mov	r3, #4
 345 000c FB73     		strb	r3, [r7, #15]
 411:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
 412:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FLASH_ADDRESS(Page_Address));
 413:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 414:../StdPeripheralDriver/src/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 415:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if(Page_Address < FLASH_BANK1_END_ADDRESS)
 416:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
 417:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 418:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastBank1Operation(EraseTimeout);
 419:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if(status == FLASH_COMPLETE)
 420:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
 421:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the previous operation is completed, proceed to erase the page */
 422:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR|= CR_PER_Set;
 423:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->AR = Page_Address;
 424:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR|= CR_STRT_Set;
 425:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 426:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
 427:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastBank1Operation(EraseTimeout);
 428:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 429:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Disable the PER Bit */
 430:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR &= CR_PER_Reset;
 431:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 432:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 433:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	else
 434:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
 435:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 436:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastBank2Operation(EraseTimeout);
 437:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if(status == FLASH_COMPLETE)
 438:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
 439:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the previous operation is completed, proceed to erase the page */
 440:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR2|= CR_PER_Set;
 441:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->AR2 = Page_Address;
 442:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR2|= CR_STRT_Set;
 443:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 444:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
 445:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastBank2Operation(EraseTimeout);
 446:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 447:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Disable the PER Bit */
 448:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR2 &= CR_PER_Reset;
 449:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 450:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 451:../StdPeripheralDriver/src/stm32f10x_flash.c **** #else
 452:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Wait for last operation to be completed */
 453:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_WaitForLastOperation(EraseTimeout );
 346              		.loc 1 453 0
 347 000e 4FF43020 		mov	r0, #720896
 348 0012 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 349 0016 0346     		mov	r3, r0
 350 0018 FB73     		strb	r3, [r7, #15]
 454:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 455:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (status == FLASH_COMPLETE) {
 351              		.loc 1 455 0
 352 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 353 001c 042B     		cmp	r3, #4
 354 001e 30D1     		bne	.L9
 456:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* if the previous operation is completed, proceed to erase the page */
 457:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR |= CR_PER_Set;
 355              		.loc 1 457 0
 356 0020 4FF40053 		mov	r3, #8192
 357 0024 C4F20203 		movt	r3, 16386
 358 0028 4FF40052 		mov	r2, #8192
 359 002c C4F20202 		movt	r2, 16386
 360 0030 1269     		ldr	r2, [r2, #16]
 361 0032 42F00202 		orr	r2, r2, #2
 362 0036 1A61     		str	r2, [r3, #16]
 458:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->AR = Page_Address;
 363              		.loc 1 458 0
 364 0038 4FF40053 		mov	r3, #8192
 365 003c C4F20203 		movt	r3, 16386
 366 0040 7A68     		ldr	r2, [r7, #4]
 367 0042 5A61     		str	r2, [r3, #20]
 459:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR |= CR_STRT_Set;
 368              		.loc 1 459 0
 369 0044 4FF40053 		mov	r3, #8192
 370 0048 C4F20203 		movt	r3, 16386
 371 004c 4FF40052 		mov	r2, #8192
 372 0050 C4F20202 		movt	r2, 16386
 373 0054 1269     		ldr	r2, [r2, #16]
 374 0056 42F04002 		orr	r2, r2, #64
 375 005a 1A61     		str	r2, [r3, #16]
 460:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 461:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 462:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastOperation(EraseTimeout );
 376              		.loc 1 462 0
 377 005c 4FF43020 		mov	r0, #720896
 378 0060 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 379 0064 0346     		mov	r3, r0
 380 0066 FB73     		strb	r3, [r7, #15]
 463:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 464:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Disable the PER Bit */
 465:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR &= CR_PER_Reset;
 381              		.loc 1 465 0
 382 0068 4FF40053 		mov	r3, #8192
 383 006c C4F20203 		movt	r3, 16386
 384 0070 4FF40052 		mov	r2, #8192
 385 0074 C4F20202 		movt	r2, 16386
 386 0078 1169     		ldr	r1, [r2, #16]
 387 007a 41F6FD72 		movw	r2, #8189
 388 007e 0A40     		ands	r2, r2, r1
 389 0080 1A61     		str	r2, [r3, #16]
 390              	.L9:
 466:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 467:../StdPeripheralDriver/src/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 468:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 469:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the Erase Status */
 470:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return status;
 391              		.loc 1 470 0
 392 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 471:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 393              		.loc 1 471 0
 394 0084 1846     		mov	r0, r3
 395 0086 07F11007 		add	r7, r7, #16
 396 008a BD46     		mov	sp, r7
 397 008c 80BD     		pop	{r7, pc}
 398              		.cfi_endproc
 399              	.LFE36:
 401 008e 00BF     		.section	.text.FLASH_EraseAllPages,"ax",%progbits
 402              		.align	2
 403              		.global	FLASH_EraseAllPages
 404              		.thumb
 405              		.thumb_func
 407              	FLASH_EraseAllPages:
 408              	.LFB37:
 472:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 473:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 474:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Erases all FLASH pages.
 475:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
 476:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
 477:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 478:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 479:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 480:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_EraseAllPages(void) {
 409              		.loc 1 480 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 8
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 80B5     		push	{r7, lr}
 414              	.LCFI20:
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 7, -8
 417              		.cfi_offset 14, -4
 418 0002 82B0     		sub	sp, sp, #8
 419              	.LCFI21:
 420              		.cfi_def_cfa_offset 16
 421 0004 00AF     		add	r7, sp, #0
 422              	.LCFI22:
 423              		.cfi_def_cfa_register 7
 481:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status status = FLASH_COMPLETE;
 424              		.loc 1 481 0
 425 0006 4FF00403 		mov	r3, #4
 426 000a FB71     		strb	r3, [r7, #7]
 482:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 483:../StdPeripheralDriver/src/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 484:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Wait for last operation to be completed */
 485:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_WaitForLastBank1Operation(EraseTimeout);
 486:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 487:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if(status == FLASH_COMPLETE)
 488:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
 489:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* if the previous operation is completed, proceed to erase all pages */
 490:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH->CR |= CR_MER_Set;
 491:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH->CR |= CR_STRT_Set;
 492:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 493:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 494:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastBank1Operation(EraseTimeout);
 495:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 496:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Disable the MER Bit */
 497:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH->CR &= CR_MER_Reset;
 498:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 499:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if(status == FLASH_COMPLETE)
 500:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
 501:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* if the previous operation is completed, proceed to erase all pages */
 502:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH->CR2 |= CR_MER_Set;
 503:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH->CR2 |= CR_STRT_Set;
 504:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 505:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 506:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastBank2Operation(EraseTimeout);
 507:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 508:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Disable the MER Bit */
 509:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH->CR2 &= CR_MER_Reset;
 510:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 511:../StdPeripheralDriver/src/stm32f10x_flash.c **** #else
 512:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Wait for last operation to be completed */
 513:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_WaitForLastOperation(EraseTimeout );
 427              		.loc 1 513 0
 428 000c 4FF43020 		mov	r0, #720896
 429 0010 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 430 0014 0346     		mov	r3, r0
 431 0016 FB71     		strb	r3, [r7, #7]
 514:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (status == FLASH_COMPLETE) {
 432              		.loc 1 514 0
 433 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 434 001a 042B     		cmp	r3, #4
 435 001c 2AD1     		bne	.L12
 515:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* if the previous operation is completed, proceed to erase all pages */
 516:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR |= CR_MER_Set;
 436              		.loc 1 516 0
 437 001e 4FF40053 		mov	r3, #8192
 438 0022 C4F20203 		movt	r3, 16386
 439 0026 4FF40052 		mov	r2, #8192
 440 002a C4F20202 		movt	r2, 16386
 441 002e 1269     		ldr	r2, [r2, #16]
 442 0030 42F00402 		orr	r2, r2, #4
 443 0034 1A61     		str	r2, [r3, #16]
 517:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR |= CR_STRT_Set;
 444              		.loc 1 517 0
 445 0036 4FF40053 		mov	r3, #8192
 446 003a C4F20203 		movt	r3, 16386
 447 003e 4FF40052 		mov	r2, #8192
 448 0042 C4F20202 		movt	r2, 16386
 449 0046 1269     		ldr	r2, [r2, #16]
 450 0048 42F04002 		orr	r2, r2, #64
 451 004c 1A61     		str	r2, [r3, #16]
 518:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 519:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 520:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastOperation(EraseTimeout );
 452              		.loc 1 520 0
 453 004e 4FF43020 		mov	r0, #720896
 454 0052 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 455 0056 0346     		mov	r3, r0
 456 0058 FB71     		strb	r3, [r7, #7]
 521:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 522:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Disable the MER Bit */
 523:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR &= CR_MER_Reset;
 457              		.loc 1 523 0
 458 005a 4FF40053 		mov	r3, #8192
 459 005e C4F20203 		movt	r3, 16386
 460 0062 4FF40052 		mov	r2, #8192
 461 0066 C4F20202 		movt	r2, 16386
 462 006a 1169     		ldr	r1, [r2, #16]
 463 006c 41F6FB72 		movw	r2, #8187
 464 0070 0A40     		ands	r2, r2, r1
 465 0072 1A61     		str	r2, [r3, #16]
 466              	.L12:
 524:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 525:../StdPeripheralDriver/src/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 526:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 527:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the Erase Status */
 528:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return status;
 467              		.loc 1 528 0
 468 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 529:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 469              		.loc 1 529 0
 470 0076 1846     		mov	r0, r3
 471 0078 07F10807 		add	r7, r7, #8
 472 007c BD46     		mov	sp, r7
 473 007e 80BD     		pop	{r7, pc}
 474              		.cfi_endproc
 475              	.LFE37:
 477              		.section	.text.FLASH_EraseAllBank1Pages,"ax",%progbits
 478              		.align	2
 479              		.global	FLASH_EraseAllBank1Pages
 480              		.thumb
 481              		.thumb_func
 483              	FLASH_EraseAllBank1Pages:
 484              	.LFB38:
 530:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 531:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 532:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Erases all Bank1 FLASH pages.
 533:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
 534:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For STM32F10X_XL devices this function erases all Bank1 pages.
 535:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For all other devices it erases all Bank1 pages and it is equivalent 
 536:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *           to FLASH_EraseAllPages function.
 537:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
 538:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 539:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 540:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 541:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_EraseAllBank1Pages(void) {
 485              		.loc 1 541 0
 486              		.cfi_startproc
 487              		@ args = 0, pretend = 0, frame = 8
 488              		@ frame_needed = 1, uses_anonymous_args = 0
 489 0000 80B5     		push	{r7, lr}
 490              	.LCFI23:
 491              		.cfi_def_cfa_offset 8
 492              		.cfi_offset 7, -8
 493              		.cfi_offset 14, -4
 494 0002 82B0     		sub	sp, sp, #8
 495              	.LCFI24:
 496              		.cfi_def_cfa_offset 16
 497 0004 00AF     		add	r7, sp, #0
 498              	.LCFI25:
 499              		.cfi_def_cfa_register 7
 542:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status status = FLASH_COMPLETE;
 500              		.loc 1 542 0
 501 0006 4FF00403 		mov	r3, #4
 502 000a FB71     		strb	r3, [r7, #7]
 543:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Wait for last operation to be completed */
 544:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_WaitForLastBank1Operation(EraseTimeout );
 503              		.loc 1 544 0
 504 000c 4FF43020 		mov	r0, #720896
 505 0010 FFF7FEFF 		bl	FLASH_WaitForLastBank1Operation
 506 0014 0346     		mov	r3, r0
 507 0016 FB71     		strb	r3, [r7, #7]
 545:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 546:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (status == FLASH_COMPLETE) {
 508              		.loc 1 546 0
 509 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 510 001a 042B     		cmp	r3, #4
 511 001c 2AD1     		bne	.L15
 547:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* if the previous operation is completed, proceed to erase all pages */
 548:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR |= CR_MER_Set;
 512              		.loc 1 548 0
 513 001e 4FF40053 		mov	r3, #8192
 514 0022 C4F20203 		movt	r3, 16386
 515 0026 4FF40052 		mov	r2, #8192
 516 002a C4F20202 		movt	r2, 16386
 517 002e 1269     		ldr	r2, [r2, #16]
 518 0030 42F00402 		orr	r2, r2, #4
 519 0034 1A61     		str	r2, [r3, #16]
 549:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR |= CR_STRT_Set;
 520              		.loc 1 549 0
 521 0036 4FF40053 		mov	r3, #8192
 522 003a C4F20203 		movt	r3, 16386
 523 003e 4FF40052 		mov	r2, #8192
 524 0042 C4F20202 		movt	r2, 16386
 525 0046 1269     		ldr	r2, [r2, #16]
 526 0048 42F04002 		orr	r2, r2, #64
 527 004c 1A61     		str	r2, [r3, #16]
 550:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 551:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 552:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastBank1Operation(EraseTimeout );
 528              		.loc 1 552 0
 529 004e 4FF43020 		mov	r0, #720896
 530 0052 FFF7FEFF 		bl	FLASH_WaitForLastBank1Operation
 531 0056 0346     		mov	r3, r0
 532 0058 FB71     		strb	r3, [r7, #7]
 553:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 554:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Disable the MER Bit */
 555:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR &= CR_MER_Reset;
 533              		.loc 1 555 0
 534 005a 4FF40053 		mov	r3, #8192
 535 005e C4F20203 		movt	r3, 16386
 536 0062 4FF40052 		mov	r2, #8192
 537 0066 C4F20202 		movt	r2, 16386
 538 006a 1169     		ldr	r1, [r2, #16]
 539 006c 41F6FB72 		movw	r2, #8187
 540 0070 0A40     		ands	r2, r2, r1
 541 0072 1A61     		str	r2, [r3, #16]
 542              	.L15:
 556:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 557:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the Erase Status */
 558:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return status;
 543              		.loc 1 558 0
 544 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 559:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 545              		.loc 1 559 0
 546 0076 1846     		mov	r0, r3
 547 0078 07F10807 		add	r7, r7, #8
 548 007c BD46     		mov	sp, r7
 549 007e 80BD     		pop	{r7, pc}
 550              		.cfi_endproc
 551              	.LFE38:
 553              		.section	.text.FLASH_EraseOptionBytes,"ax",%progbits
 554              		.align	2
 555              		.global	FLASH_EraseOptionBytes
 556              		.thumb
 557              		.thumb_func
 559              	FLASH_EraseOptionBytes:
 560              	.LFB39:
 560:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 561:../StdPeripheralDriver/src/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 562:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 563:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Erases all Bank2 FLASH pages.
 564:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used only for STM32F10x_XL density devices.
 565:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
 566:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 567:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 568:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 569:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_EraseAllBank2Pages(void)
 570:../StdPeripheralDriver/src/stm32f10x_flash.c **** {
 571:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status status = FLASH_COMPLETE;
 572:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Wait for last operation to be completed */
 573:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_WaitForLastBank2Operation(EraseTimeout);
 574:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 575:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if(status == FLASH_COMPLETE)
 576:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
 577:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* if the previous operation is completed, proceed to erase all pages */
 578:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH->CR2 |= CR_MER_Set;
 579:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH->CR2 |= CR_STRT_Set;
 580:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 581:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 582:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastBank2Operation(EraseTimeout);
 583:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 584:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Disable the MER Bit */
 585:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH->CR2 &= CR_MER_Reset;
 586:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 587:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the Erase Status */
 588:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return status;
 589:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 590:../StdPeripheralDriver/src/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 591:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 592:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 593:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Erases the FLASH option bytes.
 594:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This functions erases all option bytes except the Read protection (RDP). 
 595:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
 596:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
 597:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 598:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 599:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 600:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_EraseOptionBytes(void) {
 561              		.loc 1 600 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 8
 564              		@ frame_needed = 1, uses_anonymous_args = 0
 565 0000 80B5     		push	{r7, lr}
 566              	.LCFI26:
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 7, -8
 569              		.cfi_offset 14, -4
 570 0002 82B0     		sub	sp, sp, #8
 571              	.LCFI27:
 572              		.cfi_def_cfa_offset 16
 573 0004 00AF     		add	r7, sp, #0
 574              	.LCFI28:
 575              		.cfi_def_cfa_register 7
 601:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	uint16_t rdptmp = RDP_Key;
 576              		.loc 1 601 0
 577 0006 4FF0A503 		mov	r3, #165
 578 000a FB80     		strh	r3, [r7, #6]	@ movhi
 602:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 603:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status status = FLASH_COMPLETE;
 579              		.loc 1 603 0
 580 000c 4FF00403 		mov	r3, #4
 581 0010 7B71     		strb	r3, [r7, #5]
 604:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 605:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Get the actual read protection Option Byte value */
 606:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (FLASH_GetReadOutProtectionStatus() != RESET) {
 582              		.loc 1 606 0
 583 0012 FFF7FEFF 		bl	FLASH_GetReadOutProtectionStatus
 584 0016 0346     		mov	r3, r0
 585 0018 002B     		cmp	r3, #0
 586 001a 02D0     		beq	.L18
 607:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		rdptmp = 0x00;
 587              		.loc 1 607 0
 588 001c 4FF00003 		mov	r3, #0
 589 0020 FB80     		strh	r3, [r7, #6]	@ movhi
 590              	.L18:
 608:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 609:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 610:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Wait for last operation to be completed */
 611:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_WaitForLastOperation(EraseTimeout );
 591              		.loc 1 611 0
 592 0022 4FF43020 		mov	r0, #720896
 593 0026 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 594 002a 0346     		mov	r3, r0
 595 002c 7B71     		strb	r3, [r7, #5]
 612:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (status == FLASH_COMPLETE) {
 596              		.loc 1 612 0
 597 002e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 598 0030 042B     		cmp	r3, #4
 599 0032 78D1     		bne	.L19
 613:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Authorize the small information block programming */
 614:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->OPTKEYR = FLASH_KEY1;
 600              		.loc 1 614 0
 601 0034 4FF40053 		mov	r3, #8192
 602 0038 C4F20203 		movt	r3, 16386
 603 003c 40F22312 		movw	r2, #291
 604 0040 C4F26752 		movt	r2, 17767
 605 0044 9A60     		str	r2, [r3, #8]
 615:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->OPTKEYR = FLASH_KEY2;
 606              		.loc 1 615 0
 607 0046 4FF40053 		mov	r3, #8192
 608 004a C4F20203 		movt	r3, 16386
 609 004e 48F6AB12 		movw	r2, #35243
 610 0052 CCF6EF52 		movt	r2, 52719
 611 0056 9A60     		str	r2, [r3, #8]
 616:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 617:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* if the previous operation is completed, proceed to erase the option bytes */FLASH ->CR |=
 612              		.loc 1 617 0
 613 0058 4FF40053 		mov	r3, #8192
 614 005c C4F20203 		movt	r3, 16386
 615 0060 4FF40052 		mov	r2, #8192
 616 0064 C4F20202 		movt	r2, 16386
 617 0068 1269     		ldr	r2, [r2, #16]
 618 006a 42F02002 		orr	r2, r2, #32
 619 006e 1A61     		str	r2, [r3, #16]
 618:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				CR_OPTER_Set;
 619:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR |= CR_STRT_Set;
 620              		.loc 1 619 0
 621 0070 4FF40053 		mov	r3, #8192
 622 0074 C4F20203 		movt	r3, 16386
 623 0078 4FF40052 		mov	r2, #8192
 624 007c C4F20202 		movt	r2, 16386
 625 0080 1269     		ldr	r2, [r2, #16]
 626 0082 42F04002 		orr	r2, r2, #64
 627 0086 1A61     		str	r2, [r3, #16]
 620:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 621:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastOperation(EraseTimeout );
 628              		.loc 1 621 0
 629 0088 4FF43020 		mov	r0, #720896
 630 008c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 631 0090 0346     		mov	r3, r0
 632 0092 7B71     		strb	r3, [r7, #5]
 622:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 623:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if (status == FLASH_COMPLETE) {
 633              		.loc 1 623 0
 634 0094 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 635 0096 042B     		cmp	r3, #4
 636 0098 35D1     		bne	.L20
 624:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the erase operation is completed, disable the OPTER Bit */
 625:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH ->CR &= CR_OPTER_Reset;
 637              		.loc 1 625 0
 638 009a 4FF40053 		mov	r3, #8192
 639 009e C4F20203 		movt	r3, 16386
 640 00a2 4FF40052 		mov	r2, #8192
 641 00a6 C4F20202 		movt	r2, 16386
 642 00aa 1169     		ldr	r1, [r2, #16]
 643 00ac 41F6DF72 		movw	r2, #8159
 644 00b0 0A40     		ands	r2, r2, r1
 645 00b2 1A61     		str	r2, [r3, #16]
 626:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 627:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Enable the Option Bytes Programming operation */FLASH ->CR |=
 646              		.loc 1 627 0
 647 00b4 4FF40053 		mov	r3, #8192
 648 00b8 C4F20203 		movt	r3, 16386
 649 00bc 4FF40052 		mov	r2, #8192
 650 00c0 C4F20202 		movt	r2, 16386
 651 00c4 1269     		ldr	r2, [r2, #16]
 652 00c6 42F01002 		orr	r2, r2, #16
 653 00ca 1A61     		str	r2, [r3, #16]
 628:../StdPeripheralDriver/src/stm32f10x_flash.c **** 					CR_OPTPG_Set;
 629:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Restore the last read protection Option Byte value */OB ->RDP =
 654              		.loc 1 629 0
 655 00cc 4FF47843 		mov	r3, #63488
 656 00d0 C1F6FF73 		movt	r3, 8191
 657 00d4 FA88     		ldrh	r2, [r7, #6]	@ movhi
 658 00d6 1A80     		strh	r2, [r3, #0]	@ movhi
 630:../StdPeripheralDriver/src/stm32f10x_flash.c **** 					(uint16_t) rdptmp;
 631:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
 632:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastOperation(ProgramTimeout );
 659              		.loc 1 632 0
 660 00d8 4FF40050 		mov	r0, #8192
 661 00dc FFF7FEFF 		bl	FLASH_WaitForLastOperation
 662 00e0 0346     		mov	r3, r0
 663 00e2 7B71     		strb	r3, [r7, #5]
 633:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 634:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			if (status != FLASH_TIMEOUT) {
 664              		.loc 1 634 0
 665 00e4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 666 00e6 052B     		cmp	r3, #5
 667 00e8 1DD0     		beq	.L19
 635:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				/* if the program operation is completed, disable the OPTPG Bit */
 636:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				FLASH ->CR &= CR_OPTPG_Reset;
 668              		.loc 1 636 0
 669 00ea 4FF40053 		mov	r3, #8192
 670 00ee C4F20203 		movt	r3, 16386
 671 00f2 4FF40052 		mov	r2, #8192
 672 00f6 C4F20202 		movt	r2, 16386
 673 00fa 1169     		ldr	r1, [r2, #16]
 674 00fc 41F6EF72 		movw	r2, #8175
 675 0100 0A40     		ands	r2, r2, r1
 676 0102 1A61     		str	r2, [r3, #16]
 677 0104 0FE0     		b	.L19
 678              	.L20:
 637:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
 638:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		} else {
 639:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			if (status != FLASH_TIMEOUT) {
 679              		.loc 1 639 0
 680 0106 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 681 0108 052B     		cmp	r3, #5
 682 010a 0CD0     		beq	.L19
 640:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				/* Disable the OPTPG Bit */
 641:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				FLASH ->CR &= CR_OPTPG_Reset;
 683              		.loc 1 641 0
 684 010c 4FF40053 		mov	r3, #8192
 685 0110 C4F20203 		movt	r3, 16386
 686 0114 4FF40052 		mov	r2, #8192
 687 0118 C4F20202 		movt	r2, 16386
 688 011c 1169     		ldr	r1, [r2, #16]
 689 011e 41F6EF72 		movw	r2, #8175
 690 0122 0A40     		ands	r2, r2, r1
 691 0124 1A61     		str	r2, [r3, #16]
 692              	.L19:
 642:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
 643:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 644:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 645:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the erase status */
 646:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return status;
 693              		.loc 1 646 0
 694 0126 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 647:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 695              		.loc 1 647 0
 696 0128 1846     		mov	r0, r3
 697 012a 07F10807 		add	r7, r7, #8
 698 012e BD46     		mov	sp, r7
 699 0130 80BD     		pop	{r7, pc}
 700              		.cfi_endproc
 701              	.LFE39:
 703 0132 00BF     		.section	.text.FLASH_ProgramWord,"ax",%progbits
 704              		.align	2
 705              		.global	FLASH_ProgramWord
 706              		.thumb
 707              		.thumb_func
 709              	FLASH_ProgramWord:
 710              	.LFB40:
 648:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 649:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 650:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Programs a word at a specified address.
 651:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
 652:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  Address: specifies the address to be programmed.
 653:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  Data: specifies the data to be programmed.
 654:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 655:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. 
 656:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 657:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data) {
 711              		.loc 1 657 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 16
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715 0000 80B5     		push	{r7, lr}
 716              	.LCFI29:
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 7, -8
 719              		.cfi_offset 14, -4
 720 0002 84B0     		sub	sp, sp, #16
 721              	.LCFI30:
 722              		.cfi_def_cfa_offset 24
 723 0004 00AF     		add	r7, sp, #0
 724              	.LCFI31:
 725              		.cfi_def_cfa_register 7
 726 0006 7860     		str	r0, [r7, #4]
 727 0008 3960     		str	r1, [r7, #0]
 658:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status status = FLASH_COMPLETE;
 728              		.loc 1 658 0
 729 000a 4FF00403 		mov	r3, #4
 730 000e FB73     		strb	r3, [r7, #15]
 659:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	__IO uint32_t tmp = 0;
 731              		.loc 1 659 0
 732 0010 4FF00003 		mov	r3, #0
 733 0014 BB60     		str	r3, [r7, #8]
 660:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 661:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
 662:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FLASH_ADDRESS(Address));
 663:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 664:../StdPeripheralDriver/src/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 665:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if(Address < FLASH_BANK1_END_ADDRESS - 2)
 666:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
 667:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 668:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastBank1Operation(ProgramTimeout);
 669:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if(status == FLASH_COMPLETE)
 670:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
 671:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the previous operation is completed, proceed to program the new first 
 672:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			 half word */
 673:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR |= CR_PG_Set;
 674:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 675:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			*(__IO uint16_t*)Address = (uint16_t)Data;
 676:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
 677:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastOperation(ProgramTimeout);
 678:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 679:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			if(status == FLASH_COMPLETE)
 680:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			{
 681:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				/* if the previous operation is completed, proceed to program the new second 
 682:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				 half word */
 683:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				tmp = Address + 2;
 684:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 685:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				*(__IO uint16_t*) tmp = Data >> 16;
 686:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 687:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				/* Wait for last operation to be completed */
 688:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				status = FLASH_WaitForLastOperation(ProgramTimeout);
 689:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 690:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				/* Disable the PG Bit */
 691:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				FLASH->CR &= CR_PG_Reset;
 692:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
 693:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			else
 694:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			{
 695:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				/* Disable the PG Bit */
 696:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				FLASH->CR &= CR_PG_Reset;
 697:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
 698:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 699:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 700:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	else if(Address == (FLASH_BANK1_END_ADDRESS - 1))
 701:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
 702:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 703:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastBank1Operation(ProgramTimeout);
 704:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 705:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if(status == FLASH_COMPLETE)
 706:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
 707:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the previous operation is completed, proceed to program the new first 
 708:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			 half word */
 709:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR |= CR_PG_Set;
 710:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 711:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			*(__IO uint16_t*)Address = (uint16_t)Data;
 712:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 713:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
 714:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastBank1Operation(ProgramTimeout);
 715:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 716:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Disable the PG Bit */
 717:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR &= CR_PG_Reset;
 718:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 719:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		else
 720:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
 721:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Disable the PG Bit */
 722:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR &= CR_PG_Reset;
 723:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 724:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 725:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 726:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastBank2Operation(ProgramTimeout);
 727:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 728:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if(status == FLASH_COMPLETE)
 729:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
 730:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the previous operation is completed, proceed to program the new second 
 731:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			 half word */
 732:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR2 |= CR_PG_Set;
 733:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			tmp = Address + 2;
 734:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 735:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			*(__IO uint16_t*) tmp = Data >> 16;
 736:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 737:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
 738:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastBank2Operation(ProgramTimeout);
 739:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 740:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Disable the PG Bit */
 741:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR2 &= CR_PG_Reset;
 742:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 743:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		else
 744:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
 745:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Disable the PG Bit */
 746:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR2 &= CR_PG_Reset;
 747:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 748:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 749:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	else
 750:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
 751:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 752:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastBank2Operation(ProgramTimeout);
 753:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 754:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if(status == FLASH_COMPLETE)
 755:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
 756:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the previous operation is completed, proceed to program the new first 
 757:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			 half word */
 758:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR2 |= CR_PG_Set;
 759:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 760:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			*(__IO uint16_t*)Address = (uint16_t)Data;
 761:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
 762:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastBank2Operation(ProgramTimeout);
 763:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 764:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			if(status == FLASH_COMPLETE)
 765:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			{
 766:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				/* if the previous operation is completed, proceed to program the new second 
 767:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				 half word */
 768:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				tmp = Address + 2;
 769:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 770:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				*(__IO uint16_t*) tmp = Data >> 16;
 771:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 772:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				/* Wait for last operation to be completed */
 773:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				status = FLASH_WaitForLastBank2Operation(ProgramTimeout);
 774:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 775:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				/* Disable the PG Bit */
 776:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				FLASH->CR2 &= CR_PG_Reset;
 777:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
 778:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			else
 779:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			{
 780:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				/* Disable the PG Bit */
 781:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				FLASH->CR2 &= CR_PG_Reset;
 782:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
 783:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 784:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 785:../StdPeripheralDriver/src/stm32f10x_flash.c **** #else
 786:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Wait for last operation to be completed */
 787:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_WaitForLastOperation(ProgramTimeout );
 734              		.loc 1 787 0
 735 0016 4FF40050 		mov	r0, #8192
 736 001a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 737 001e 0346     		mov	r3, r0
 738 0020 FB73     		strb	r3, [r7, #15]
 788:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 789:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (status == FLASH_COMPLETE) {
 739              		.loc 1 789 0
 740 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 741 0024 042B     		cmp	r3, #4
 742 0026 43D1     		bne	.L23
 790:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* if the previous operation is completed, proceed to program the new first 
 791:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		 half word */
 792:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR |= CR_PG_Set;
 743              		.loc 1 792 0
 744 0028 4FF40053 		mov	r3, #8192
 745 002c C4F20203 		movt	r3, 16386
 746 0030 4FF40052 		mov	r2, #8192
 747 0034 C4F20202 		movt	r2, 16386
 748 0038 1269     		ldr	r2, [r2, #16]
 749 003a 42F00102 		orr	r2, r2, #1
 750 003e 1A61     		str	r2, [r3, #16]
 793:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 794:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		*(__IO uint16_t*) Address = (uint16_t) Data;
 751              		.loc 1 794 0
 752 0040 7B68     		ldr	r3, [r7, #4]
 753 0042 3A68     		ldr	r2, [r7, #0]
 754 0044 92B2     		uxth	r2, r2
 755 0046 1A80     		strh	r2, [r3, #0]	@ movhi
 795:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 796:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastOperation(ProgramTimeout );
 756              		.loc 1 796 0
 757 0048 4FF40050 		mov	r0, #8192
 758 004c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 759 0050 0346     		mov	r3, r0
 760 0052 FB73     		strb	r3, [r7, #15]
 797:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 798:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if (status == FLASH_COMPLETE) {
 761              		.loc 1 798 0
 762 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 763 0056 042B     		cmp	r3, #4
 764 0058 1DD1     		bne	.L24
 799:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the previous operation is completed, proceed to program the new second 
 800:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			 half word */
 801:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			tmp = Address + 2;
 765              		.loc 1 801 0
 766 005a 7B68     		ldr	r3, [r7, #4]
 767 005c 03F10203 		add	r3, r3, #2
 768 0060 BB60     		str	r3, [r7, #8]
 802:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 803:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			*(__IO uint16_t*) tmp = Data >> 16;
 769              		.loc 1 803 0
 770 0062 BB68     		ldr	r3, [r7, #8]
 771 0064 3A68     		ldr	r2, [r7, #0]
 772 0066 4FEA1242 		lsr	r2, r2, #16
 773 006a 92B2     		uxth	r2, r2
 774 006c 1A80     		strh	r2, [r3, #0]	@ movhi
 804:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 805:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
 806:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastOperation(ProgramTimeout );
 775              		.loc 1 806 0
 776 006e 4FF40050 		mov	r0, #8192
 777 0072 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 778 0076 0346     		mov	r3, r0
 779 0078 FB73     		strb	r3, [r7, #15]
 807:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 808:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Disable the PG Bit */
 809:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH ->CR &= CR_PG_Reset;
 780              		.loc 1 809 0
 781 007a 4FF40053 		mov	r3, #8192
 782 007e C4F20203 		movt	r3, 16386
 783 0082 4FF40052 		mov	r2, #8192
 784 0086 C4F20202 		movt	r2, 16386
 785 008a 1169     		ldr	r1, [r2, #16]
 786 008c 41F6FE72 		movw	r2, #8190
 787 0090 0A40     		ands	r2, r2, r1
 788 0092 1A61     		str	r2, [r3, #16]
 789 0094 0CE0     		b	.L23
 790              	.L24:
 810:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		} else {
 811:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Disable the PG Bit */
 812:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH ->CR &= CR_PG_Reset;
 791              		.loc 1 812 0
 792 0096 4FF40053 		mov	r3, #8192
 793 009a C4F20203 		movt	r3, 16386
 794 009e 4FF40052 		mov	r2, #8192
 795 00a2 C4F20202 		movt	r2, 16386
 796 00a6 1169     		ldr	r1, [r2, #16]
 797 00a8 41F6FE72 		movw	r2, #8190
 798 00ac 0A40     		ands	r2, r2, r1
 799 00ae 1A61     		str	r2, [r3, #16]
 800              	.L23:
 813:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 814:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 815:../StdPeripheralDriver/src/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
 816:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 817:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the Program Status */
 818:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return status;
 801              		.loc 1 818 0
 802 00b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 819:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 803              		.loc 1 819 0
 804 00b2 1846     		mov	r0, r3
 805 00b4 07F11007 		add	r7, r7, #16
 806 00b8 BD46     		mov	sp, r7
 807 00ba 80BD     		pop	{r7, pc}
 808              		.cfi_endproc
 809              	.LFE40:
 811              		.section	.text.FLASH_ProgramHalfWord,"ax",%progbits
 812              		.align	2
 813              		.global	FLASH_ProgramHalfWord
 814              		.thumb
 815              		.thumb_func
 817              	FLASH_ProgramHalfWord:
 818              	.LFB41:
 820:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 821:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 822:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Programs a half word at a specified address.
 823:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
 824:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  Address: specifies the address to be programmed.
 825:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  Data: specifies the data to be programmed.
 826:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 827:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. 
 828:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 829:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data) {
 819              		.loc 1 829 0
 820              		.cfi_startproc
 821              		@ args = 0, pretend = 0, frame = 16
 822              		@ frame_needed = 1, uses_anonymous_args = 0
 823 0000 80B5     		push	{r7, lr}
 824              	.LCFI32:
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 7, -8
 827              		.cfi_offset 14, -4
 828 0002 84B0     		sub	sp, sp, #16
 829              	.LCFI33:
 830              		.cfi_def_cfa_offset 24
 831 0004 00AF     		add	r7, sp, #0
 832              	.LCFI34:
 833              		.cfi_def_cfa_register 7
 834 0006 7860     		str	r0, [r7, #4]
 835 0008 0B46     		mov	r3, r1
 836 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 830:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status status = FLASH_COMPLETE;
 837              		.loc 1 830 0
 838 000c 4FF00403 		mov	r3, #4
 839 0010 FB73     		strb	r3, [r7, #15]
 831:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
 832:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FLASH_ADDRESS(Address));
 833:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 834:../StdPeripheralDriver/src/stm32f10x_flash.c **** #ifdef STM32F10X_XL
 835:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Wait for last operation to be completed */
 836:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_WaitForLastOperation(ProgramTimeout);
 837:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 838:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if(Address < FLASH_BANK1_END_ADDRESS)
 839:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
 840:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if(status == FLASH_COMPLETE)
 841:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
 842:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the previous operation is completed, proceed to program the new data */
 843:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR |= CR_PG_Set;
 844:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 845:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			*(__IO uint16_t*)Address = Data;
 846:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
 847:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastBank1Operation(ProgramTimeout);
 848:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 849:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Disable the PG Bit */
 850:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR &= CR_PG_Reset;
 851:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 852:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 853:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	else
 854:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
 855:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if(status == FLASH_COMPLETE)
 856:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
 857:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the previous operation is completed, proceed to program the new data */
 858:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR2 |= CR_PG_Set;
 859:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 860:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			*(__IO uint16_t*)Address = Data;
 861:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
 862:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastBank2Operation(ProgramTimeout);
 863:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 864:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Disable the PG Bit */
 865:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR2 &= CR_PG_Reset;
 866:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 867:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 868:../StdPeripheralDriver/src/stm32f10x_flash.c **** #else
 869:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Wait for last operation to be completed */
 870:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_WaitForLastOperation(ProgramTimeout );
 840              		.loc 1 870 0
 841 0012 4FF40050 		mov	r0, #8192
 842 0016 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 843 001a 0346     		mov	r3, r0
 844 001c FB73     		strb	r3, [r7, #15]
 871:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 872:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (status == FLASH_COMPLETE) {
 845              		.loc 1 872 0
 846 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 847 0020 042B     		cmp	r3, #4
 848 0022 21D1     		bne	.L27
 873:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* if the previous operation is completed, proceed to program the new data */
 874:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR |= CR_PG_Set;
 849              		.loc 1 874 0
 850 0024 4FF40053 		mov	r3, #8192
 851 0028 C4F20203 		movt	r3, 16386
 852 002c 4FF40052 		mov	r2, #8192
 853 0030 C4F20202 		movt	r2, 16386
 854 0034 1269     		ldr	r2, [r2, #16]
 855 0036 42F00102 		orr	r2, r2, #1
 856 003a 1A61     		str	r2, [r3, #16]
 875:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 876:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		*(__IO uint16_t*) Address = Data;
 857              		.loc 1 876 0
 858 003c 7B68     		ldr	r3, [r7, #4]
 859 003e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 860 0040 1A80     		strh	r2, [r3, #0]	@ movhi
 877:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 878:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastOperation(ProgramTimeout );
 861              		.loc 1 878 0
 862 0042 4FF40050 		mov	r0, #8192
 863 0046 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 864 004a 0346     		mov	r3, r0
 865 004c FB73     		strb	r3, [r7, #15]
 879:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 880:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Disable the PG Bit */
 881:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR &= CR_PG_Reset;
 866              		.loc 1 881 0
 867 004e 4FF40053 		mov	r3, #8192
 868 0052 C4F20203 		movt	r3, 16386
 869 0056 4FF40052 		mov	r2, #8192
 870 005a C4F20202 		movt	r2, 16386
 871 005e 1169     		ldr	r1, [r2, #16]
 872 0060 41F6FE72 		movw	r2, #8190
 873 0064 0A40     		ands	r2, r2, r1
 874 0066 1A61     		str	r2, [r3, #16]
 875              	.L27:
 882:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 883:../StdPeripheralDriver/src/stm32f10x_flash.c **** #endif  /* STM32F10X_XL */
 884:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 885:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the Program Status */
 886:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return status;
 876              		.loc 1 886 0
 877 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 887:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 878              		.loc 1 887 0
 879 006a 1846     		mov	r0, r3
 880 006c 07F11007 		add	r7, r7, #16
 881 0070 BD46     		mov	sp, r7
 882 0072 80BD     		pop	{r7, pc}
 883              		.cfi_endproc
 884              	.LFE41:
 886              		.section	.text.FLASH_ProgramOptionByteData,"ax",%progbits
 887              		.align	2
 888              		.global	FLASH_ProgramOptionByteData
 889              		.thumb
 890              		.thumb_func
 892              	FLASH_ProgramOptionByteData:
 893              	.LFB42:
 888:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 889:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 890:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Programs a half word at a specified Option Byte Data address.
 891:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
 892:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  Address: specifies the address to be programmed.
 893:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   This parameter can be 0x1FFFF804 or 0x1FFFF806. 
 894:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  Data: specifies the data to be programmed.
 895:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 896:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT. 
 897:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 898:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_ProgramOptionByteData(uint32_t Address, uint8_t Data) {
 894              		.loc 1 898 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 16
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898 0000 80B5     		push	{r7, lr}
 899              	.LCFI35:
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 7, -8
 902              		.cfi_offset 14, -4
 903 0002 84B0     		sub	sp, sp, #16
 904              	.LCFI36:
 905              		.cfi_def_cfa_offset 24
 906 0004 00AF     		add	r7, sp, #0
 907              	.LCFI37:
 908              		.cfi_def_cfa_register 7
 909 0006 7860     		str	r0, [r7, #4]
 910 0008 0B46     		mov	r3, r1
 911 000a FB70     		strb	r3, [r7, #3]
 899:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status status = FLASH_COMPLETE;
 912              		.loc 1 899 0
 913 000c 4FF00403 		mov	r3, #4
 914 0010 FB73     		strb	r3, [r7, #15]
 900:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
 901:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_OB_DATA_ADDRESS(Address));
 902:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_WaitForLastOperation(ProgramTimeout );
 915              		.loc 1 902 0
 916 0012 4FF40050 		mov	r0, #8192
 917 0016 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 918 001a 0346     		mov	r3, r0
 919 001c FB73     		strb	r3, [r7, #15]
 903:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 904:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (status == FLASH_COMPLETE) {
 920              		.loc 1 904 0
 921 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 922 0020 042B     		cmp	r3, #4
 923 0022 37D1     		bne	.L30
 905:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Authorize the small information block programming */
 906:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->OPTKEYR = FLASH_KEY1;
 924              		.loc 1 906 0
 925 0024 4FF40053 		mov	r3, #8192
 926 0028 C4F20203 		movt	r3, 16386
 927 002c 40F22312 		movw	r2, #291
 928 0030 C4F26752 		movt	r2, 17767
 929 0034 9A60     		str	r2, [r3, #8]
 907:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->OPTKEYR = FLASH_KEY2;
 930              		.loc 1 907 0
 931 0036 4FF40053 		mov	r3, #8192
 932 003a C4F20203 		movt	r3, 16386
 933 003e 48F6AB12 		movw	r2, #35243
 934 0042 CCF6EF52 		movt	r2, 52719
 935 0046 9A60     		str	r2, [r3, #8]
 908:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Enables the Option Bytes Programming operation */FLASH ->CR |=
 936              		.loc 1 908 0
 937 0048 4FF40053 		mov	r3, #8192
 938 004c C4F20203 		movt	r3, 16386
 939 0050 4FF40052 		mov	r2, #8192
 940 0054 C4F20202 		movt	r2, 16386
 941 0058 1269     		ldr	r2, [r2, #16]
 942 005a 42F01002 		orr	r2, r2, #16
 943 005e 1A61     		str	r2, [r3, #16]
 909:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				CR_OPTPG_Set;
 910:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		*(__IO uint16_t*) Address = Data;
 944              		.loc 1 910 0
 945 0060 7B68     		ldr	r3, [r7, #4]
 946 0062 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 947 0064 92B2     		uxth	r2, r2
 948 0066 1A80     		strh	r2, [r3, #0]	@ movhi
 911:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 912:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
 913:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastOperation(ProgramTimeout );
 949              		.loc 1 913 0
 950 0068 4FF40050 		mov	r0, #8192
 951 006c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 952 0070 0346     		mov	r3, r0
 953 0072 FB73     		strb	r3, [r7, #15]
 914:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if (status != FLASH_TIMEOUT) {
 954              		.loc 1 914 0
 955 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 956 0076 052B     		cmp	r3, #5
 957 0078 0CD0     		beq	.L30
 915:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the program operation is completed, disable the OPTPG Bit */
 916:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH ->CR &= CR_OPTPG_Reset;
 958              		.loc 1 916 0
 959 007a 4FF40053 		mov	r3, #8192
 960 007e C4F20203 		movt	r3, 16386
 961 0082 4FF40052 		mov	r2, #8192
 962 0086 C4F20202 		movt	r2, 16386
 963 008a 1169     		ldr	r1, [r2, #16]
 964 008c 41F6EF72 		movw	r2, #8175
 965 0090 0A40     		ands	r2, r2, r1
 966 0092 1A61     		str	r2, [r3, #16]
 967              	.L30:
 917:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 918:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 919:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the Option Byte Data Program Status */
 920:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return status;
 968              		.loc 1 920 0
 969 0094 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 921:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 970              		.loc 1 921 0
 971 0096 1846     		mov	r0, r3
 972 0098 07F11007 		add	r7, r7, #16
 973 009c BD46     		mov	sp, r7
 974 009e 80BD     		pop	{r7, pc}
 975              		.cfi_endproc
 976              	.LFE42:
 978              		.section	.text.FLASH_EnableWriteProtection,"ax",%progbits
 979              		.align	2
 980              		.global	FLASH_EnableWriteProtection
 981              		.thumb
 982              		.thumb_func
 984              	FLASH_EnableWriteProtection:
 985              	.LFB43:
 922:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 923:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
 924:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Write protects the desired pages
 925:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
 926:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  FLASH_Pages: specifies the address of the pages to be write protected.
 927:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   This parameter can be:
 928:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg For @b STM32_Low-density_devices: value between FLASH_WRProt_Pages0to3 and FLASH_WRProt
 929:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg For @b STM32_Medium-density_devices: value between FLASH_WRProt_Pages0to3
 930:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *       and FLASH_WRProt_Pages124to127
 931:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg For @b STM32_High-density_devices: value between FLASH_WRProt_Pages0to1 and
 932:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *       FLASH_WRProt_Pages60to61 or FLASH_WRProt_Pages62to255
 933:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg For @b STM32_Connectivity_line_devices: value between FLASH_WRProt_Pages0to1 and
 934:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *       FLASH_WRProt_Pages60to61 or FLASH_WRProt_Pages62to127    
 935:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg For @b STM32_XL-density_devices: value between FLASH_WRProt_Pages0to1 and
 936:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *       FLASH_WRProt_Pages60to61 or FLASH_WRProt_Pages62to511
 937:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_WRProt_AllPages
 938:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
 939:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
 940:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
 941:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_EnableWriteProtection(uint32_t FLASH_Pages) {
 986              		.loc 1 941 0
 987              		.cfi_startproc
 988              		@ args = 0, pretend = 0, frame = 24
 989              		@ frame_needed = 1, uses_anonymous_args = 0
 990 0000 80B5     		push	{r7, lr}
 991              	.LCFI38:
 992              		.cfi_def_cfa_offset 8
 993              		.cfi_offset 7, -8
 994              		.cfi_offset 14, -4
 995 0002 86B0     		sub	sp, sp, #24
 996              	.LCFI39:
 997              		.cfi_def_cfa_offset 32
 998 0004 00AF     		add	r7, sp, #0
 999              	.LCFI40:
 1000              		.cfi_def_cfa_register 7
 1001 0006 7860     		str	r0, [r7, #4]
 942:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	uint16_t WRP0_Data = 0xFFFF, WRP1_Data = 0xFFFF, WRP2_Data = 0xFFFF,
 1002              		.loc 1 942 0
 1003 0008 4FF6FF73 		movw	r3, #65535
 1004 000c BB82     		strh	r3, [r7, #20]	@ movhi
 1005 000e 4FF6FF73 		movw	r3, #65535
 1006 0012 7B82     		strh	r3, [r7, #18]	@ movhi
 1007 0014 4FF6FF73 		movw	r3, #65535
 1008 0018 3B82     		strh	r3, [r7, #16]	@ movhi
 943:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			WRP3_Data = 0xFFFF;
 1009              		.loc 1 943 0
 1010 001a 4FF6FF73 		movw	r3, #65535
 1011 001e FB81     		strh	r3, [r7, #14]	@ movhi
 944:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 945:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status status = FLASH_COMPLETE;
 1012              		.loc 1 945 0
 1013 0020 4FF00403 		mov	r3, #4
 1014 0024 FB75     		strb	r3, [r7, #23]
 946:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 947:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
 948:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FLASH_WRPROT_PAGE(FLASH_Pages));
 949:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 950:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Pages = (uint32_t) (~FLASH_Pages);
 1015              		.loc 1 950 0
 1016 0026 7B68     		ldr	r3, [r7, #4]
 1017 0028 6FEA0303 		mvn	r3, r3
 1018 002c 7B60     		str	r3, [r7, #4]
 951:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	WRP0_Data = (uint16_t) (FLASH_Pages & WRP0_Mask );
 1019              		.loc 1 951 0
 1020 002e 7B68     		ldr	r3, [r7, #4]
 1021 0030 9BB2     		uxth	r3, r3
 1022 0032 DBB2     		uxtb	r3, r3
 1023 0034 BB82     		strh	r3, [r7, #20]	@ movhi
 952:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	WRP1_Data = (uint16_t) ((FLASH_Pages & WRP1_Mask )>> 8);
 1024              		.loc 1 952 0
 1025 0036 7B68     		ldr	r3, [r7, #4]
 1026 0038 03F47F43 		and	r3, r3, #65280
 1027 003c 4FEA1323 		lsr	r3, r3, #8
 1028 0040 7B82     		strh	r3, [r7, #18]	@ movhi
 953:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	WRP2_Data = (uint16_t) ((FLASH_Pages & WRP2_Mask )>> 16);
 1029              		.loc 1 953 0
 1030 0042 7B68     		ldr	r3, [r7, #4]
 1031 0044 03F47F03 		and	r3, r3, #16711680
 1032 0048 4FEA1343 		lsr	r3, r3, #16
 1033 004c 3B82     		strh	r3, [r7, #16]	@ movhi
 954:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	WRP3_Data = (uint16_t) ((FLASH_Pages & WRP3_Mask )>> 24);
 1034              		.loc 1 954 0
 1035 004e 7B68     		ldr	r3, [r7, #4]
 1036 0050 4FEA1363 		lsr	r3, r3, #24
 1037 0054 FB81     		strh	r3, [r7, #14]	@ movhi
 955:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 956:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Wait for last operation to be completed */
 957:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_WaitForLastOperation(ProgramTimeout );
 1038              		.loc 1 957 0
 1039 0056 4FF40050 		mov	r0, #8192
 1040 005a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1041 005e 0346     		mov	r3, r0
 1042 0060 FB75     		strb	r3, [r7, #23]
 958:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 959:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (status == FLASH_COMPLETE) {
 1043              		.loc 1 959 0
 1044 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1045 0064 042B     		cmp	r3, #4
 1046 0066 72D1     		bne	.L33
 960:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Authorizes the small information block programming */
 961:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->OPTKEYR = FLASH_KEY1;
 1047              		.loc 1 961 0
 1048 0068 4FF40053 		mov	r3, #8192
 1049 006c C4F20203 		movt	r3, 16386
 1050 0070 40F22312 		movw	r2, #291
 1051 0074 C4F26752 		movt	r2, 17767
 1052 0078 9A60     		str	r2, [r3, #8]
 962:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->OPTKEYR = FLASH_KEY2;
 1053              		.loc 1 962 0
 1054 007a 4FF40053 		mov	r3, #8192
 1055 007e C4F20203 		movt	r3, 16386
 1056 0082 48F6AB12 		movw	r2, #35243
 1057 0086 CCF6EF52 		movt	r2, 52719
 1058 008a 9A60     		str	r2, [r3, #8]
 963:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR |= CR_OPTPG_Set;
 1059              		.loc 1 963 0
 1060 008c 4FF40053 		mov	r3, #8192
 1061 0090 C4F20203 		movt	r3, 16386
 1062 0094 4FF40052 		mov	r2, #8192
 1063 0098 C4F20202 		movt	r2, 16386
 1064 009c 1269     		ldr	r2, [r2, #16]
 1065 009e 42F01002 		orr	r2, r2, #16
 1066 00a2 1A61     		str	r2, [r3, #16]
 964:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if (WRP0_Data != 0xFF) {
 1067              		.loc 1 964 0
 1068 00a4 BB8A     		ldrh	r3, [r7, #20]
 1069 00a6 FF2B     		cmp	r3, #255
 1070 00a8 0BD0     		beq	.L34
 965:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			OB ->WRP0 = WRP0_Data;
 1071              		.loc 1 965 0
 1072 00aa 4FF47843 		mov	r3, #63488
 1073 00ae C1F6FF73 		movt	r3, 8191
 1074 00b2 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 1075 00b4 1A81     		strh	r2, [r3, #8]	@ movhi
 966:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 967:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
 968:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastOperation(ProgramTimeout );
 1076              		.loc 1 968 0
 1077 00b6 4FF40050 		mov	r0, #8192
 1078 00ba FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1079 00be 0346     		mov	r3, r0
 1080 00c0 FB75     		strb	r3, [r7, #23]
 1081              	.L34:
 969:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 970:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if ((status == FLASH_COMPLETE) && (WRP1_Data != 0xFF)) {
 1082              		.loc 1 970 0
 1083 00c2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1084 00c4 042B     		cmp	r3, #4
 1085 00c6 0ED1     		bne	.L35
 1086              		.loc 1 970 0 is_stmt 0 discriminator 1
 1087 00c8 7B8A     		ldrh	r3, [r7, #18]
 1088 00ca FF2B     		cmp	r3, #255
 1089 00cc 0BD0     		beq	.L35
 971:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			OB ->WRP1 = WRP1_Data;
 1090              		.loc 1 971 0 is_stmt 1
 1091 00ce 4FF47843 		mov	r3, #63488
 1092 00d2 C1F6FF73 		movt	r3, 8191
 1093 00d6 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 1094 00d8 5A81     		strh	r2, [r3, #10]	@ movhi
 972:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 973:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
 974:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastOperation(ProgramTimeout );
 1095              		.loc 1 974 0
 1096 00da 4FF40050 		mov	r0, #8192
 1097 00de FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1098 00e2 0346     		mov	r3, r0
 1099 00e4 FB75     		strb	r3, [r7, #23]
 1100              	.L35:
 975:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 976:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if ((status == FLASH_COMPLETE) && (WRP2_Data != 0xFF)) {
 1101              		.loc 1 976 0
 1102 00e6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1103 00e8 042B     		cmp	r3, #4
 1104 00ea 0ED1     		bne	.L36
 1105              		.loc 1 976 0 is_stmt 0 discriminator 1
 1106 00ec 3B8A     		ldrh	r3, [r7, #16]
 1107 00ee FF2B     		cmp	r3, #255
 1108 00f0 0BD0     		beq	.L36
 977:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			OB ->WRP2 = WRP2_Data;
 1109              		.loc 1 977 0 is_stmt 1
 1110 00f2 4FF47843 		mov	r3, #63488
 1111 00f6 C1F6FF73 		movt	r3, 8191
 1112 00fa 3A8A     		ldrh	r2, [r7, #16]	@ movhi
 1113 00fc 9A81     		strh	r2, [r3, #12]	@ movhi
 978:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 979:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
 980:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastOperation(ProgramTimeout );
 1114              		.loc 1 980 0
 1115 00fe 4FF40050 		mov	r0, #8192
 1116 0102 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1117 0106 0346     		mov	r3, r0
 1118 0108 FB75     		strb	r3, [r7, #23]
 1119              	.L36:
 981:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 982:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 983:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if ((status == FLASH_COMPLETE) && (WRP3_Data != 0xFF)) {
 1120              		.loc 1 983 0
 1121 010a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1122 010c 042B     		cmp	r3, #4
 1123 010e 0ED1     		bne	.L37
 1124              		.loc 1 983 0 is_stmt 0 discriminator 1
 1125 0110 FB89     		ldrh	r3, [r7, #14]
 1126 0112 FF2B     		cmp	r3, #255
 1127 0114 0BD0     		beq	.L37
 984:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			OB ->WRP3 = WRP3_Data;
 1128              		.loc 1 984 0 is_stmt 1
 1129 0116 4FF47843 		mov	r3, #63488
 1130 011a C1F6FF73 		movt	r3, 8191
 1131 011e FA89     		ldrh	r2, [r7, #14]	@ movhi
 1132 0120 DA81     		strh	r2, [r3, #14]	@ movhi
 985:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 986:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
 987:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastOperation(ProgramTimeout );
 1133              		.loc 1 987 0
 1134 0122 4FF40050 		mov	r0, #8192
 1135 0126 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1136 012a 0346     		mov	r3, r0
 1137 012c FB75     		strb	r3, [r7, #23]
 1138              	.L37:
 988:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 989:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 990:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if (status != FLASH_TIMEOUT) {
 1139              		.loc 1 990 0
 1140 012e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1141 0130 052B     		cmp	r3, #5
 1142 0132 0CD0     		beq	.L33
 991:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the program operation is completed, disable the OPTPG Bit */
 992:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH ->CR &= CR_OPTPG_Reset;
 1143              		.loc 1 992 0
 1144 0134 4FF40053 		mov	r3, #8192
 1145 0138 C4F20203 		movt	r3, 16386
 1146 013c 4FF40052 		mov	r2, #8192
 1147 0140 C4F20202 		movt	r2, 16386
 1148 0144 1169     		ldr	r1, [r2, #16]
 1149 0146 41F6EF72 		movw	r2, #8175
 1150 014a 0A40     		ands	r2, r2, r1
 1151 014c 1A61     		str	r2, [r3, #16]
 1152              	.L33:
 993:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
 994:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
 995:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the write protection operation Status */
 996:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return status;
 1153              		.loc 1 996 0
 1154 014e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 997:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 1155              		.loc 1 997 0
 1156 0150 1846     		mov	r0, r3
 1157 0152 07F11807 		add	r7, r7, #24
 1158 0156 BD46     		mov	sp, r7
 1159 0158 80BD     		pop	{r7, pc}
 1160              		.cfi_endproc
 1161              	.LFE43:
 1163 015a 00BF     		.section	.text.FLASH_ReadOutProtection,"ax",%progbits
 1164              		.align	2
 1165              		.global	FLASH_ReadOutProtection
 1166              		.thumb
 1167              		.thumb_func
 1169              	FLASH_ReadOutProtection:
 1170              	.LFB44:
 998:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
 999:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1000:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Enables or disables the read out protection.
1001:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   If the user has already programmed the other option bytes before calling 
1002:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   this function, he must re-program them since this function erases all option bytes.
1003:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
1004:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  Newstate: new state of the ReadOut Protection.
1005:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   This parameter can be: ENABLE or DISABLE.
1006:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
1007:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
1008:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1009:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_ReadOutProtection(FunctionalState NewState) {
 1171              		.loc 1 1009 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 16
 1174              		@ frame_needed = 1, uses_anonymous_args = 0
 1175 0000 80B5     		push	{r7, lr}
 1176              	.LCFI41:
 1177              		.cfi_def_cfa_offset 8
 1178              		.cfi_offset 7, -8
 1179              		.cfi_offset 14, -4
 1180 0002 84B0     		sub	sp, sp, #16
 1181              	.LCFI42:
 1182              		.cfi_def_cfa_offset 24
 1183 0004 00AF     		add	r7, sp, #0
 1184              	.LCFI43:
 1185              		.cfi_def_cfa_register 7
 1186 0006 0346     		mov	r3, r0
 1187 0008 FB71     		strb	r3, [r7, #7]
1010:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status status = FLASH_COMPLETE;
 1188              		.loc 1 1010 0
 1189 000a 4FF00403 		mov	r3, #4
 1190 000e FB73     		strb	r3, [r7, #15]
1011:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
1012:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FUNCTIONAL_STATE(NewState));
1013:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_WaitForLastOperation(EraseTimeout );
 1191              		.loc 1 1013 0
 1192 0010 4FF43020 		mov	r0, #720896
 1193 0014 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1194 0018 0346     		mov	r3, r0
 1195 001a FB73     		strb	r3, [r7, #15]
1014:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (status == FLASH_COMPLETE) {
 1196              		.loc 1 1014 0
 1197 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1198 001e 042B     		cmp	r3, #4
 1199 0020 40F08580 		bne	.L40
1015:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Authorizes the small information block programming */
1016:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->OPTKEYR = FLASH_KEY1;
 1200              		.loc 1 1016 0
 1201 0024 4FF40053 		mov	r3, #8192
 1202 0028 C4F20203 		movt	r3, 16386
 1203 002c 40F22312 		movw	r2, #291
 1204 0030 C4F26752 		movt	r2, 17767
 1205 0034 9A60     		str	r2, [r3, #8]
1017:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->OPTKEYR = FLASH_KEY2;
 1206              		.loc 1 1017 0
 1207 0036 4FF40053 		mov	r3, #8192
 1208 003a C4F20203 		movt	r3, 16386
 1209 003e 48F6AB12 		movw	r2, #35243
 1210 0042 CCF6EF52 		movt	r2, 52719
 1211 0046 9A60     		str	r2, [r3, #8]
1018:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR |= CR_OPTER_Set;
 1212              		.loc 1 1018 0
 1213 0048 4FF40053 		mov	r3, #8192
 1214 004c C4F20203 		movt	r3, 16386
 1215 0050 4FF40052 		mov	r2, #8192
 1216 0054 C4F20202 		movt	r2, 16386
 1217 0058 1269     		ldr	r2, [r2, #16]
 1218 005a 42F02002 		orr	r2, r2, #32
 1219 005e 1A61     		str	r2, [r3, #16]
1019:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR |= CR_STRT_Set;
 1220              		.loc 1 1019 0
 1221 0060 4FF40053 		mov	r3, #8192
 1222 0064 C4F20203 		movt	r3, 16386
 1223 0068 4FF40052 		mov	r2, #8192
 1224 006c C4F20202 		movt	r2, 16386
 1225 0070 1269     		ldr	r2, [r2, #16]
 1226 0072 42F04002 		orr	r2, r2, #64
 1227 0076 1A61     		str	r2, [r3, #16]
1020:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
1021:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastOperation(EraseTimeout );
 1228              		.loc 1 1021 0
 1229 0078 4FF43020 		mov	r0, #720896
 1230 007c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1231 0080 0346     		mov	r3, r0
 1232 0082 FB73     		strb	r3, [r7, #15]
1022:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if (status == FLASH_COMPLETE) {
 1233              		.loc 1 1022 0
 1234 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1235 0086 042B     		cmp	r3, #4
 1236 0088 41D1     		bne	.L41
1023:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the erase operation is completed, disable the OPTER Bit */
1024:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH ->CR &= CR_OPTER_Reset;
 1237              		.loc 1 1024 0
 1238 008a 4FF40053 		mov	r3, #8192
 1239 008e C4F20203 		movt	r3, 16386
 1240 0092 4FF40052 		mov	r2, #8192
 1241 0096 C4F20202 		movt	r2, 16386
 1242 009a 1169     		ldr	r1, [r2, #16]
 1243 009c 41F6DF72 		movw	r2, #8159
 1244 00a0 0A40     		ands	r2, r2, r1
 1245 00a2 1A61     		str	r2, [r3, #16]
1025:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Enable the Option Bytes Programming operation */FLASH ->CR |=
 1246              		.loc 1 1025 0
 1247 00a4 4FF40053 		mov	r3, #8192
 1248 00a8 C4F20203 		movt	r3, 16386
 1249 00ac 4FF40052 		mov	r2, #8192
 1250 00b0 C4F20202 		movt	r2, 16386
 1251 00b4 1269     		ldr	r2, [r2, #16]
 1252 00b6 42F01002 		orr	r2, r2, #16
 1253 00ba 1A61     		str	r2, [r3, #16]
1026:../StdPeripheralDriver/src/stm32f10x_flash.c **** 					CR_OPTPG_Set;
1027:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			if (NewState != DISABLE) {
 1254              		.loc 1 1027 0
 1255 00bc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1256 00be 002B     		cmp	r3, #0
 1257 00c0 07D0     		beq	.L42
1028:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				OB ->RDP = 0x00;
 1258              		.loc 1 1028 0
 1259 00c2 4FF47843 		mov	r3, #63488
 1260 00c6 C1F6FF73 		movt	r3, 8191
 1261 00ca 4FF00002 		mov	r2, #0
 1262 00ce 1A80     		strh	r2, [r3, #0]	@ movhi
 1263 00d0 06E0     		b	.L43
 1264              	.L42:
1029:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			} else {
1030:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				OB ->RDP = RDP_Key;
 1265              		.loc 1 1030 0
 1266 00d2 4FF47843 		mov	r3, #63488
 1267 00d6 C1F6FF73 		movt	r3, 8191
 1268 00da 4FF0A502 		mov	r2, #165
 1269 00de 1A80     		strh	r2, [r3, #0]	@ movhi
 1270              	.L43:
1031:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
1032:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Wait for last operation to be completed */
1033:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			status = FLASH_WaitForLastOperation(EraseTimeout );
 1271              		.loc 1 1033 0
 1272 00e0 4FF43020 		mov	r0, #720896
 1273 00e4 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1274 00e8 0346     		mov	r3, r0
 1275 00ea FB73     		strb	r3, [r7, #15]
1034:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1035:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			if (status != FLASH_TIMEOUT) {
 1276              		.loc 1 1035 0
 1277 00ec FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1278 00ee 052B     		cmp	r3, #5
 1279 00f0 1DD0     		beq	.L40
1036:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				/* if the program operation is completed, disable the OPTPG Bit */
1037:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				FLASH ->CR &= CR_OPTPG_Reset;
 1280              		.loc 1 1037 0
 1281 00f2 4FF40053 		mov	r3, #8192
 1282 00f6 C4F20203 		movt	r3, 16386
 1283 00fa 4FF40052 		mov	r2, #8192
 1284 00fe C4F20202 		movt	r2, 16386
 1285 0102 1169     		ldr	r1, [r2, #16]
 1286 0104 41F6EF72 		movw	r2, #8175
 1287 0108 0A40     		ands	r2, r2, r1
 1288 010a 1A61     		str	r2, [r3, #16]
 1289 010c 0FE0     		b	.L40
 1290              	.L41:
1038:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
1039:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		} else {
1040:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			if (status != FLASH_TIMEOUT) {
 1291              		.loc 1 1040 0
 1292 010e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1293 0110 052B     		cmp	r3, #5
 1294 0112 0CD0     		beq	.L40
1041:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				/* Disable the OPTER Bit */
1042:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				FLASH ->CR &= CR_OPTER_Reset;
 1295              		.loc 1 1042 0
 1296 0114 4FF40053 		mov	r3, #8192
 1297 0118 C4F20203 		movt	r3, 16386
 1298 011c 4FF40052 		mov	r2, #8192
 1299 0120 C4F20202 		movt	r2, 16386
 1300 0124 1169     		ldr	r1, [r2, #16]
 1301 0126 41F6DF72 		movw	r2, #8159
 1302 012a 0A40     		ands	r2, r2, r1
 1303 012c 1A61     		str	r2, [r3, #16]
 1304              	.L40:
1043:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
1044:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1045:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1046:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the protection operation Status */
1047:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return status;
 1305              		.loc 1 1047 0
 1306 012e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1048:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 1307              		.loc 1 1048 0
 1308 0130 1846     		mov	r0, r3
 1309 0132 07F11007 		add	r7, r7, #16
 1310 0136 BD46     		mov	sp, r7
 1311 0138 80BD     		pop	{r7, pc}
 1312              		.cfi_endproc
 1313              	.LFE44:
 1315 013a 00BF     		.section	.text.FLASH_UserOptionByteConfig,"ax",%progbits
 1316              		.align	2
 1317              		.global	FLASH_UserOptionByteConfig
 1318              		.thumb
 1319              		.thumb_func
 1321              	FLASH_UserOptionByteConfig:
 1322              	.LFB45:
1049:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1050:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1051:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Programs the FLASH User Option Byte: IWDG_SW / RST_STOP / RST_STDBY.
1052:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
1053:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  OB_IWDG: Selects the IWDG mode
1054:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   This parameter can be one of the following values:
1055:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg OB_IWDG_SW: Software IWDG selected
1056:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg OB_IWDG_HW: Hardware IWDG selected
1057:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  OB_STOP: Reset event when entering STOP mode.
1058:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   This parameter can be one of the following values:
1059:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg OB_STOP_NoRST: No reset generated when entering in STOP
1060:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg OB_STOP_RST: Reset generated when entering in STOP
1061:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  OB_STDBY: Reset event when entering Standby mode.
1062:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   This parameter can be one of the following values:
1063:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg OB_STDBY_NoRST: No reset generated when entering in STANDBY
1064:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg OB_STDBY_RST: Reset generated when entering in STANDBY
1065:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG, 
1066:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
1067:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1068:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_UserOptionByteConfig(uint16_t OB_IWDG, uint16_t OB_STOP,
1069:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		uint16_t OB_STDBY) {
 1323              		.loc 1 1069 0
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 16
 1326              		@ frame_needed = 1, uses_anonymous_args = 0
 1327 0000 80B5     		push	{r7, lr}
 1328              	.LCFI44:
 1329              		.cfi_def_cfa_offset 8
 1330              		.cfi_offset 7, -8
 1331              		.cfi_offset 14, -4
 1332 0002 84B0     		sub	sp, sp, #16
 1333              	.LCFI45:
 1334              		.cfi_def_cfa_offset 24
 1335 0004 00AF     		add	r7, sp, #0
 1336              	.LCFI46:
 1337              		.cfi_def_cfa_register 7
 1338 0006 1346     		mov	r3, r2
 1339 0008 0246     		mov	r2, r0	@ movhi
 1340 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1341 000c 0A46     		mov	r2, r1	@ movhi
 1342 000e BA80     		strh	r2, [r7, #4]	@ movhi
 1343 0010 7B80     		strh	r3, [r7, #2]	@ movhi
1070:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status status = FLASH_COMPLETE;
 1344              		.loc 1 1070 0
 1345 0012 4FF00403 		mov	r3, #4
 1346 0016 FB73     		strb	r3, [r7, #15]
1071:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1072:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
1073:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_OB_IWDG_SOURCE(OB_IWDG)); assert_param(IS_OB_STOP_SOURCE(OB_STOP)); assert_param(I
1074:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1075:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Authorize the small information block programming */FLASH ->OPTKEYR =
 1347              		.loc 1 1075 0
 1348 0018 4FF40053 		mov	r3, #8192
 1349 001c C4F20203 		movt	r3, 16386
 1350 0020 40F22312 		movw	r2, #291
 1351 0024 C4F26752 		movt	r2, 17767
 1352 0028 9A60     		str	r2, [r3, #8]
1076:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH_KEY1;
1077:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH ->OPTKEYR = FLASH_KEY2;
 1353              		.loc 1 1077 0
 1354 002a 4FF40053 		mov	r3, #8192
 1355 002e C4F20203 		movt	r3, 16386
 1356 0032 48F6AB12 		movw	r2, #35243
 1357 0036 CCF6EF52 		movt	r2, 52719
 1358 003a 9A60     		str	r2, [r3, #8]
1078:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1079:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Wait for last operation to be completed */
1080:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_WaitForLastOperation(ProgramTimeout );
 1359              		.loc 1 1080 0
 1360 003c 4FF40050 		mov	r0, #8192
 1361 0040 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1362 0044 0346     		mov	r3, r0
 1363 0046 FB73     		strb	r3, [r7, #15]
1081:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1082:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (status == FLASH_COMPLETE) {
 1364              		.loc 1 1082 0
 1365 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1366 004a 042B     		cmp	r3, #4
 1367 004c 30D1     		bne	.L46
1083:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Enable the Option Bytes Programming operation */
1084:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR |= CR_OPTPG_Set;
 1368              		.loc 1 1084 0
 1369 004e 4FF40053 		mov	r3, #8192
 1370 0052 C4F20203 		movt	r3, 16386
 1371 0056 4FF40052 		mov	r2, #8192
 1372 005a C4F20202 		movt	r2, 16386
 1373 005e 1269     		ldr	r2, [r2, #16]
 1374 0060 42F01002 		orr	r2, r2, #16
 1375 0064 1A61     		str	r2, [r3, #16]
1085:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1086:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		OB ->USER = OB_IWDG
 1376              		.loc 1 1086 0
 1377 0066 4FF47843 		mov	r3, #63488
 1378 006a C1F6FF73 		movt	r3, 8191
 1379 006e 7988     		ldrh	r1, [r7, #2]	@ movhi
 1380 0070 BA88     		ldrh	r2, [r7, #4]	@ movhi
 1381 0072 0A43     		orrs	r2, r2, r1
 1382 0074 91B2     		uxth	r1, r2
 1383 0076 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1384 0078 0A43     		orrs	r2, r2, r1
 1385 007a 92B2     		uxth	r2, r2
 1386 007c 42F0F802 		orr	r2, r2, #248
 1387 0080 92B2     		uxth	r2, r2
 1388 0082 5A80     		strh	r2, [r3, #2]	@ movhi
1087:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				| (uint16_t) (OB_STOP
1088:../StdPeripheralDriver/src/stm32f10x_flash.c **** 						| (uint16_t) (OB_STDBY | ((uint16_t) 0xF8)));
1089:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1090:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
1091:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastOperation(ProgramTimeout );
 1389              		.loc 1 1091 0
 1390 0084 4FF40050 		mov	r0, #8192
 1391 0088 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1392 008c 0346     		mov	r3, r0
 1393 008e FB73     		strb	r3, [r7, #15]
1092:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if (status != FLASH_TIMEOUT) {
 1394              		.loc 1 1092 0
 1395 0090 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1396 0092 052B     		cmp	r3, #5
 1397 0094 0CD0     		beq	.L46
1093:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the program operation is completed, disable the OPTPG Bit */
1094:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH ->CR &= CR_OPTPG_Reset;
 1398              		.loc 1 1094 0
 1399 0096 4FF40053 		mov	r3, #8192
 1400 009a C4F20203 		movt	r3, 16386
 1401 009e 4FF40052 		mov	r2, #8192
 1402 00a2 C4F20202 		movt	r2, 16386
 1403 00a6 1169     		ldr	r1, [r2, #16]
 1404 00a8 41F6EF72 		movw	r2, #8175
 1405 00ac 0A40     		ands	r2, r2, r1
 1406 00ae 1A61     		str	r2, [r3, #16]
 1407              	.L46:
1095:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1096:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1097:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the Option Byte program Status */
1098:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return status;
 1408              		.loc 1 1098 0
 1409 00b0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1099:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 1410              		.loc 1 1099 0
 1411 00b2 1846     		mov	r0, r3
 1412 00b4 07F11007 		add	r7, r7, #16
 1413 00b8 BD46     		mov	sp, r7
 1414 00ba 80BD     		pop	{r7, pc}
 1415              		.cfi_endproc
 1416              	.LFE45:
 1418              		.section	.text.FLASH_GetUserOptionByte,"ax",%progbits
 1419              		.align	2
 1420              		.global	FLASH_GetUserOptionByte
 1421              		.thumb
 1422              		.thumb_func
 1424              	FLASH_GetUserOptionByte:
 1425              	.LFB46:
1100:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1101:../StdPeripheralDriver/src/stm32f10x_flash.c **** #ifdef STM32F10X_XL
1102:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1103:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Configures to boot from Bank1 or Bank2.  
1104:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used only for STM32F10x_XL density devices.
1105:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  FLASH_BOOT: select the FLASH Bank to boot from.
1106:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   This parameter can be one of the following values:
1107:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_BOOT_Bank1: At startup, if boot pins are set in boot from user Flash
1108:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *        position and this parameter is selected the device will boot from Bank1(Default).
1109:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_BOOT_Bank2: At startup, if boot pins are set in boot from user Flash
1110:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *        position and this parameter is selected the device will boot from Bank2 or Bank1,
1111:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *        depending on the activation of the bank. The active banks are checked in
1112:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *        the following order: Bank2, followed by Bank1.
1113:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *        The active bank is recognized by the value programmed at the base address
1114:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *        of the respective bank (corresponding to the initial stack pointer value
1115:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *        in the interrupt vector table).
1116:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *        For more information, please refer to AN2606 from www.st.com.    
1117:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG, 
1118:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
1119:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1120:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_BootConfig(uint16_t FLASH_BOOT)
1121:../StdPeripheralDriver/src/stm32f10x_flash.c **** {
1122:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status status = FLASH_COMPLETE;
1123:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FLASH_BOOT(FLASH_BOOT));
1124:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Authorize the small information block programming */
1125:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH->OPTKEYR = FLASH_KEY1;
1126:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH->OPTKEYR = FLASH_KEY2;
1127:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1128:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Wait for last operation to be completed */
1129:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_WaitForLastOperation(ProgramTimeout);
1130:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1131:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if(status == FLASH_COMPLETE)
1132:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
1133:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Enable the Option Bytes Programming operation */
1134:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH->CR |= CR_OPTPG_Set;
1135:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1136:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if(FLASH_BOOT == FLASH_BOOT_Bank1)
1137:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
1138:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			OB->USER |= OB_USER_BFB2;
1139:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1140:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		else
1141:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
1142:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			OB->USER &= (uint16_t)(~(uint16_t)(OB_USER_BFB2));
1143:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1144:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Wait for last operation to be completed */
1145:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_WaitForLastOperation(ProgramTimeout);
1146:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if(status != FLASH_TIMEOUT)
1147:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
1148:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* if the program operation is completed, disable the OPTPG Bit */
1149:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR &= CR_OPTPG_Reset;
1150:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1151:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1152:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the Option Byte program Status */
1153:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return status;
1154:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
1155:../StdPeripheralDriver/src/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
1156:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1157:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1158:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Returns the FLASH User Option Bytes values.
1159:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
1160:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
1161:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval The FLASH User Option Bytes values:IWDG_SW(Bit0), RST_STOP(Bit1)
1162:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         and RST_STDBY(Bit2).
1163:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1164:../StdPeripheralDriver/src/stm32f10x_flash.c **** uint32_t FLASH_GetUserOptionByte(void) {
 1426              		.loc 1 1164 0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 0
 1429              		@ frame_needed = 1, uses_anonymous_args = 0
 1430              		@ link register save eliminated.
 1431 0000 80B4     		push	{r7}
 1432              	.LCFI47:
 1433              		.cfi_def_cfa_offset 4
 1434              		.cfi_offset 7, -4
 1435 0002 00AF     		add	r7, sp, #0
 1436              	.LCFI48:
 1437              		.cfi_def_cfa_register 7
1165:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the User Option Byte */
1166:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return (uint32_t) (FLASH ->OBR >> 2);
 1438              		.loc 1 1166 0
 1439 0004 4FF40053 		mov	r3, #8192
 1440 0008 C4F20203 		movt	r3, 16386
 1441 000c DB69     		ldr	r3, [r3, #28]
 1442 000e 4FEA9303 		lsr	r3, r3, #2
1167:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 1443              		.loc 1 1167 0
 1444 0012 1846     		mov	r0, r3
 1445 0014 BD46     		mov	sp, r7
 1446 0016 80BC     		pop	{r7}
 1447 0018 7047     		bx	lr
 1448              		.cfi_endproc
 1449              	.LFE46:
 1451 001a 00BF     		.section	.text.FLASH_GetWriteProtectionOptionByte,"ax",%progbits
 1452              		.align	2
 1453              		.global	FLASH_GetWriteProtectionOptionByte
 1454              		.thumb
 1455              		.thumb_func
 1457              	FLASH_GetWriteProtectionOptionByte:
 1458              	.LFB47:
1168:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1169:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1170:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Returns the FLASH Write Protection Option Bytes Register value.
1171:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
1172:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
1173:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval The FLASH Write Protection  Option Bytes Register value
1174:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1175:../StdPeripheralDriver/src/stm32f10x_flash.c **** uint32_t FLASH_GetWriteProtectionOptionByte(void) {
 1459              		.loc 1 1175 0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 0
 1462              		@ frame_needed = 1, uses_anonymous_args = 0
 1463              		@ link register save eliminated.
 1464 0000 80B4     		push	{r7}
 1465              	.LCFI49:
 1466              		.cfi_def_cfa_offset 4
 1467              		.cfi_offset 7, -4
 1468 0002 00AF     		add	r7, sp, #0
 1469              	.LCFI50:
 1470              		.cfi_def_cfa_register 7
1176:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the Flash write protection Register value */
1177:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return (uint32_t) (FLASH ->WRPR);
 1471              		.loc 1 1177 0
 1472 0004 4FF40053 		mov	r3, #8192
 1473 0008 C4F20203 		movt	r3, 16386
 1474 000c 1B6A     		ldr	r3, [r3, #32]
1178:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 1475              		.loc 1 1178 0
 1476 000e 1846     		mov	r0, r3
 1477 0010 BD46     		mov	sp, r7
 1478 0012 80BC     		pop	{r7}
 1479 0014 7047     		bx	lr
 1480              		.cfi_endproc
 1481              	.LFE47:
 1483 0016 00BF     		.section	.text.FLASH_GetReadOutProtectionStatus,"ax",%progbits
 1484              		.align	2
 1485              		.global	FLASH_GetReadOutProtectionStatus
 1486              		.thumb
 1487              		.thumb_func
 1489              	FLASH_GetReadOutProtectionStatus:
 1490              	.LFB48:
1179:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1180:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1181:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Checks whether the FLASH Read Out Protection Status is set or not.
1182:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
1183:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
1184:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH ReadOut Protection Status(SET or RESET)
1185:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1186:../StdPeripheralDriver/src/stm32f10x_flash.c **** FlagStatus FLASH_GetReadOutProtectionStatus(void) {
 1491              		.loc 1 1186 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 8
 1494              		@ frame_needed = 1, uses_anonymous_args = 0
 1495              		@ link register save eliminated.
 1496 0000 80B4     		push	{r7}
 1497              	.LCFI51:
 1498              		.cfi_def_cfa_offset 4
 1499              		.cfi_offset 7, -4
 1500 0002 83B0     		sub	sp, sp, #12
 1501              	.LCFI52:
 1502              		.cfi_def_cfa_offset 16
 1503 0004 00AF     		add	r7, sp, #0
 1504              	.LCFI53:
 1505              		.cfi_def_cfa_register 7
1187:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FlagStatus readoutstatus = RESET;
 1506              		.loc 1 1187 0
 1507 0006 4FF00003 		mov	r3, #0
 1508 000a FB71     		strb	r3, [r7, #7]
1188:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if ((FLASH ->OBR & RDPRT_Mask )!= (uint32_t)RESET){
 1509              		.loc 1 1188 0
 1510 000c 4FF40053 		mov	r3, #8192
 1511 0010 C4F20203 		movt	r3, 16386
 1512 0014 DB69     		ldr	r3, [r3, #28]
 1513 0016 03F00203 		and	r3, r3, #2
 1514 001a 002B     		cmp	r3, #0
 1515 001c 03D0     		beq	.L53
1189:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	readoutstatus = SET;
 1516              		.loc 1 1189 0
 1517 001e 4FF00103 		mov	r3, #1
 1518 0022 FB71     		strb	r3, [r7, #7]
 1519 0024 02E0     		b	.L54
 1520              	.L53:
1190:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
1191:../StdPeripheralDriver/src/stm32f10x_flash.c **** else
1192:../StdPeripheralDriver/src/stm32f10x_flash.c **** {
1193:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	readoutstatus = RESET;
 1521              		.loc 1 1193 0
 1522 0026 4FF00003 		mov	r3, #0
 1523 002a FB71     		strb	r3, [r7, #7]
 1524              	.L54:
1194:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
1195:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return readoutstatus;
 1525              		.loc 1 1195 0
 1526 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1196:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 1527              		.loc 1 1196 0
 1528 002e 1846     		mov	r0, r3
 1529 0030 07F10C07 		add	r7, r7, #12
 1530 0034 BD46     		mov	sp, r7
 1531 0036 80BC     		pop	{r7}
 1532 0038 7047     		bx	lr
 1533              		.cfi_endproc
 1534              	.LFE48:
 1536 003a 00BF     		.section	.text.FLASH_GetPrefetchBufferStatus,"ax",%progbits
 1537              		.align	2
 1538              		.global	FLASH_GetPrefetchBufferStatus
 1539              		.thumb
 1540              		.thumb_func
 1542              	FLASH_GetPrefetchBufferStatus:
 1543              	.LFB49:
1197:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1198:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1199:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Checks whether the FLASH Prefetch Buffer status is set or not.
1200:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
1201:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
1202:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Prefetch Buffer Status (SET or RESET).
1203:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1204:../StdPeripheralDriver/src/stm32f10x_flash.c **** FlagStatus FLASH_GetPrefetchBufferStatus(void) {
 1544              		.loc 1 1204 0
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 8
 1547              		@ frame_needed = 1, uses_anonymous_args = 0
 1548              		@ link register save eliminated.
 1549 0000 80B4     		push	{r7}
 1550              	.LCFI54:
 1551              		.cfi_def_cfa_offset 4
 1552              		.cfi_offset 7, -4
 1553 0002 83B0     		sub	sp, sp, #12
 1554              	.LCFI55:
 1555              		.cfi_def_cfa_offset 16
 1556 0004 00AF     		add	r7, sp, #0
 1557              	.LCFI56:
 1558              		.cfi_def_cfa_register 7
1205:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FlagStatus bitstatus = RESET;
 1559              		.loc 1 1205 0
 1560 0006 4FF00003 		mov	r3, #0
 1561 000a FB71     		strb	r3, [r7, #7]
1206:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1207:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if ((FLASH ->ACR & ACR_PRFTBS_Mask )!= (uint32_t)RESET){
 1562              		.loc 1 1207 0
 1563 000c 4FF40053 		mov	r3, #8192
 1564 0010 C4F20203 		movt	r3, 16386
 1565 0014 1B68     		ldr	r3, [r3, #0]
 1566 0016 03F02003 		and	r3, r3, #32
 1567 001a 002B     		cmp	r3, #0
 1568 001c 03D0     		beq	.L57
1208:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	bitstatus = SET;
 1569              		.loc 1 1208 0
 1570 001e 4FF00103 		mov	r3, #1
 1571 0022 FB71     		strb	r3, [r7, #7]
 1572 0024 02E0     		b	.L58
 1573              	.L57:
1209:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
1210:../StdPeripheralDriver/src/stm32f10x_flash.c **** else
1211:../StdPeripheralDriver/src/stm32f10x_flash.c **** {
1212:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	bitstatus = RESET;
 1574              		.loc 1 1212 0
 1575 0026 4FF00003 		mov	r3, #0
 1576 002a FB71     		strb	r3, [r7, #7]
 1577              	.L58:
1213:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
1214:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the new state of FLASH Prefetch Buffer Status (SET or RESET) */
1215:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return bitstatus;
 1578              		.loc 1 1215 0
 1579 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1216:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 1580              		.loc 1 1216 0
 1581 002e 1846     		mov	r0, r3
 1582 0030 07F10C07 		add	r7, r7, #12
 1583 0034 BD46     		mov	sp, r7
 1584 0036 80BC     		pop	{r7}
 1585 0038 7047     		bx	lr
 1586              		.cfi_endproc
 1587              	.LFE49:
 1589 003a 00BF     		.section	.text.FLASH_ITConfig,"ax",%progbits
 1590              		.align	2
 1591              		.global	FLASH_ITConfig
 1592              		.thumb
 1593              		.thumb_func
 1595              	FLASH_ITConfig:
 1596              	.LFB50:
1217:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1218:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1219:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Enables or disables the specified FLASH interrupts.
1220:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
1221:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For STM32F10X_XL devices, enables or disables the specified FLASH interrupts
1222:../StdPeripheralDriver/src/stm32f10x_flash.c ****  for Bank1 and Bank2.
1223:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For other devices it enables or disables the specified FLASH interrupts for Bank1.
1224:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  FLASH_IT: specifies the FLASH interrupt sources to be enabled or disabled.
1225:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   This parameter can be any combination of the following values:
1226:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_IT_ERROR: FLASH Error Interrupt
1227:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_IT_EOP: FLASH end of operation Interrupt
1228:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  NewState: new state of the specified Flash interrupts.
1229:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   This parameter can be: ENABLE or DISABLE.      
1230:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval None 
1231:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1232:../StdPeripheralDriver/src/stm32f10x_flash.c **** void FLASH_ITConfig(uint32_t FLASH_IT, FunctionalState NewState) {
 1597              		.loc 1 1232 0
 1598              		.cfi_startproc
 1599              		@ args = 0, pretend = 0, frame = 8
 1600              		@ frame_needed = 1, uses_anonymous_args = 0
 1601              		@ link register save eliminated.
 1602 0000 80B4     		push	{r7}
 1603              	.LCFI57:
 1604              		.cfi_def_cfa_offset 4
 1605              		.cfi_offset 7, -4
 1606 0002 83B0     		sub	sp, sp, #12
 1607              	.LCFI58:
 1608              		.cfi_def_cfa_offset 16
 1609 0004 00AF     		add	r7, sp, #0
 1610              	.LCFI59:
 1611              		.cfi_def_cfa_register 7
 1612 0006 7860     		str	r0, [r7, #4]
 1613 0008 0B46     		mov	r3, r1
 1614 000a FB70     		strb	r3, [r7, #3]
1233:../StdPeripheralDriver/src/stm32f10x_flash.c **** #ifdef STM32F10X_XL
1234:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
1235:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FLASH_IT(FLASH_IT));
1236:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FUNCTIONAL_STATE(NewState));
1237:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1238:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if((FLASH_IT & 0x80000000) != 0x0)
1239:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
1240:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if(NewState != DISABLE)
1241:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
1242:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Enable the interrupt sources */
1243:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR2 |= (FLASH_IT & 0x7FFFFFFF);
1244:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1245:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		else
1246:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
1247:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Disable the interrupt sources */
1248:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR2 &= ~(uint32_t)(FLASH_IT & 0x7FFFFFFF);
1249:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1250:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1251:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	else
1252:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
1253:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if(NewState != DISABLE)
1254:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
1255:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Enable the interrupt sources */
1256:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR |= FLASH_IT;
1257:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1258:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		else
1259:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
1260:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			/* Disable the interrupt sources */
1261:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			FLASH->CR &= ~(uint32_t)FLASH_IT;
1262:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1263:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1264:../StdPeripheralDriver/src/stm32f10x_flash.c **** #else
1265:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
1266:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FLASH_IT(FLASH_IT)); assert_param(IS_FUNCTIONAL_STATE(NewState));
1267:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1268:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (NewState != DISABLE) {
 1615              		.loc 1 1268 0
 1616 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1617 000e 002B     		cmp	r3, #0
 1618 0010 0CD0     		beq	.L61
1269:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Enable the interrupt sources */
1270:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR |= FLASH_IT;
 1619              		.loc 1 1270 0
 1620 0012 4FF40053 		mov	r3, #8192
 1621 0016 C4F20203 		movt	r3, 16386
 1622 001a 4FF40052 		mov	r2, #8192
 1623 001e C4F20202 		movt	r2, 16386
 1624 0022 1169     		ldr	r1, [r2, #16]
 1625 0024 7A68     		ldr	r2, [r7, #4]
 1626 0026 0A43     		orrs	r2, r2, r1
 1627 0028 1A61     		str	r2, [r3, #16]
 1628 002a 0DE0     		b	.L60
 1629              	.L61:
1271:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	} else {
1272:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Disable the interrupt sources */
1273:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH ->CR &= ~(uint32_t) FLASH_IT;
 1630              		.loc 1 1273 0
 1631 002c 4FF40053 		mov	r3, #8192
 1632 0030 C4F20203 		movt	r3, 16386
 1633 0034 4FF40052 		mov	r2, #8192
 1634 0038 C4F20202 		movt	r2, 16386
 1635 003c 1169     		ldr	r1, [r2, #16]
 1636 003e 7A68     		ldr	r2, [r7, #4]
 1637 0040 6FEA0202 		mvn	r2, r2
 1638 0044 0A40     		ands	r2, r2, r1
 1639 0046 1A61     		str	r2, [r3, #16]
 1640              	.L60:
1274:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1275:../StdPeripheralDriver/src/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
1276:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 1641              		.loc 1 1276 0
 1642 0048 07F10C07 		add	r7, r7, #12
 1643 004c BD46     		mov	sp, r7
 1644 004e 80BC     		pop	{r7}
 1645 0050 7047     		bx	lr
 1646              		.cfi_endproc
 1647              	.LFE50:
 1649 0052 00BF     		.section	.text.FLASH_GetFlagStatus,"ax",%progbits
 1650              		.align	2
 1651              		.global	FLASH_GetFlagStatus
 1652              		.thumb
 1653              		.thumb_func
 1655              	FLASH_GetFlagStatus:
 1656              	.LFB51:
1277:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1278:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1279:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Checks whether the specified FLASH flag is set or not.
1280:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
1281:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For STM32F10X_XL devices, this function checks whether the specified 
1282:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *           Bank1 or Bank2 flag is set or not.
1283:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For other devices, it checks whether the specified Bank1 flag is 
1284:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *           set or not.
1285:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  FLASH_FLAG: specifies the FLASH flag to check.
1286:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   This parameter can be one of the following values:
1287:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_FLAG_BSY: FLASH Busy flag           
1288:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_FLAG_PGERR: FLASH Program error flag       
1289:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_FLAG_WRPRTERR: FLASH Write protected error flag      
1290:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_FLAG_EOP: FLASH End of Operation flag           
1291:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_FLAG_OPTERR:  FLASH Option Byte error flag     
1292:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval The new state of FLASH_FLAG (SET or RESET).
1293:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1294:../StdPeripheralDriver/src/stm32f10x_flash.c **** FlagStatus FLASH_GetFlagStatus(uint32_t FLASH_FLAG) {
 1657              		.loc 1 1294 0
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 16
 1660              		@ frame_needed = 1, uses_anonymous_args = 0
 1661              		@ link register save eliminated.
 1662 0000 80B4     		push	{r7}
 1663              	.LCFI60:
 1664              		.cfi_def_cfa_offset 4
 1665              		.cfi_offset 7, -4
 1666 0002 85B0     		sub	sp, sp, #20
 1667              	.LCFI61:
 1668              		.cfi_def_cfa_offset 24
 1669 0004 00AF     		add	r7, sp, #0
 1670              	.LCFI62:
 1671              		.cfi_def_cfa_register 7
 1672 0006 7860     		str	r0, [r7, #4]
1295:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FlagStatus bitstatus = RESET;
 1673              		.loc 1 1295 0
 1674 0008 4FF00003 		mov	r3, #0
 1675 000c FB73     		strb	r3, [r7, #15]
1296:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1297:../StdPeripheralDriver/src/stm32f10x_flash.c **** #ifdef STM32F10X_XL
1298:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
1299:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FLASH_GET_FLAG(FLASH_FLAG));
1300:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if(FLASH_FLAG == FLASH_FLAG_OPTERR)
1301:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
1302:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if((FLASH->OBR & FLASH_FLAG_OPTERR) != (uint32_t)RESET)
1303:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
1304:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			bitstatus = SET;
1305:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1306:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		else
1307:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
1308:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			bitstatus = RESET;
1309:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1310:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1311:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	else
1312:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
1313:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if((FLASH_FLAG & 0x80000000) != 0x0)
1314:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
1315:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			if((FLASH->SR2 & FLASH_FLAG) != (uint32_t)RESET)
1316:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			{
1317:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				bitstatus = SET;
1318:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
1319:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			else
1320:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			{
1321:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				bitstatus = RESET;
1322:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
1323:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1324:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		else
1325:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
1326:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			if((FLASH->SR & FLASH_FLAG) != (uint32_t)RESET)
1327:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			{
1328:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				bitstatus = SET;
1329:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
1330:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			else
1331:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			{
1332:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				bitstatus = RESET;
1333:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
1334:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1335:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1336:../StdPeripheralDriver/src/stm32f10x_flash.c **** #else
1337:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
1338:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FLASH_GET_FLAG(FLASH_FLAG)) ;
1339:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (FLASH_FLAG == FLASH_FLAG_OPTERR ) {
 1676              		.loc 1 1339 0
 1677 000e 7B68     		ldr	r3, [r7, #4]
 1678 0010 012B     		cmp	r3, #1
 1679 0012 10D1     		bne	.L64
1340:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if ((FLASH ->OBR & FLASH_FLAG_OPTERR )!= (uint32_t)RESET){
 1680              		.loc 1 1340 0
 1681 0014 4FF40053 		mov	r3, #8192
 1682 0018 C4F20203 		movt	r3, 16386
 1683 001c DB69     		ldr	r3, [r3, #28]
 1684 001e 03F00103 		and	r3, r3, #1
 1685 0022 002B     		cmp	r3, #0
 1686 0024 03D0     		beq	.L65
1341:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		bitstatus = SET;
 1687              		.loc 1 1341 0
 1688 0026 4FF00103 		mov	r3, #1
 1689 002a FB73     		strb	r3, [r7, #15]
 1690 002c 13E0     		b	.L66
 1691              	.L65:
1342:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1343:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	else
1344:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
1345:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		bitstatus = RESET;
 1692              		.loc 1 1345 0
 1693 002e 4FF00003 		mov	r3, #0
 1694 0032 FB73     		strb	r3, [r7, #15]
 1695 0034 0FE0     		b	.L66
 1696              	.L64:
1346:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1347:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
1348:../StdPeripheralDriver/src/stm32f10x_flash.c **** else
1349:../StdPeripheralDriver/src/stm32f10x_flash.c **** {
1350:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if((FLASH->SR & FLASH_FLAG) != (uint32_t)RESET)
 1697              		.loc 1 1350 0
 1698 0036 4FF40053 		mov	r3, #8192
 1699 003a C4F20203 		movt	r3, 16386
 1700 003e DA68     		ldr	r2, [r3, #12]
 1701 0040 7B68     		ldr	r3, [r7, #4]
 1702 0042 1340     		ands	r3, r3, r2
 1703 0044 002B     		cmp	r3, #0
 1704 0046 03D0     		beq	.L67
1351:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
1352:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		bitstatus = SET;
 1705              		.loc 1 1352 0
 1706 0048 4FF00103 		mov	r3, #1
 1707 004c FB73     		strb	r3, [r7, #15]
 1708 004e 02E0     		b	.L66
 1709              	.L67:
1353:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1354:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	else
1355:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
1356:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		bitstatus = RESET;
 1710              		.loc 1 1356 0
 1711 0050 4FF00003 		mov	r3, #0
 1712 0054 FB73     		strb	r3, [r7, #15]
 1713              	.L66:
1357:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1358:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
1359:../StdPeripheralDriver/src/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
1360:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1361:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Return the new state of FLASH_FLAG (SET or RESET) */
1362:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return bitstatus;
 1714              		.loc 1 1362 0
 1715 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1363:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 1716              		.loc 1 1363 0
 1717 0058 1846     		mov	r0, r3
 1718 005a 07F11407 		add	r7, r7, #20
 1719 005e BD46     		mov	sp, r7
 1720 0060 80BC     		pop	{r7}
 1721 0062 7047     		bx	lr
 1722              		.cfi_endproc
 1723              	.LFE51:
 1725              		.section	.text.FLASH_ClearFlag,"ax",%progbits
 1726              		.align	2
 1727              		.global	FLASH_ClearFlag
 1728              		.thumb
 1729              		.thumb_func
 1731              	FLASH_ClearFlag:
 1732              	.LFB52:
1364:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1365:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1366:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Clears the FLASH's pending flags.
1367:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices.
1368:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For STM32F10X_XL devices, this function clears Bank1 or Bank2�s pending flags
1369:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For other devices, it clears Bank1�s pending flags.
1370:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  FLASH_FLAG: specifies the FLASH flags to clear.
1371:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *   This parameter can be any combination of the following values:         
1372:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_FLAG_PGERR: FLASH Program error flag       
1373:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_FLAG_WRPRTERR: FLASH Write protected error flag      
1374:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *     @arg FLASH_FLAG_EOP: FLASH End of Operation flag           
1375:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval None
1376:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1377:../StdPeripheralDriver/src/stm32f10x_flash.c **** void FLASH_ClearFlag(uint32_t FLASH_FLAG) {
 1733              		.loc 1 1377 0
 1734              		.cfi_startproc
 1735              		@ args = 0, pretend = 0, frame = 8
 1736              		@ frame_needed = 1, uses_anonymous_args = 0
 1737              		@ link register save eliminated.
 1738 0000 80B4     		push	{r7}
 1739              	.LCFI63:
 1740              		.cfi_def_cfa_offset 4
 1741              		.cfi_offset 7, -4
 1742 0002 83B0     		sub	sp, sp, #12
 1743              	.LCFI64:
 1744              		.cfi_def_cfa_offset 16
 1745 0004 00AF     		add	r7, sp, #0
 1746              	.LCFI65:
 1747              		.cfi_def_cfa_register 7
 1748 0006 7860     		str	r0, [r7, #4]
1378:../StdPeripheralDriver/src/stm32f10x_flash.c **** #ifdef STM32F10X_XL
1379:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
1380:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FLASH_CLEAR_FLAG(FLASH_FLAG));
1381:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1382:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if((FLASH_FLAG & 0x80000000) != 0x0)
1383:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
1384:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Clear the flags */
1385:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH->SR2 = FLASH_FLAG;
1386:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1387:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	else
1388:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
1389:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		/* Clear the flags */
1390:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		FLASH->SR = FLASH_FLAG;
1391:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1392:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1393:../StdPeripheralDriver/src/stm32f10x_flash.c **** #else
1394:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check the parameters */
1395:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	assert_param(IS_FLASH_CLEAR_FLAG(FLASH_FLAG)) ;
1396:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1397:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Clear the flags */
1398:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH ->SR = FLASH_FLAG;
 1749              		.loc 1 1398 0
 1750 0008 4FF40053 		mov	r3, #8192
 1751 000c C4F20203 		movt	r3, 16386
 1752 0010 7A68     		ldr	r2, [r7, #4]
 1753 0012 DA60     		str	r2, [r3, #12]
1399:../StdPeripheralDriver/src/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
1400:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 1754              		.loc 1 1400 0
 1755 0014 07F10C07 		add	r7, r7, #12
 1756 0018 BD46     		mov	sp, r7
 1757 001a 80BC     		pop	{r7}
 1758 001c 7047     		bx	lr
 1759              		.cfi_endproc
 1760              	.LFE52:
 1762 001e 00BF     		.section	.text.FLASH_GetStatus,"ax",%progbits
 1763              		.align	2
 1764              		.global	FLASH_GetStatus
 1765              		.thumb
 1766              		.thumb_func
 1768              	FLASH_GetStatus:
 1769              	.LFB53:
1401:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1402:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1403:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Returns the FLASH Status.
1404:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices, it is equivalent
1405:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         to FLASH_GetBank1Status function.
1406:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
1407:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PG,
1408:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP or FLASH_COMPLETE
1409:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1410:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_GetStatus(void) {
 1770              		.loc 1 1410 0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 8
 1773              		@ frame_needed = 1, uses_anonymous_args = 0
 1774              		@ link register save eliminated.
 1775 0000 80B4     		push	{r7}
 1776              	.LCFI66:
 1777              		.cfi_def_cfa_offset 4
 1778              		.cfi_offset 7, -4
 1779 0002 83B0     		sub	sp, sp, #12
 1780              	.LCFI67:
 1781              		.cfi_def_cfa_offset 16
 1782 0004 00AF     		add	r7, sp, #0
 1783              	.LCFI68:
 1784              		.cfi_def_cfa_register 7
1411:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status flashstatus = FLASH_COMPLETE;
 1785              		.loc 1 1411 0
 1786 0006 4FF00403 		mov	r3, #4
 1787 000a FB71     		strb	r3, [r7, #7]
1412:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1413:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if ((FLASH ->SR & FLASH_FLAG_BSY )== FLASH_FLAG_BSY) {
 1788              		.loc 1 1413 0
 1789 000c 4FF40053 		mov	r3, #8192
 1790 0010 C4F20203 		movt	r3, 16386
 1791 0014 DB68     		ldr	r3, [r3, #12]
 1792 0016 03F00103 		and	r3, r3, #1
 1793 001a 002B     		cmp	r3, #0
 1794 001c 03D0     		beq	.L71
1414:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		flashstatus = FLASH_BUSY;
 1795              		.loc 1 1414 0
 1796 001e 4FF00103 		mov	r3, #1
 1797 0022 FB71     		strb	r3, [r7, #7]
 1798 0024 1CE0     		b	.L72
 1799              	.L71:
1415:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	} else {
1416:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if ((FLASH ->SR & FLASH_FLAG_PGERR )!= 0){
 1800              		.loc 1 1416 0
 1801 0026 4FF40053 		mov	r3, #8192
 1802 002a C4F20203 		movt	r3, 16386
 1803 002e DB68     		ldr	r3, [r3, #12]
 1804 0030 03F00403 		and	r3, r3, #4
 1805 0034 002B     		cmp	r3, #0
 1806 0036 03D0     		beq	.L73
1417:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			flashstatus = FLASH_ERROR_PG;
 1807              		.loc 1 1417 0
 1808 0038 4FF00203 		mov	r3, #2
 1809 003c FB71     		strb	r3, [r7, #7]
 1810 003e 0FE0     		b	.L72
 1811              	.L73:
1418:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		} else {
1419:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			if ((FLASH ->SR & FLASH_FLAG_WRPRTERR )!= 0 ){
 1812              		.loc 1 1419 0
 1813 0040 4FF40053 		mov	r3, #8192
 1814 0044 C4F20203 		movt	r3, 16386
 1815 0048 DB68     		ldr	r3, [r3, #12]
 1816 004a 03F01003 		and	r3, r3, #16
 1817 004e 002B     		cmp	r3, #0
 1818 0050 03D0     		beq	.L74
1420:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				flashstatus = FLASH_ERROR_WRP;
 1819              		.loc 1 1420 0
 1820 0052 4FF00303 		mov	r3, #3
 1821 0056 FB71     		strb	r3, [r7, #7]
 1822 0058 02E0     		b	.L72
 1823              	.L74:
1421:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			} else {
1422:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				flashstatus = FLASH_COMPLETE;
 1824              		.loc 1 1422 0
 1825 005a 4FF00403 		mov	r3, #4
 1826 005e FB71     		strb	r3, [r7, #7]
 1827              	.L72:
1423:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
1424:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1425:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1426:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the Flash Status */
1427:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return flashstatus;
 1828              		.loc 1 1427 0
 1829 0060 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1428:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 1830              		.loc 1 1428 0
 1831 0062 1846     		mov	r0, r3
 1832 0064 07F10C07 		add	r7, r7, #12
 1833 0068 BD46     		mov	sp, r7
 1834 006a 80BC     		pop	{r7}
 1835 006c 7047     		bx	lr
 1836              		.cfi_endproc
 1837              	.LFE53:
 1839 006e 00BF     		.section	.text.FLASH_GetBank1Status,"ax",%progbits
 1840              		.align	2
 1841              		.global	FLASH_GetBank1Status
 1842              		.thumb
 1843              		.thumb_func
 1845              	FLASH_GetBank1Status:
 1846              	.LFB54:
1429:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1430:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1431:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Returns the FLASH Bank1 Status.
1432:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices, it is equivalent
1433:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         to FLASH_GetStatus function.
1434:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
1435:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PG,
1436:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP or FLASH_COMPLETE
1437:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1438:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_GetBank1Status(void) {
 1847              		.loc 1 1438 0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 8
 1850              		@ frame_needed = 1, uses_anonymous_args = 0
 1851              		@ link register save eliminated.
 1852 0000 80B4     		push	{r7}
 1853              	.LCFI69:
 1854              		.cfi_def_cfa_offset 4
 1855              		.cfi_offset 7, -4
 1856 0002 83B0     		sub	sp, sp, #12
 1857              	.LCFI70:
 1858              		.cfi_def_cfa_offset 16
 1859 0004 00AF     		add	r7, sp, #0
 1860              	.LCFI71:
 1861              		.cfi_def_cfa_register 7
1439:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status flashstatus = FLASH_COMPLETE;
 1862              		.loc 1 1439 0
 1863 0006 4FF00403 		mov	r3, #4
 1864 000a FB71     		strb	r3, [r7, #7]
1440:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1441:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if ((FLASH ->SR & FLASH_FLAG_BANK1_BSY )== FLASH_FLAG_BSY) {
 1865              		.loc 1 1441 0
 1866 000c 4FF40053 		mov	r3, #8192
 1867 0010 C4F20203 		movt	r3, 16386
 1868 0014 DB68     		ldr	r3, [r3, #12]
 1869 0016 03F00103 		and	r3, r3, #1
 1870 001a 002B     		cmp	r3, #0
 1871 001c 03D0     		beq	.L77
1442:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		flashstatus = FLASH_BUSY;
 1872              		.loc 1 1442 0
 1873 001e 4FF00103 		mov	r3, #1
 1874 0022 FB71     		strb	r3, [r7, #7]
 1875 0024 1CE0     		b	.L78
 1876              	.L77:
1443:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	} else {
1444:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if ((FLASH ->SR & FLASH_FLAG_BANK1_PGERR )!= 0){
 1877              		.loc 1 1444 0
 1878 0026 4FF40053 		mov	r3, #8192
 1879 002a C4F20203 		movt	r3, 16386
 1880 002e DB68     		ldr	r3, [r3, #12]
 1881 0030 03F00403 		and	r3, r3, #4
 1882 0034 002B     		cmp	r3, #0
 1883 0036 03D0     		beq	.L79
1445:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			flashstatus = FLASH_ERROR_PG;
 1884              		.loc 1 1445 0
 1885 0038 4FF00203 		mov	r3, #2
 1886 003c FB71     		strb	r3, [r7, #7]
 1887 003e 0FE0     		b	.L78
 1888              	.L79:
1446:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		} else {
1447:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			if ((FLASH ->SR & FLASH_FLAG_BANK1_WRPRTERR )!= 0 ){
 1889              		.loc 1 1447 0
 1890 0040 4FF40053 		mov	r3, #8192
 1891 0044 C4F20203 		movt	r3, 16386
 1892 0048 DB68     		ldr	r3, [r3, #12]
 1893 004a 03F01003 		and	r3, r3, #16
 1894 004e 002B     		cmp	r3, #0
 1895 0050 03D0     		beq	.L80
1448:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				flashstatus = FLASH_ERROR_WRP;
 1896              		.loc 1 1448 0
 1897 0052 4FF00303 		mov	r3, #3
 1898 0056 FB71     		strb	r3, [r7, #7]
 1899 0058 02E0     		b	.L78
 1900              	.L80:
1449:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			} else {
1450:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				flashstatus = FLASH_COMPLETE;
 1901              		.loc 1 1450 0
 1902 005a 4FF00403 		mov	r3, #4
 1903 005e FB71     		strb	r3, [r7, #7]
 1904              	.L78:
1451:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
1452:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1453:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1454:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the Flash Status */
1455:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return flashstatus;
 1905              		.loc 1 1455 0
 1906 0060 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1456:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 1907              		.loc 1 1456 0
 1908 0062 1846     		mov	r0, r3
 1909 0064 07F10C07 		add	r7, r7, #12
 1910 0068 BD46     		mov	sp, r7
 1911 006a 80BC     		pop	{r7}
 1912 006c 7047     		bx	lr
 1913              		.cfi_endproc
 1914              	.LFE54:
 1916 006e 00BF     		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 1917              		.align	2
 1918              		.global	FLASH_WaitForLastOperation
 1919              		.thumb
 1920              		.thumb_func
 1922              	FLASH_WaitForLastOperation:
 1923              	.LFB55:
1457:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1458:../StdPeripheralDriver/src/stm32f10x_flash.c **** #ifdef STM32F10X_XL
1459:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1460:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Returns the FLASH Bank2 Status.
1461:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for STM32F10x_XL density devices.
1462:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  None
1463:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PG,
1464:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *        FLASH_ERROR_WRP or FLASH_COMPLETE
1465:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1466:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_GetBank2Status(void)
1467:../StdPeripheralDriver/src/stm32f10x_flash.c **** {
1468:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status flashstatus = FLASH_COMPLETE;
1469:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1470:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if((FLASH->SR2 & (FLASH_FLAG_BANK2_BSY & 0x7FFFFFFF)) == (FLASH_FLAG_BANK2_BSY & 0x7FFFFFFF))
1471:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
1472:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		flashstatus = FLASH_BUSY;
1473:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1474:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	else
1475:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	{
1476:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		if((FLASH->SR2 & (FLASH_FLAG_BANK2_PGERR & 0x7FFFFFFF)) != 0)
1477:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
1478:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			flashstatus = FLASH_ERROR_PG;
1479:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1480:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		else
1481:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		{
1482:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			if((FLASH->SR2 & (FLASH_FLAG_BANK2_WRPRTERR & 0x7FFFFFFF)) != 0 )
1483:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			{
1484:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				flashstatus = FLASH_ERROR_WRP;
1485:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
1486:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			else
1487:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			{
1488:../StdPeripheralDriver/src/stm32f10x_flash.c **** 				flashstatus = FLASH_COMPLETE;
1489:../StdPeripheralDriver/src/stm32f10x_flash.c **** 			}
1490:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		}
1491:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1492:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the Flash Status */
1493:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return flashstatus;
1494:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
1495:../StdPeripheralDriver/src/stm32f10x_flash.c **** #endif /* STM32F10X_XL */
1496:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1497:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Waits for a Flash operation to complete or a TIMEOUT to occur.
1498:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices, 
1499:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         it is equivalent to FLASH_WaitForLastBank1Operation.
1500:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For STM32F10X_XL devices this function waits for a Bank1 Flash operation
1501:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *           to complete or a TIMEOUT to occur.
1502:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         - For all other devices it waits for a Flash operation to complete 
1503:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *           or a TIMEOUT to occur.
1504:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  Timeout: FLASH programming Timeout
1505:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
1506:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
1507:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1508:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_WaitForLastOperation(uint32_t Timeout) {
 1924              		.loc 1 1508 0
 1925              		.cfi_startproc
 1926              		@ args = 0, pretend = 0, frame = 16
 1927              		@ frame_needed = 1, uses_anonymous_args = 0
 1928 0000 80B5     		push	{r7, lr}
 1929              	.LCFI72:
 1930              		.cfi_def_cfa_offset 8
 1931              		.cfi_offset 7, -8
 1932              		.cfi_offset 14, -4
 1933 0002 84B0     		sub	sp, sp, #16
 1934              	.LCFI73:
 1935              		.cfi_def_cfa_offset 24
 1936 0004 00AF     		add	r7, sp, #0
 1937              	.LCFI74:
 1938              		.cfi_def_cfa_register 7
 1939 0006 7860     		str	r0, [r7, #4]
1509:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status status = FLASH_COMPLETE;
 1940              		.loc 1 1509 0
 1941 0008 4FF00403 		mov	r3, #4
 1942 000c FB73     		strb	r3, [r7, #15]
1510:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1511:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check for the Flash Status */
1512:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_GetBank1Status();
 1943              		.loc 1 1512 0
 1944 000e FFF7FEFF 		bl	FLASH_GetBank1Status
 1945 0012 0346     		mov	r3, r0
 1946 0014 FB73     		strb	r3, [r7, #15]
1513:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Wait for a Flash operation to complete or a TIMEOUT to occur */
1514:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	while ((status == FLASH_BUSY) && (Timeout != 0x00)) {
 1947              		.loc 1 1514 0
 1948 0016 07E0     		b	.L83
 1949              	.L85:
1515:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_GetBank1Status();
 1950              		.loc 1 1515 0
 1951 0018 FFF7FEFF 		bl	FLASH_GetBank1Status
 1952 001c 0346     		mov	r3, r0
 1953 001e FB73     		strb	r3, [r7, #15]
1516:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		Timeout--;
 1954              		.loc 1 1516 0
 1955 0020 7B68     		ldr	r3, [r7, #4]
 1956 0022 03F1FF33 		add	r3, r3, #-1
 1957 0026 7B60     		str	r3, [r7, #4]
 1958              	.L83:
1514:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	while ((status == FLASH_BUSY) && (Timeout != 0x00)) {
 1959              		.loc 1 1514 0 discriminator 1
 1960 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1961 002a 012B     		cmp	r3, #1
 1962 002c 02D1     		bne	.L84
1514:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	while ((status == FLASH_BUSY) && (Timeout != 0x00)) {
 1963              		.loc 1 1514 0 is_stmt 0 discriminator 2
 1964 002e 7B68     		ldr	r3, [r7, #4]
 1965 0030 002B     		cmp	r3, #0
 1966 0032 F1D1     		bne	.L85
 1967              	.L84:
1517:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1518:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (Timeout == 0x00) {
 1968              		.loc 1 1518 0 is_stmt 1
 1969 0034 7B68     		ldr	r3, [r7, #4]
 1970 0036 002B     		cmp	r3, #0
 1971 0038 02D1     		bne	.L86
1519:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_TIMEOUT;
 1972              		.loc 1 1519 0
 1973 003a 4FF00503 		mov	r3, #5
 1974 003e FB73     		strb	r3, [r7, #15]
 1975              	.L86:
1520:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1521:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the operation status */
1522:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return status;
 1976              		.loc 1 1522 0
 1977 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1523:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 1978              		.loc 1 1523 0
 1979 0042 1846     		mov	r0, r3
 1980 0044 07F11007 		add	r7, r7, #16
 1981 0048 BD46     		mov	sp, r7
 1982 004a 80BD     		pop	{r7, pc}
 1983              		.cfi_endproc
 1984              	.LFE55:
 1986              		.section	.text.FLASH_WaitForLastBank1Operation,"ax",%progbits
 1987              		.align	2
 1988              		.global	FLASH_WaitForLastBank1Operation
 1989              		.thumb
 1990              		.thumb_func
 1992              	FLASH_WaitForLastBank1Operation:
 1993              	.LFB56:
1524:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1525:../StdPeripheralDriver/src/stm32f10x_flash.c **** /**
1526:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @brief  Waits for a Flash operation on Bank1 to complete or a TIMEOUT to occur.
1527:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @note   This function can be used for all STM32F10x devices, 
1528:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         it is equivalent to FLASH_WaitForLastOperation.
1529:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @param  Timeout: FLASH programming Timeout
1530:../StdPeripheralDriver/src/stm32f10x_flash.c ****  * @retval FLASH Status: The returned value can be: FLASH_ERROR_PG,
1531:../StdPeripheralDriver/src/stm32f10x_flash.c ****  *         FLASH_ERROR_WRP, FLASH_COMPLETE or FLASH_TIMEOUT.
1532:../StdPeripheralDriver/src/stm32f10x_flash.c ****  */
1533:../StdPeripheralDriver/src/stm32f10x_flash.c **** FLASH_Status FLASH_WaitForLastBank1Operation(uint32_t Timeout) {
 1994              		.loc 1 1533 0
 1995              		.cfi_startproc
 1996              		@ args = 0, pretend = 0, frame = 16
 1997              		@ frame_needed = 1, uses_anonymous_args = 0
 1998 0000 80B5     		push	{r7, lr}
 1999              	.LCFI75:
 2000              		.cfi_def_cfa_offset 8
 2001              		.cfi_offset 7, -8
 2002              		.cfi_offset 14, -4
 2003 0002 84B0     		sub	sp, sp, #16
 2004              	.LCFI76:
 2005              		.cfi_def_cfa_offset 24
 2006 0004 00AF     		add	r7, sp, #0
 2007              	.LCFI77:
 2008              		.cfi_def_cfa_register 7
 2009 0006 7860     		str	r0, [r7, #4]
1534:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	FLASH_Status status = FLASH_COMPLETE;
 2010              		.loc 1 1534 0
 2011 0008 4FF00403 		mov	r3, #4
 2012 000c FB73     		strb	r3, [r7, #15]
1535:../StdPeripheralDriver/src/stm32f10x_flash.c **** 
1536:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Check for the Flash Status */
1537:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_GetBank1Status();
 2013              		.loc 1 1537 0
 2014 000e FFF7FEFF 		bl	FLASH_GetBank1Status
 2015 0012 0346     		mov	r3, r0
 2016 0014 FB73     		strb	r3, [r7, #15]
1538:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Wait for a Flash operation to complete or a TIMEOUT to occur */
1539:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	while ((status == FLASH_FLAG_BANK1_BSY )&& (Timeout != 0x00)){
 2017              		.loc 1 1539 0
 2018 0016 07E0     		b	.L89
 2019              	.L91:
1540:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	status = FLASH_GetBank1Status();
 2020              		.loc 1 1540 0
 2021 0018 FFF7FEFF 		bl	FLASH_GetBank1Status
 2022 001c 0346     		mov	r3, r0
 2023 001e FB73     		strb	r3, [r7, #15]
1541:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	Timeout--;
 2024              		.loc 1 1541 0
 2025 0020 7B68     		ldr	r3, [r7, #4]
 2026 0022 03F1FF33 		add	r3, r3, #-1
 2027 0026 7B60     		str	r3, [r7, #4]
 2028              	.L89:
1539:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	while ((status == FLASH_FLAG_BANK1_BSY )&& (Timeout != 0x00)){
 2029              		.loc 1 1539 0 discriminator 1
 2030 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2031 002a 012B     		cmp	r3, #1
 2032 002c 02D1     		bne	.L90
1539:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	while ((status == FLASH_FLAG_BANK1_BSY )&& (Timeout != 0x00)){
 2033              		.loc 1 1539 0 is_stmt 0 discriminator 2
 2034 002e 7B68     		ldr	r3, [r7, #4]
 2035 0030 002B     		cmp	r3, #0
 2036 0032 F1D1     		bne	.L91
 2037              	.L90:
1542:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
1543:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	if (Timeout == 0x00) {
 2038              		.loc 1 1543 0 is_stmt 1
 2039 0034 7B68     		ldr	r3, [r7, #4]
 2040 0036 002B     		cmp	r3, #0
 2041 0038 02D1     		bne	.L92
1544:../StdPeripheralDriver/src/stm32f10x_flash.c **** 		status = FLASH_TIMEOUT;
 2042              		.loc 1 1544 0
 2043 003a 4FF00503 		mov	r3, #5
 2044 003e FB73     		strb	r3, [r7, #15]
 2045              	.L92:
1545:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	}
1546:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	/* Return the operation status */
1547:../StdPeripheralDriver/src/stm32f10x_flash.c **** 	return status;
 2046              		.loc 1 1547 0
 2047 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1548:../StdPeripheralDriver/src/stm32f10x_flash.c **** }
 2048              		.loc 1 1548 0
 2049 0042 1846     		mov	r0, r3
 2050 0044 07F11007 		add	r7, r7, #16
 2051 0048 BD46     		mov	sp, r7
 2052 004a 80BD     		pop	{r7, pc}
 2053              		.cfi_endproc
 2054              	.LFE56:
 2056              		.text
 2057              	.Letext0:
 2058              		.file 2 "/home/frolls/ARM/gcc-arm-none-eabi-4_7-2012q4/bin/../lib/gcc/arm-none-eabi/4.7.3/../../..
 2059              		.file 3 "/home/frolls/git/STM32_FreeRTOS_freeModBus/stm32vld_template/CMSIS/stm32f10x.h"
 2060              		.file 4 "/home/frolls/git/STM32_FreeRTOS_freeModBus/stm32vld_template/StdPeripheralDriver/inc/stm3
 2061              		.file 5 "/home/frolls/git/STM32_FreeRTOS_freeModBus/stm32vld_template/CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_flash.c
     /tmp/ccyJY8Wj.s:19     .text.FLASH_SetLatency:00000000 $t
     /tmp/ccyJY8Wj.s:24     .text.FLASH_SetLatency:00000000 FLASH_SetLatency
     /tmp/ccyJY8Wj.s:74     .text.FLASH_HalfCycleAccessCmd:00000000 $t
     /tmp/ccyJY8Wj.s:79     .text.FLASH_HalfCycleAccessCmd:00000000 FLASH_HalfCycleAccessCmd
     /tmp/ccyJY8Wj.s:123    .text.FLASH_PrefetchBufferCmd:00000000 $t
     /tmp/ccyJY8Wj.s:128    .text.FLASH_PrefetchBufferCmd:00000000 FLASH_PrefetchBufferCmd
     /tmp/ccyJY8Wj.s:172    .text.FLASH_Unlock:00000000 $t
     /tmp/ccyJY8Wj.s:177    .text.FLASH_Unlock:00000000 FLASH_Unlock
     /tmp/ccyJY8Wj.s:211    .text.FLASH_UnlockBank1:00000000 $t
     /tmp/ccyJY8Wj.s:216    .text.FLASH_UnlockBank1:00000000 FLASH_UnlockBank1
     /tmp/ccyJY8Wj.s:250    .text.FLASH_Lock:00000000 $t
     /tmp/ccyJY8Wj.s:255    .text.FLASH_Lock:00000000 FLASH_Lock
     /tmp/ccyJY8Wj.s:285    .text.FLASH_LockBank1:00000000 $t
     /tmp/ccyJY8Wj.s:290    .text.FLASH_LockBank1:00000000 FLASH_LockBank1
     /tmp/ccyJY8Wj.s:320    .text.FLASH_ErasePage:00000000 $t
     /tmp/ccyJY8Wj.s:325    .text.FLASH_ErasePage:00000000 FLASH_ErasePage
     /tmp/ccyJY8Wj.s:1922   .text.FLASH_WaitForLastOperation:00000000 FLASH_WaitForLastOperation
     /tmp/ccyJY8Wj.s:402    .text.FLASH_EraseAllPages:00000000 $t
     /tmp/ccyJY8Wj.s:407    .text.FLASH_EraseAllPages:00000000 FLASH_EraseAllPages
     /tmp/ccyJY8Wj.s:478    .text.FLASH_EraseAllBank1Pages:00000000 $t
     /tmp/ccyJY8Wj.s:483    .text.FLASH_EraseAllBank1Pages:00000000 FLASH_EraseAllBank1Pages
     /tmp/ccyJY8Wj.s:1992   .text.FLASH_WaitForLastBank1Operation:00000000 FLASH_WaitForLastBank1Operation
     /tmp/ccyJY8Wj.s:554    .text.FLASH_EraseOptionBytes:00000000 $t
     /tmp/ccyJY8Wj.s:559    .text.FLASH_EraseOptionBytes:00000000 FLASH_EraseOptionBytes
     /tmp/ccyJY8Wj.s:1489   .text.FLASH_GetReadOutProtectionStatus:00000000 FLASH_GetReadOutProtectionStatus
     /tmp/ccyJY8Wj.s:704    .text.FLASH_ProgramWord:00000000 $t
     /tmp/ccyJY8Wj.s:709    .text.FLASH_ProgramWord:00000000 FLASH_ProgramWord
     /tmp/ccyJY8Wj.s:812    .text.FLASH_ProgramHalfWord:00000000 $t
     /tmp/ccyJY8Wj.s:817    .text.FLASH_ProgramHalfWord:00000000 FLASH_ProgramHalfWord
     /tmp/ccyJY8Wj.s:887    .text.FLASH_ProgramOptionByteData:00000000 $t
     /tmp/ccyJY8Wj.s:892    .text.FLASH_ProgramOptionByteData:00000000 FLASH_ProgramOptionByteData
     /tmp/ccyJY8Wj.s:979    .text.FLASH_EnableWriteProtection:00000000 $t
     /tmp/ccyJY8Wj.s:984    .text.FLASH_EnableWriteProtection:00000000 FLASH_EnableWriteProtection
     /tmp/ccyJY8Wj.s:1164   .text.FLASH_ReadOutProtection:00000000 $t
     /tmp/ccyJY8Wj.s:1169   .text.FLASH_ReadOutProtection:00000000 FLASH_ReadOutProtection
     /tmp/ccyJY8Wj.s:1316   .text.FLASH_UserOptionByteConfig:00000000 $t
     /tmp/ccyJY8Wj.s:1321   .text.FLASH_UserOptionByteConfig:00000000 FLASH_UserOptionByteConfig
     /tmp/ccyJY8Wj.s:1419   .text.FLASH_GetUserOptionByte:00000000 $t
     /tmp/ccyJY8Wj.s:1424   .text.FLASH_GetUserOptionByte:00000000 FLASH_GetUserOptionByte
     /tmp/ccyJY8Wj.s:1452   .text.FLASH_GetWriteProtectionOptionByte:00000000 $t
     /tmp/ccyJY8Wj.s:1457   .text.FLASH_GetWriteProtectionOptionByte:00000000 FLASH_GetWriteProtectionOptionByte
     /tmp/ccyJY8Wj.s:1484   .text.FLASH_GetReadOutProtectionStatus:00000000 $t
     /tmp/ccyJY8Wj.s:1537   .text.FLASH_GetPrefetchBufferStatus:00000000 $t
     /tmp/ccyJY8Wj.s:1542   .text.FLASH_GetPrefetchBufferStatus:00000000 FLASH_GetPrefetchBufferStatus
     /tmp/ccyJY8Wj.s:1590   .text.FLASH_ITConfig:00000000 $t
     /tmp/ccyJY8Wj.s:1595   .text.FLASH_ITConfig:00000000 FLASH_ITConfig
     /tmp/ccyJY8Wj.s:1650   .text.FLASH_GetFlagStatus:00000000 $t
     /tmp/ccyJY8Wj.s:1655   .text.FLASH_GetFlagStatus:00000000 FLASH_GetFlagStatus
     /tmp/ccyJY8Wj.s:1726   .text.FLASH_ClearFlag:00000000 $t
     /tmp/ccyJY8Wj.s:1731   .text.FLASH_ClearFlag:00000000 FLASH_ClearFlag
     /tmp/ccyJY8Wj.s:1763   .text.FLASH_GetStatus:00000000 $t
     /tmp/ccyJY8Wj.s:1768   .text.FLASH_GetStatus:00000000 FLASH_GetStatus
     /tmp/ccyJY8Wj.s:1840   .text.FLASH_GetBank1Status:00000000 $t
     /tmp/ccyJY8Wj.s:1845   .text.FLASH_GetBank1Status:00000000 FLASH_GetBank1Status
     /tmp/ccyJY8Wj.s:1917   .text.FLASH_WaitForLastOperation:00000000 $t
     /tmp/ccyJY8Wj.s:1987   .text.FLASH_WaitForLastBank1Operation:00000000 $t
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.3f2d2167d278fc96c4a7439609634148
                           .group:00000000 wm4.stm32f10x.h.51.643d5396a325ce00fe75ea490db6ba44
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.524.bbf52ca28bdf7ef267115429e0387679
                           .group:00000000 wm4.stm32f10x_conf.h.9.3838e46d9de2be24c7ed73296c5ae8b5
                           .group:00000000 wm4.stm32f10x.h.8267.abe69e40cf43ea9673cb5d472d4b6964
                           .group:00000000 wm4.stm32f10x_flash.h.71.e9cd007501bad084a1073f7db78f76e5

NO UNDEFINED SYMBOLS
