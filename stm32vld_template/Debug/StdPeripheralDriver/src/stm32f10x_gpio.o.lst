   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_gpio.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.GPIO_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	GPIO_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	GPIO_DeInit:
  25              	.LFB29:
  26              		.file 1 "../StdPeripheralDriver/src/stm32f10x_gpio.c"
   1:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
   2:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  ******************************************************************************
   3:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @file    stm32f10x_gpio.c
   4:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @author  MCD Application Team
   5:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @version V3.5.0
   6:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @date    11-March-2011
   7:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief   This file provides all the GPIO firmware functions.
   8:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  ******************************************************************************
   9:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @attention
  10:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *
  11:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *
  18:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  ******************************************************************************
  20:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
  21:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  22:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /* Includes ------------------------------------------------------------------*/
  23:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #include "stm32f10x_gpio.h"
  24:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #include "stm32f10x_rcc.h"
  25:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  26:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @{
  28:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
  29:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  30:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /** @defgroup GPIO 
  31:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief GPIO driver modules
  32:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @{
  33:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
  34:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  35:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /** @defgroup GPIO_Private_TypesDefinitions
  36:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @{
  37:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
  38:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  39:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
  40:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @}
  41:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
  42:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  43:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /** @defgroup GPIO_Private_Defines
  44:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @{
  45:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
  46:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  47:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /* ------------ RCC registers bit address in the alias region ----------------*/
  48:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #define AFIO_OFFSET                 (AFIO_BASE - PERIPH_BASE)
  49:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  50:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /* --- EVENTCR Register -----*/
  51:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  52:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /* Alias word address of EVOE bit */
  53:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #define EVCR_OFFSET                 (AFIO_OFFSET + 0x00)
  54:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #define EVOE_BitNumber              ((uint8_t)0x07)
  55:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #define EVCR_EVOE_BB                (PERIPH_BB_BASE + (EVCR_OFFSET * 32) + (EVOE_BitNumber * 4))
  56:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  57:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /* ---  MAPR Register ---*/
  58:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /* Alias word address of MII_RMII_SEL bit */
  59:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #define MAPR_OFFSET                 (AFIO_OFFSET + 0x04) 
  60:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #define MII_RMII_SEL_BitNumber      ((u8)0x17) 
  61:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #define MAPR_MII_RMII_SEL_BB        (PERIPH_BB_BASE + (MAPR_OFFSET * 32) + (MII_RMII_SEL_BitNumber 
  62:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  63:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #define EVCR_PORTPINCONFIG_MASK     ((uint16_t)0xFF80)
  64:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #define LSB_MASK                    ((uint16_t)0xFFFF)
  65:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #define DBGAFR_POSITION_MASK        ((uint32_t)0x000F0000)
  66:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #define DBGAFR_SWJCFG_MASK          ((uint32_t)0xF0FFFFFF)
  67:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #define DBGAFR_LOCATION_MASK        ((uint32_t)0x00200000)
  68:../StdPeripheralDriver/src/stm32f10x_gpio.c **** #define DBGAFR_NUMBITS_MASK         ((uint32_t)0x00100000)
  69:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
  70:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @}
  71:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
  72:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  73:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /** @defgroup GPIO_Private_Macros
  74:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @{
  75:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
  76:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  77:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
  78:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @}
  79:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
  80:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  81:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /** @defgroup GPIO_Private_Variables
  82:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @{
  83:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
  84:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  85:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
  86:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @}
  87:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
  88:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  89:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /** @defgroup GPIO_Private_FunctionPrototypes
  90:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @{
  91:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
  92:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  93:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
  94:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @}
  95:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
  96:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
  97:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /** @defgroup GPIO_Private_Functions
  98:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @{
  99:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 100:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 101:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 102:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Deinitializes the GPIOx peripheral registers to their default reset values.
 103:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 104:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval None
 105:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 106:../StdPeripheralDriver/src/stm32f10x_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx) {
  27              		.loc 1 106 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
 107:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 108:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 109:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 110:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	if (GPIOx == GPIOA ) {
  43              		.loc 1 110 0
  44 0008 7A68     		ldr	r2, [r7, #4]
  45 000a 4FF40063 		mov	r3, #2048
  46 000e C4F20103 		movt	r3, 16385
  47 0012 9A42     		cmp	r2, r3
  48 0014 0CD1     		bne	.L2
 111:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOA, ENABLE);
  49              		.loc 1 111 0
  50 0016 4FF00400 		mov	r0, #4
  51 001a 4FF00101 		mov	r1, #1
  52 001e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 112:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOA, DISABLE);
  53              		.loc 1 112 0
  54 0022 4FF00400 		mov	r0, #4
  55 0026 4FF00001 		mov	r1, #0
  56 002a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  57 002e 76E0     		b	.L1
  58              	.L2:
 113:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	} else if (GPIOx == GPIOB ) {
  59              		.loc 1 113 0
  60 0030 7A68     		ldr	r2, [r7, #4]
  61 0032 4FF44063 		mov	r3, #3072
  62 0036 C4F20103 		movt	r3, 16385
  63 003a 9A42     		cmp	r2, r3
  64 003c 0CD1     		bne	.L4
 114:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, ENABLE);
  65              		.loc 1 114 0
  66 003e 4FF00800 		mov	r0, #8
  67 0042 4FF00101 		mov	r1, #1
  68 0046 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 115:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, DISABLE);
  69              		.loc 1 115 0
  70 004a 4FF00800 		mov	r0, #8
  71 004e 4FF00001 		mov	r1, #0
  72 0052 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  73 0056 62E0     		b	.L1
  74              	.L4:
 116:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	} else if (GPIOx == GPIOC ) {
  75              		.loc 1 116 0
  76 0058 7A68     		ldr	r2, [r7, #4]
  77 005a 4FF48053 		mov	r3, #4096
  78 005e C4F20103 		movt	r3, 16385
  79 0062 9A42     		cmp	r2, r3
  80 0064 0CD1     		bne	.L5
 117:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, ENABLE);
  81              		.loc 1 117 0
  82 0066 4FF01000 		mov	r0, #16
  83 006a 4FF00101 		mov	r1, #1
  84 006e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 118:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, DISABLE);
  85              		.loc 1 118 0
  86 0072 4FF01000 		mov	r0, #16
  87 0076 4FF00001 		mov	r1, #0
  88 007a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  89 007e 4EE0     		b	.L1
  90              	.L5:
 119:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	} else if (GPIOx == GPIOD ) {
  91              		.loc 1 119 0
  92 0080 7A68     		ldr	r2, [r7, #4]
  93 0082 4FF4A053 		mov	r3, #5120
  94 0086 C4F20103 		movt	r3, 16385
  95 008a 9A42     		cmp	r2, r3
  96 008c 0CD1     		bne	.L6
 120:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, ENABLE);
  97              		.loc 1 120 0
  98 008e 4FF02000 		mov	r0, #32
  99 0092 4FF00101 		mov	r1, #1
 100 0096 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 121:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, DISABLE);
 101              		.loc 1 121 0
 102 009a 4FF02000 		mov	r0, #32
 103 009e 4FF00001 		mov	r1, #0
 104 00a2 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 105 00a6 3AE0     		b	.L1
 106              	.L6:
 122:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	} else if (GPIOx == GPIOE ) {
 107              		.loc 1 122 0
 108 00a8 7A68     		ldr	r2, [r7, #4]
 109 00aa 4FF4C053 		mov	r3, #6144
 110 00ae C4F20103 		movt	r3, 16385
 111 00b2 9A42     		cmp	r2, r3
 112 00b4 0CD1     		bne	.L7
 123:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, ENABLE);
 113              		.loc 1 123 0
 114 00b6 4FF04000 		mov	r0, #64
 115 00ba 4FF00101 		mov	r1, #1
 116 00be FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 124:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, DISABLE);
 117              		.loc 1 124 0
 118 00c2 4FF04000 		mov	r0, #64
 119 00c6 4FF00001 		mov	r1, #0
 120 00ca FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 121 00ce 26E0     		b	.L1
 122              	.L7:
 125:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	} else if (GPIOx == GPIOF ) {
 123              		.loc 1 125 0
 124 00d0 7A68     		ldr	r2, [r7, #4]
 125 00d2 4FF4E053 		mov	r3, #7168
 126 00d6 C4F20103 		movt	r3, 16385
 127 00da 9A42     		cmp	r2, r3
 128 00dc 0CD1     		bne	.L8
 126:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOF, ENABLE);
 129              		.loc 1 126 0
 130 00de 4FF08000 		mov	r0, #128
 131 00e2 4FF00101 		mov	r1, #1
 132 00e6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 127:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOF, DISABLE);
 133              		.loc 1 127 0
 134 00ea 4FF08000 		mov	r0, #128
 135 00ee 4FF00001 		mov	r1, #0
 136 00f2 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 137 00f6 12E0     		b	.L1
 138              	.L8:
 128:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	} else {
 129:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		if (GPIOx == GPIOG ) {
 139              		.loc 1 129 0
 140 00f8 7A68     		ldr	r2, [r7, #4]
 141 00fa 4FF40053 		mov	r3, #8192
 142 00fe C4F20103 		movt	r3, 16385
 143 0102 9A42     		cmp	r2, r3
 144 0104 0BD1     		bne	.L1
 130:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 			RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, ENABLE);
 145              		.loc 1 130 0
 146 0106 4FF48070 		mov	r0, #256
 147 010a 4FF00101 		mov	r1, #1
 148 010e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 131:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 			RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, DISABLE);
 149              		.loc 1 131 0
 150 0112 4FF48070 		mov	r0, #256
 151 0116 4FF00001 		mov	r1, #0
 152 011a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 153              	.L1:
 132:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		}
 133:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	}
 134:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 154              		.loc 1 134 0
 155 011e 07F10807 		add	r7, r7, #8
 156 0122 BD46     		mov	sp, r7
 157 0124 80BD     		pop	{r7, pc}
 158              		.cfi_endproc
 159              	.LFE29:
 161 0126 00BF     		.section	.text.GPIO_AFIODeInit,"ax",%progbits
 162              		.align	2
 163              		.global	GPIO_AFIODeInit
 164              		.thumb
 165              		.thumb_func
 167              	GPIO_AFIODeInit:
 168              	.LFB30:
 135:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 136:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 137:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Deinitializes the Alternate Functions (remap, event control
 138:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   and EXTI configuration) registers to their default reset values.
 139:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  None
 140:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval None
 141:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 142:../StdPeripheralDriver/src/stm32f10x_gpio.c **** void GPIO_AFIODeInit(void) {
 169              		.loc 1 142 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 80B5     		push	{r7, lr}
 174              	.LCFI3:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 7, -8
 177              		.cfi_offset 14, -4
 178 0002 00AF     		add	r7, sp, #0
 179              	.LCFI4:
 180              		.cfi_def_cfa_register 7
 143:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, ENABLE);
 181              		.loc 1 143 0
 182 0004 4FF00100 		mov	r0, #1
 183 0008 4FF00101 		mov	r1, #1
 184 000c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 144:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, DISABLE);
 185              		.loc 1 144 0
 186 0010 4FF00100 		mov	r0, #1
 187 0014 4FF00001 		mov	r1, #0
 188 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 145:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 189              		.loc 1 145 0
 190 001c 80BD     		pop	{r7, pc}
 191              		.cfi_endproc
 192              	.LFE30:
 194 001e 00BF     		.section	.text.GPIO_Init,"ax",%progbits
 195              		.align	2
 196              		.global	GPIO_Init
 197              		.thumb
 198              		.thumb_func
 200              	GPIO_Init:
 201              	.LFB31:
 146:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 147:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 148:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Initializes the GPIOx peripheral according to the specified
 149:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *         parameters in the GPIO_InitStruct.
 150:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 151:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that
 152:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *         contains the configuration information for the specified GPIO peripheral.
 153:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval None
 154:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 155:../StdPeripheralDriver/src/stm32f10x_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct) {
 202              		.loc 1 155 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 32
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207 0000 80B4     		push	{r7}
 208              	.LCFI5:
 209              		.cfi_def_cfa_offset 4
 210              		.cfi_offset 7, -4
 211 0002 89B0     		sub	sp, sp, #36
 212              	.LCFI6:
 213              		.cfi_def_cfa_offset 40
 214 0004 00AF     		add	r7, sp, #0
 215              	.LCFI7:
 216              		.cfi_def_cfa_register 7
 217 0006 7860     		str	r0, [r7, #4]
 218 0008 3960     		str	r1, [r7, #0]
 156:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	uint32_t currentmode = 0x00, currentpin = 0x00, pinpos = 0x00, pos = 0x00;
 219              		.loc 1 156 0
 220 000a 4FF00003 		mov	r3, #0
 221 000e FB61     		str	r3, [r7, #28]
 222 0010 4FF00003 		mov	r3, #0
 223 0014 3B61     		str	r3, [r7, #16]
 224 0016 4FF00003 		mov	r3, #0
 225 001a BB61     		str	r3, [r7, #24]
 226 001c 4FF00003 		mov	r3, #0
 227 0020 FB60     		str	r3, [r7, #12]
 157:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	uint32_t tmpreg = 0x00, pinmask = 0x00;
 228              		.loc 1 157 0
 229 0022 4FF00003 		mov	r3, #0
 230 0026 7B61     		str	r3, [r7, #20]
 231 0028 4FF00003 		mov	r3, #0
 232 002c BB60     		str	r3, [r7, #8]
 158:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 159:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_ALL_PERIPH(GPIOx)); assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode)); a
 160:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 161:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/*---------------------------- GPIO Mode Configuration -----------------------*/
 162:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	currentmode = ((uint32_t) GPIO_InitStruct->GPIO_Mode) & ((uint32_t) 0x0F);
 233              		.loc 1 162 0
 234 002e 3B68     		ldr	r3, [r7, #0]
 235 0030 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 236 0032 03F00F03 		and	r3, r3, #15
 237 0036 FB61     		str	r3, [r7, #28]
 163:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	if ((((uint32_t) GPIO_InitStruct->GPIO_Mode) & ((uint32_t) 0x10)) != 0x00) {
 238              		.loc 1 163 0
 239 0038 3B68     		ldr	r3, [r7, #0]
 240 003a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 241 003c 03F01003 		and	r3, r3, #16
 242 0040 002B     		cmp	r3, #0
 243 0042 04D0     		beq	.L11
 164:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		/* Check the parameters */
 165:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 166:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		/* Output mode */
 167:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		currentmode |= (uint32_t) GPIO_InitStruct->GPIO_Speed;
 244              		.loc 1 167 0
 245 0044 3B68     		ldr	r3, [r7, #0]
 246 0046 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 247 0048 FA69     		ldr	r2, [r7, #28]
 248 004a 1343     		orrs	r3, r3, r2
 249 004c FB61     		str	r3, [r7, #28]
 250              	.L11:
 168:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	}
 169:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/*---------------------------- GPIO CRL Configuration ------------------------*/
 170:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Configure the eight low port pins */
 171:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	if (((uint32_t) GPIO_InitStruct->GPIO_Pin & ((uint32_t) 0x00FF)) != 0x00) {
 251              		.loc 1 171 0
 252 004e 3B68     		ldr	r3, [r7, #0]
 253 0050 1B88     		ldrh	r3, [r3, #0]
 254 0052 DBB2     		uxtb	r3, r3
 255 0054 002B     		cmp	r3, #0
 256 0056 4ED0     		beq	.L12
 172:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		tmpreg = GPIOx->CRL;
 257              		.loc 1 172 0
 258 0058 7B68     		ldr	r3, [r7, #4]
 259 005a 1B68     		ldr	r3, [r3, #0]
 260 005c 7B61     		str	r3, [r7, #20]
 173:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		for (pinpos = 0x00; pinpos < 0x08; pinpos++) {
 261              		.loc 1 173 0
 262 005e 4FF00003 		mov	r3, #0
 263 0062 BB61     		str	r3, [r7, #24]
 264 0064 41E0     		b	.L13
 265              	.L16:
 174:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 			pos = ((uint32_t) 0x01) << pinpos;
 266              		.loc 1 174 0
 267 0066 BB69     		ldr	r3, [r7, #24]
 268 0068 4FF00102 		mov	r2, #1
 269 006c 02FA03F3 		lsl	r3, r2, r3
 270 0070 FB60     		str	r3, [r7, #12]
 175:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 			/* Get the port pins position */
 176:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 			currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 271              		.loc 1 176 0
 272 0072 3B68     		ldr	r3, [r7, #0]
 273 0074 1B88     		ldrh	r3, [r3, #0]
 274 0076 1A46     		mov	r2, r3
 275 0078 FB68     		ldr	r3, [r7, #12]
 276 007a 1340     		ands	r3, r3, r2
 277 007c 3B61     		str	r3, [r7, #16]
 177:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 			if (currentpin == pos) {
 278              		.loc 1 177 0
 279 007e 3A69     		ldr	r2, [r7, #16]
 280 0080 FB68     		ldr	r3, [r7, #12]
 281 0082 9A42     		cmp	r2, r3
 282 0084 2DD1     		bne	.L14
 178:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				pos = pinpos << 2;
 283              		.loc 1 178 0
 284 0086 BB69     		ldr	r3, [r7, #24]
 285 0088 4FEA8303 		lsl	r3, r3, #2
 286 008c FB60     		str	r3, [r7, #12]
 179:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				/* Clear the corresponding low control register bits */
 180:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				pinmask = ((uint32_t) 0x0F) << pos;
 287              		.loc 1 180 0
 288 008e FB68     		ldr	r3, [r7, #12]
 289 0090 4FF00F02 		mov	r2, #15
 290 0094 02FA03F3 		lsl	r3, r2, r3
 291 0098 BB60     		str	r3, [r7, #8]
 181:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				tmpreg &= ~pinmask;
 292              		.loc 1 181 0
 293 009a BB68     		ldr	r3, [r7, #8]
 294 009c 6FEA0303 		mvn	r3, r3
 295 00a0 7A69     		ldr	r2, [r7, #20]
 296 00a2 1340     		ands	r3, r3, r2
 297 00a4 7B61     		str	r3, [r7, #20]
 182:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				/* Write the mode configuration in the corresponding bits */
 183:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				tmpreg |= (currentmode << pos);
 298              		.loc 1 183 0
 299 00a6 FB68     		ldr	r3, [r7, #12]
 300 00a8 FA69     		ldr	r2, [r7, #28]
 301 00aa 02FA03F3 		lsl	r3, r2, r3
 302 00ae 7A69     		ldr	r2, [r7, #20]
 303 00b0 1343     		orrs	r3, r3, r2
 304 00b2 7B61     		str	r3, [r7, #20]
 184:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				/* Reset the corresponding ODR bit */
 185:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD) {
 305              		.loc 1 185 0
 306 00b4 3B68     		ldr	r3, [r7, #0]
 307 00b6 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 308 00b8 282B     		cmp	r3, #40
 309 00ba 07D1     		bne	.L15
 186:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 					GPIOx->BRR = (((uint32_t) 0x01) << pinpos);
 310              		.loc 1 186 0
 311 00bc BB69     		ldr	r3, [r7, #24]
 312 00be 4FF00102 		mov	r2, #1
 313 00c2 02FA03F2 		lsl	r2, r2, r3
 314 00c6 7B68     		ldr	r3, [r7, #4]
 315 00c8 5A61     		str	r2, [r3, #20]
 316 00ca 0AE0     		b	.L14
 317              	.L15:
 187:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				} else {
 188:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 					/* Set the corresponding ODR bit */
 189:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 					if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU) {
 318              		.loc 1 189 0
 319 00cc 3B68     		ldr	r3, [r7, #0]
 320 00ce DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 321 00d0 482B     		cmp	r3, #72
 322 00d2 06D1     		bne	.L14
 190:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 						GPIOx->BSRR = (((uint32_t) 0x01) << pinpos);
 323              		.loc 1 190 0
 324 00d4 BB69     		ldr	r3, [r7, #24]
 325 00d6 4FF00102 		mov	r2, #1
 326 00da 02FA03F2 		lsl	r2, r2, r3
 327 00de 7B68     		ldr	r3, [r7, #4]
 328 00e0 1A61     		str	r2, [r3, #16]
 329              	.L14:
 173:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		for (pinpos = 0x00; pinpos < 0x08; pinpos++) {
 330              		.loc 1 173 0
 331 00e2 BB69     		ldr	r3, [r7, #24]
 332 00e4 03F10103 		add	r3, r3, #1
 333 00e8 BB61     		str	r3, [r7, #24]
 334              	.L13:
 173:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		for (pinpos = 0x00; pinpos < 0x08; pinpos++) {
 335              		.loc 1 173 0 is_stmt 0 discriminator 1
 336 00ea BB69     		ldr	r3, [r7, #24]
 337 00ec 072B     		cmp	r3, #7
 338 00ee BAD9     		bls	.L16
 191:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 					}
 192:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				}
 193:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 			}
 194:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		}
 195:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		GPIOx->CRL = tmpreg;
 339              		.loc 1 195 0 is_stmt 1
 340 00f0 7B68     		ldr	r3, [r7, #4]
 341 00f2 7A69     		ldr	r2, [r7, #20]
 342 00f4 1A60     		str	r2, [r3, #0]
 343              	.L12:
 196:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	}
 197:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/*---------------------------- GPIO CRH Configuration ------------------------*/
 198:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Configure the eight high port pins */
 199:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	if (GPIO_InitStruct->GPIO_Pin > 0x00FF) {
 344              		.loc 1 199 0
 345 00f6 3B68     		ldr	r3, [r7, #0]
 346 00f8 1B88     		ldrh	r3, [r3, #0]
 347 00fa FF2B     		cmp	r3, #255
 348 00fc 53D9     		bls	.L10
 200:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		tmpreg = GPIOx->CRH;
 349              		.loc 1 200 0
 350 00fe 7B68     		ldr	r3, [r7, #4]
 351 0100 5B68     		ldr	r3, [r3, #4]
 352 0102 7B61     		str	r3, [r7, #20]
 201:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		for (pinpos = 0x00; pinpos < 0x08; pinpos++) {
 353              		.loc 1 201 0
 354 0104 4FF00003 		mov	r3, #0
 355 0108 BB61     		str	r3, [r7, #24]
 356 010a 46E0     		b	.L18
 357              	.L21:
 202:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 			pos = (((uint32_t) 0x01) << (pinpos + 0x08));
 358              		.loc 1 202 0
 359 010c BB69     		ldr	r3, [r7, #24]
 360 010e 03F10803 		add	r3, r3, #8
 361 0112 4FF00102 		mov	r2, #1
 362 0116 02FA03F3 		lsl	r3, r2, r3
 363 011a FB60     		str	r3, [r7, #12]
 203:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 			/* Get the port pins position */
 204:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 			currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
 364              		.loc 1 204 0
 365 011c 3B68     		ldr	r3, [r7, #0]
 366 011e 1B88     		ldrh	r3, [r3, #0]
 367 0120 1A46     		mov	r2, r3
 368 0122 FB68     		ldr	r3, [r7, #12]
 369 0124 1340     		ands	r3, r3, r2
 370 0126 3B61     		str	r3, [r7, #16]
 205:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 			if (currentpin == pos) {
 371              		.loc 1 205 0
 372 0128 3A69     		ldr	r2, [r7, #16]
 373 012a FB68     		ldr	r3, [r7, #12]
 374 012c 9A42     		cmp	r2, r3
 375 012e 30D1     		bne	.L19
 206:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				pos = pinpos << 2;
 376              		.loc 1 206 0
 377 0130 BB69     		ldr	r3, [r7, #24]
 378 0132 4FEA8303 		lsl	r3, r3, #2
 379 0136 FB60     		str	r3, [r7, #12]
 207:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				/* Clear the corresponding high control register bits */
 208:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				pinmask = ((uint32_t) 0x0F) << pos;
 380              		.loc 1 208 0
 381 0138 FB68     		ldr	r3, [r7, #12]
 382 013a 4FF00F02 		mov	r2, #15
 383 013e 02FA03F3 		lsl	r3, r2, r3
 384 0142 BB60     		str	r3, [r7, #8]
 209:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				tmpreg &= ~pinmask;
 385              		.loc 1 209 0
 386 0144 BB68     		ldr	r3, [r7, #8]
 387 0146 6FEA0303 		mvn	r3, r3
 388 014a 7A69     		ldr	r2, [r7, #20]
 389 014c 1340     		ands	r3, r3, r2
 390 014e 7B61     		str	r3, [r7, #20]
 210:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				/* Write the mode configuration in the corresponding bits */
 211:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				tmpreg |= (currentmode << pos);
 391              		.loc 1 211 0
 392 0150 FB68     		ldr	r3, [r7, #12]
 393 0152 FA69     		ldr	r2, [r7, #28]
 394 0154 02FA03F3 		lsl	r3, r2, r3
 395 0158 7A69     		ldr	r2, [r7, #20]
 396 015a 1343     		orrs	r3, r3, r2
 397 015c 7B61     		str	r3, [r7, #20]
 212:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				/* Reset the corresponding ODR bit */
 213:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD) {
 398              		.loc 1 213 0
 399 015e 3B68     		ldr	r3, [r7, #0]
 400 0160 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 401 0162 282B     		cmp	r3, #40
 402 0164 08D1     		bne	.L20
 214:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 					GPIOx->BRR = (((uint32_t) 0x01) << (pinpos + 0x08));
 403              		.loc 1 214 0
 404 0166 BB69     		ldr	r3, [r7, #24]
 405 0168 03F10803 		add	r3, r3, #8
 406 016c 4FF00102 		mov	r2, #1
 407 0170 02FA03F2 		lsl	r2, r2, r3
 408 0174 7B68     		ldr	r3, [r7, #4]
 409 0176 5A61     		str	r2, [r3, #20]
 410              	.L20:
 215:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				}
 216:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				/* Set the corresponding ODR bit */
 217:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU) {
 411              		.loc 1 217 0
 412 0178 3B68     		ldr	r3, [r7, #0]
 413 017a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 414 017c 482B     		cmp	r3, #72
 415 017e 08D1     		bne	.L19
 218:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 					GPIOx->BSRR = (((uint32_t) 0x01) << (pinpos + 0x08));
 416              		.loc 1 218 0
 417 0180 BB69     		ldr	r3, [r7, #24]
 418 0182 03F10803 		add	r3, r3, #8
 419 0186 4FF00102 		mov	r2, #1
 420 018a 02FA03F2 		lsl	r2, r2, r3
 421 018e 7B68     		ldr	r3, [r7, #4]
 422 0190 1A61     		str	r2, [r3, #16]
 423              	.L19:
 201:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		for (pinpos = 0x00; pinpos < 0x08; pinpos++) {
 424              		.loc 1 201 0
 425 0192 BB69     		ldr	r3, [r7, #24]
 426 0194 03F10103 		add	r3, r3, #1
 427 0198 BB61     		str	r3, [r7, #24]
 428              	.L18:
 201:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		for (pinpos = 0x00; pinpos < 0x08; pinpos++) {
 429              		.loc 1 201 0 is_stmt 0 discriminator 1
 430 019a BB69     		ldr	r3, [r7, #24]
 431 019c 072B     		cmp	r3, #7
 432 019e B5D9     		bls	.L21
 219:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 				}
 220:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 			}
 221:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		}
 222:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		GPIOx->CRH = tmpreg;
 433              		.loc 1 222 0 is_stmt 1
 434 01a0 7B68     		ldr	r3, [r7, #4]
 435 01a2 7A69     		ldr	r2, [r7, #20]
 436 01a4 5A60     		str	r2, [r3, #4]
 437              	.L10:
 223:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	}
 224:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 438              		.loc 1 224 0
 439 01a6 07F12407 		add	r7, r7, #36
 440 01aa BD46     		mov	sp, r7
 441 01ac 80BC     		pop	{r7}
 442 01ae 7047     		bx	lr
 443              		.cfi_endproc
 444              	.LFE31:
 446              		.section	.text.GPIO_StructInit,"ax",%progbits
 447              		.align	2
 448              		.global	GPIO_StructInit
 449              		.thumb
 450              		.thumb_func
 452              	GPIO_StructInit:
 453              	.LFB32:
 225:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 226:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 227:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Fills each GPIO_InitStruct member with its default value.
 228:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will
 229:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *         be initialized.
 230:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval None
 231:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 232:../StdPeripheralDriver/src/stm32f10x_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct) {
 454              		.loc 1 232 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 8
 457              		@ frame_needed = 1, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 459 0000 80B4     		push	{r7}
 460              	.LCFI8:
 461              		.cfi_def_cfa_offset 4
 462              		.cfi_offset 7, -4
 463 0002 83B0     		sub	sp, sp, #12
 464              	.LCFI9:
 465              		.cfi_def_cfa_offset 16
 466 0004 00AF     		add	r7, sp, #0
 467              	.LCFI10:
 468              		.cfi_def_cfa_register 7
 469 0006 7860     		str	r0, [r7, #4]
 233:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Reset GPIO init structure parameters values */
 234:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	GPIO_InitStruct->GPIO_Pin = GPIO_Pin_All;
 470              		.loc 1 234 0
 471 0008 7B68     		ldr	r3, [r7, #4]
 472 000a 4FF6FF72 		movw	r2, #65535
 473 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 235:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 474              		.loc 1 235 0
 475 0010 7B68     		ldr	r3, [r7, #4]
 476 0012 4FF00202 		mov	r2, #2
 477 0016 9A70     		strb	r2, [r3, #2]
 236:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN_FLOATING;
 478              		.loc 1 236 0
 479 0018 7B68     		ldr	r3, [r7, #4]
 480 001a 4FF00402 		mov	r2, #4
 481 001e DA70     		strb	r2, [r3, #3]
 237:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 482              		.loc 1 237 0
 483 0020 07F10C07 		add	r7, r7, #12
 484 0024 BD46     		mov	sp, r7
 485 0026 80BC     		pop	{r7}
 486 0028 7047     		bx	lr
 487              		.cfi_endproc
 488              	.LFE32:
 490 002a 00BF     		.section	.text.GPIO_ReadInputDataBit,"ax",%progbits
 491              		.align	2
 492              		.global	GPIO_ReadInputDataBit
 493              		.thumb
 494              		.thumb_func
 496              	GPIO_ReadInputDataBit:
 497              	.LFB33:
 238:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 239:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 240:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Reads the specified input port pin.
 241:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 242:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIO_Pin:  specifies the port bit to read.
 243:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be GPIO_Pin_x where x can be (0..15).
 244:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval The input port pin value.
 245:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 246:../StdPeripheralDriver/src/stm32f10x_gpio.c **** uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin) {
 498              		.loc 1 246 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 16
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502              		@ link register save eliminated.
 503 0000 80B4     		push	{r7}
 504              	.LCFI11:
 505              		.cfi_def_cfa_offset 4
 506              		.cfi_offset 7, -4
 507 0002 85B0     		sub	sp, sp, #20
 508              	.LCFI12:
 509              		.cfi_def_cfa_offset 24
 510 0004 00AF     		add	r7, sp, #0
 511              	.LCFI13:
 512              		.cfi_def_cfa_register 7
 513 0006 7860     		str	r0, [r7, #4]
 514 0008 0B46     		mov	r3, r1
 515 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 247:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	uint8_t bitstatus = 0x00;
 516              		.loc 1 247 0
 517 000c 4FF00003 		mov	r3, #0
 518 0010 FB73     		strb	r3, [r7, #15]
 248:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 249:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 250:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_ALL_PERIPH(GPIOx)); assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 251:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 252:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	if ((GPIOx->IDR & GPIO_Pin) != (uint32_t) Bit_RESET) {
 519              		.loc 1 252 0
 520 0012 7B68     		ldr	r3, [r7, #4]
 521 0014 9A68     		ldr	r2, [r3, #8]
 522 0016 7B88     		ldrh	r3, [r7, #2]
 523 0018 1340     		ands	r3, r3, r2
 524 001a 002B     		cmp	r3, #0
 525 001c 03D0     		beq	.L24
 253:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		bitstatus = (uint8_t) Bit_SET;
 526              		.loc 1 253 0
 527 001e 4FF00103 		mov	r3, #1
 528 0022 FB73     		strb	r3, [r7, #15]
 529 0024 02E0     		b	.L25
 530              	.L24:
 254:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	} else {
 255:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		bitstatus = (uint8_t) Bit_RESET;
 531              		.loc 1 255 0
 532 0026 4FF00003 		mov	r3, #0
 533 002a FB73     		strb	r3, [r7, #15]
 534              	.L25:
 256:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	}
 257:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	return bitstatus;
 535              		.loc 1 257 0
 536 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 258:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 537              		.loc 1 258 0
 538 002e 1846     		mov	r0, r3
 539 0030 07F11407 		add	r7, r7, #20
 540 0034 BD46     		mov	sp, r7
 541 0036 80BC     		pop	{r7}
 542 0038 7047     		bx	lr
 543              		.cfi_endproc
 544              	.LFE33:
 546 003a 00BF     		.section	.text.GPIO_ReadInputData,"ax",%progbits
 547              		.align	2
 548              		.global	GPIO_ReadInputData
 549              		.thumb
 550              		.thumb_func
 552              	GPIO_ReadInputData:
 553              	.LFB34:
 259:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 260:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 261:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Reads the specified GPIO input data port.
 262:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 263:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval GPIO input data port value.
 264:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 265:../StdPeripheralDriver/src/stm32f10x_gpio.c **** uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx) {
 554              		.loc 1 265 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 8
 557              		@ frame_needed = 1, uses_anonymous_args = 0
 558              		@ link register save eliminated.
 559 0000 80B4     		push	{r7}
 560              	.LCFI14:
 561              		.cfi_def_cfa_offset 4
 562              		.cfi_offset 7, -4
 563 0002 83B0     		sub	sp, sp, #12
 564              	.LCFI15:
 565              		.cfi_def_cfa_offset 16
 566 0004 00AF     		add	r7, sp, #0
 567              	.LCFI16:
 568              		.cfi_def_cfa_register 7
 569 0006 7860     		str	r0, [r7, #4]
 266:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 267:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 268:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 269:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	return ((uint16_t) GPIOx->IDR);
 570              		.loc 1 269 0
 571 0008 7B68     		ldr	r3, [r7, #4]
 572 000a 9B68     		ldr	r3, [r3, #8]
 573 000c 9BB2     		uxth	r3, r3
 270:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 574              		.loc 1 270 0
 575 000e 1846     		mov	r0, r3
 576 0010 07F10C07 		add	r7, r7, #12
 577 0014 BD46     		mov	sp, r7
 578 0016 80BC     		pop	{r7}
 579 0018 7047     		bx	lr
 580              		.cfi_endproc
 581              	.LFE34:
 583 001a 00BF     		.section	.text.GPIO_ReadOutputDataBit,"ax",%progbits
 584              		.align	2
 585              		.global	GPIO_ReadOutputDataBit
 586              		.thumb
 587              		.thumb_func
 589              	GPIO_ReadOutputDataBit:
 590              	.LFB35:
 271:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 272:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 273:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Reads the specified output data port bit.
 274:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 275:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIO_Pin:  specifies the port bit to read.
 276:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be GPIO_Pin_x where x can be (0..15).
 277:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval The output port pin value.
 278:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 279:../StdPeripheralDriver/src/stm32f10x_gpio.c **** uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin) {
 591              		.loc 1 279 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 16
 594              		@ frame_needed = 1, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596 0000 80B4     		push	{r7}
 597              	.LCFI17:
 598              		.cfi_def_cfa_offset 4
 599              		.cfi_offset 7, -4
 600 0002 85B0     		sub	sp, sp, #20
 601              	.LCFI18:
 602              		.cfi_def_cfa_offset 24
 603 0004 00AF     		add	r7, sp, #0
 604              	.LCFI19:
 605              		.cfi_def_cfa_register 7
 606 0006 7860     		str	r0, [r7, #4]
 607 0008 0B46     		mov	r3, r1
 608 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 280:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	uint8_t bitstatus = 0x00;
 609              		.loc 1 280 0
 610 000c 4FF00003 		mov	r3, #0
 611 0010 FB73     		strb	r3, [r7, #15]
 281:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 282:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_ALL_PERIPH(GPIOx)); assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 283:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 284:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	if ((GPIOx->ODR & GPIO_Pin) != (uint32_t) Bit_RESET) {
 612              		.loc 1 284 0
 613 0012 7B68     		ldr	r3, [r7, #4]
 614 0014 DA68     		ldr	r2, [r3, #12]
 615 0016 7B88     		ldrh	r3, [r7, #2]
 616 0018 1340     		ands	r3, r3, r2
 617 001a 002B     		cmp	r3, #0
 618 001c 03D0     		beq	.L30
 285:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		bitstatus = (uint8_t) Bit_SET;
 619              		.loc 1 285 0
 620 001e 4FF00103 		mov	r3, #1
 621 0022 FB73     		strb	r3, [r7, #15]
 622 0024 02E0     		b	.L31
 623              	.L30:
 286:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	} else {
 287:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		bitstatus = (uint8_t) Bit_RESET;
 624              		.loc 1 287 0
 625 0026 4FF00003 		mov	r3, #0
 626 002a FB73     		strb	r3, [r7, #15]
 627              	.L31:
 288:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	}
 289:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	return bitstatus;
 628              		.loc 1 289 0
 629 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 290:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 630              		.loc 1 290 0
 631 002e 1846     		mov	r0, r3
 632 0030 07F11407 		add	r7, r7, #20
 633 0034 BD46     		mov	sp, r7
 634 0036 80BC     		pop	{r7}
 635 0038 7047     		bx	lr
 636              		.cfi_endproc
 637              	.LFE35:
 639 003a 00BF     		.section	.text.GPIO_ReadOutputData,"ax",%progbits
 640              		.align	2
 641              		.global	GPIO_ReadOutputData
 642              		.thumb
 643              		.thumb_func
 645              	GPIO_ReadOutputData:
 646              	.LFB36:
 291:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 292:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 293:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Reads the specified GPIO output data port.
 294:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 295:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval GPIO output data port value.
 296:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 297:../StdPeripheralDriver/src/stm32f10x_gpio.c **** uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx) {
 647              		.loc 1 297 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 8
 650              		@ frame_needed = 1, uses_anonymous_args = 0
 651              		@ link register save eliminated.
 652 0000 80B4     		push	{r7}
 653              	.LCFI20:
 654              		.cfi_def_cfa_offset 4
 655              		.cfi_offset 7, -4
 656 0002 83B0     		sub	sp, sp, #12
 657              	.LCFI21:
 658              		.cfi_def_cfa_offset 16
 659 0004 00AF     		add	r7, sp, #0
 660              	.LCFI22:
 661              		.cfi_def_cfa_register 7
 662 0006 7860     		str	r0, [r7, #4]
 298:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 299:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 300:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 301:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	return ((uint16_t) GPIOx->ODR);
 663              		.loc 1 301 0
 664 0008 7B68     		ldr	r3, [r7, #4]
 665 000a DB68     		ldr	r3, [r3, #12]
 666 000c 9BB2     		uxth	r3, r3
 302:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 667              		.loc 1 302 0
 668 000e 1846     		mov	r0, r3
 669 0010 07F10C07 		add	r7, r7, #12
 670 0014 BD46     		mov	sp, r7
 671 0016 80BC     		pop	{r7}
 672 0018 7047     		bx	lr
 673              		.cfi_endproc
 674              	.LFE36:
 676 001a 00BF     		.section	.text.GPIO_SetBits,"ax",%progbits
 677              		.align	2
 678              		.global	GPIO_SetBits
 679              		.thumb
 680              		.thumb_func
 682              	GPIO_SetBits:
 683              	.LFB37:
 303:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 304:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 305:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Sets the selected data port bits.
 306:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 307:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIO_Pin: specifies the port bits to be written.
 308:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 309:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval None
 310:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 311:../StdPeripheralDriver/src/stm32f10x_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin) {
 684              		.loc 1 311 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 8
 687              		@ frame_needed = 1, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 689 0000 80B4     		push	{r7}
 690              	.LCFI23:
 691              		.cfi_def_cfa_offset 4
 692              		.cfi_offset 7, -4
 693 0002 83B0     		sub	sp, sp, #12
 694              	.LCFI24:
 695              		.cfi_def_cfa_offset 16
 696 0004 00AF     		add	r7, sp, #0
 697              	.LCFI25:
 698              		.cfi_def_cfa_register 7
 699 0006 7860     		str	r0, [r7, #4]
 700 0008 0B46     		mov	r3, r1
 701 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 312:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 313:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_ALL_PERIPH(GPIOx)); assert_param(IS_GPIO_PIN(GPIO_Pin));
 314:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 315:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	GPIOx->BSRR = GPIO_Pin;
 702              		.loc 1 315 0
 703 000c 7A88     		ldrh	r2, [r7, #2]
 704 000e 7B68     		ldr	r3, [r7, #4]
 705 0010 1A61     		str	r2, [r3, #16]
 316:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 706              		.loc 1 316 0
 707 0012 07F10C07 		add	r7, r7, #12
 708 0016 BD46     		mov	sp, r7
 709 0018 80BC     		pop	{r7}
 710 001a 7047     		bx	lr
 711              		.cfi_endproc
 712              	.LFE37:
 714              		.section	.text.GPIO_ResetBits,"ax",%progbits
 715              		.align	2
 716              		.global	GPIO_ResetBits
 717              		.thumb
 718              		.thumb_func
 720              	GPIO_ResetBits:
 721              	.LFB38:
 317:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 318:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 319:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Clears the selected data port bits.
 320:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 321:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIO_Pin: specifies the port bits to be written.
 322:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 323:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval None
 324:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 325:../StdPeripheralDriver/src/stm32f10x_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin) {
 722              		.loc 1 325 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 8
 725              		@ frame_needed = 1, uses_anonymous_args = 0
 726              		@ link register save eliminated.
 727 0000 80B4     		push	{r7}
 728              	.LCFI26:
 729              		.cfi_def_cfa_offset 4
 730              		.cfi_offset 7, -4
 731 0002 83B0     		sub	sp, sp, #12
 732              	.LCFI27:
 733              		.cfi_def_cfa_offset 16
 734 0004 00AF     		add	r7, sp, #0
 735              	.LCFI28:
 736              		.cfi_def_cfa_register 7
 737 0006 7860     		str	r0, [r7, #4]
 738 0008 0B46     		mov	r3, r1
 739 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 326:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 327:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_ALL_PERIPH(GPIOx)); assert_param(IS_GPIO_PIN(GPIO_Pin));
 328:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 329:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	GPIOx->BRR = GPIO_Pin;
 740              		.loc 1 329 0
 741 000c 7A88     		ldrh	r2, [r7, #2]
 742 000e 7B68     		ldr	r3, [r7, #4]
 743 0010 5A61     		str	r2, [r3, #20]
 330:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 744              		.loc 1 330 0
 745 0012 07F10C07 		add	r7, r7, #12
 746 0016 BD46     		mov	sp, r7
 747 0018 80BC     		pop	{r7}
 748 001a 7047     		bx	lr
 749              		.cfi_endproc
 750              	.LFE38:
 752              		.section	.text.GPIO_WriteBit,"ax",%progbits
 753              		.align	2
 754              		.global	GPIO_WriteBit
 755              		.thumb
 756              		.thumb_func
 758              	GPIO_WriteBit:
 759              	.LFB39:
 331:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 332:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 333:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Sets or clears the selected data port bit.
 334:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 335:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIO_Pin: specifies the port bit to be written.
 336:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be one of GPIO_Pin_x where x can be (0..15).
 337:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  BitVal: specifies the value to be written to the selected bit.
 338:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be one of the BitAction enum values:
 339:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg Bit_RESET: to clear the port pin
 340:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg Bit_SET: to set the port pin
 341:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval None
 342:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 343:../StdPeripheralDriver/src/stm32f10x_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal) {
 760              		.loc 1 343 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 8
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764              		@ link register save eliminated.
 765 0000 80B4     		push	{r7}
 766              	.LCFI29:
 767              		.cfi_def_cfa_offset 4
 768              		.cfi_offset 7, -4
 769 0002 83B0     		sub	sp, sp, #12
 770              	.LCFI30:
 771              		.cfi_def_cfa_offset 16
 772 0004 00AF     		add	r7, sp, #0
 773              	.LCFI31:
 774              		.cfi_def_cfa_register 7
 775 0006 7860     		str	r0, [r7, #4]
 776 0008 1346     		mov	r3, r2
 777 000a 0A46     		mov	r2, r1	@ movhi
 778 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 779 000e 7B70     		strb	r3, [r7, #1]
 344:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 345:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_ALL_PERIPH(GPIOx)); assert_param(IS_GET_GPIO_PIN(GPIO_Pin)); assert_param(IS_
 346:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 347:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	if (BitVal != Bit_RESET) {
 780              		.loc 1 347 0
 781 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 782 0012 002B     		cmp	r3, #0
 783 0014 03D0     		beq	.L38
 348:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		GPIOx->BSRR = GPIO_Pin;
 784              		.loc 1 348 0
 785 0016 7A88     		ldrh	r2, [r7, #2]
 786 0018 7B68     		ldr	r3, [r7, #4]
 787 001a 1A61     		str	r2, [r3, #16]
 788 001c 02E0     		b	.L37
 789              	.L38:
 349:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	} else {
 350:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		GPIOx->BRR = GPIO_Pin;
 790              		.loc 1 350 0
 791 001e 7A88     		ldrh	r2, [r7, #2]
 792 0020 7B68     		ldr	r3, [r7, #4]
 793 0022 5A61     		str	r2, [r3, #20]
 794              	.L37:
 351:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	}
 352:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 795              		.loc 1 352 0
 796 0024 07F10C07 		add	r7, r7, #12
 797 0028 BD46     		mov	sp, r7
 798 002a 80BC     		pop	{r7}
 799 002c 7047     		bx	lr
 800              		.cfi_endproc
 801              	.LFE39:
 803 002e 00BF     		.section	.text.GPIO_Write,"ax",%progbits
 804              		.align	2
 805              		.global	GPIO_Write
 806              		.thumb
 807              		.thumb_func
 809              	GPIO_Write:
 810              	.LFB40:
 353:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 354:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 355:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Writes data to the specified GPIO data port.
 356:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 357:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  PortVal: specifies the value to be written to the port output data register.
 358:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval None
 359:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 360:../StdPeripheralDriver/src/stm32f10x_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal) {
 811              		.loc 1 360 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 8
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 816 0000 80B4     		push	{r7}
 817              	.LCFI32:
 818              		.cfi_def_cfa_offset 4
 819              		.cfi_offset 7, -4
 820 0002 83B0     		sub	sp, sp, #12
 821              	.LCFI33:
 822              		.cfi_def_cfa_offset 16
 823 0004 00AF     		add	r7, sp, #0
 824              	.LCFI34:
 825              		.cfi_def_cfa_register 7
 826 0006 7860     		str	r0, [r7, #4]
 827 0008 0B46     		mov	r3, r1
 828 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 361:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 362:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 363:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 364:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	GPIOx->ODR = PortVal;
 829              		.loc 1 364 0
 830 000c 7A88     		ldrh	r2, [r7, #2]
 831 000e 7B68     		ldr	r3, [r7, #4]
 832 0010 DA60     		str	r2, [r3, #12]
 365:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 833              		.loc 1 365 0
 834 0012 07F10C07 		add	r7, r7, #12
 835 0016 BD46     		mov	sp, r7
 836 0018 80BC     		pop	{r7}
 837 001a 7047     		bx	lr
 838              		.cfi_endproc
 839              	.LFE40:
 841              		.section	.text.GPIO_PinLockConfig,"ax",%progbits
 842              		.align	2
 843              		.global	GPIO_PinLockConfig
 844              		.thumb
 845              		.thumb_func
 847              	GPIO_PinLockConfig:
 848              	.LFB41:
 366:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 367:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 368:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Locks GPIO Pins configuration registers.
 369:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
 370:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIO_Pin: specifies the port bit to be written.
 371:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 372:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval None
 373:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 374:../StdPeripheralDriver/src/stm32f10x_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin) {
 849              		.loc 1 374 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 16
 852              		@ frame_needed = 1, uses_anonymous_args = 0
 853              		@ link register save eliminated.
 854 0000 80B4     		push	{r7}
 855              	.LCFI35:
 856              		.cfi_def_cfa_offset 4
 857              		.cfi_offset 7, -4
 858 0002 85B0     		sub	sp, sp, #20
 859              	.LCFI36:
 860              		.cfi_def_cfa_offset 24
 861 0004 00AF     		add	r7, sp, #0
 862              	.LCFI37:
 863              		.cfi_def_cfa_register 7
 864 0006 7860     		str	r0, [r7, #4]
 865 0008 0B46     		mov	r3, r1
 866 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 375:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	uint32_t tmp = 0x00010000;
 867              		.loc 1 375 0
 868 000c 4FF48033 		mov	r3, #65536
 869 0010 FB60     		str	r3, [r7, #12]
 376:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 377:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 378:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_ALL_PERIPH(GPIOx)); assert_param(IS_GPIO_PIN(GPIO_Pin));
 379:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 380:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmp |= GPIO_Pin;
 870              		.loc 1 380 0
 871 0012 7B88     		ldrh	r3, [r7, #2]
 872 0014 FA68     		ldr	r2, [r7, #12]
 873 0016 1343     		orrs	r3, r3, r2
 874 0018 FB60     		str	r3, [r7, #12]
 381:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Set LCKK bit */
 382:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	GPIOx->LCKR = tmp;
 875              		.loc 1 382 0
 876 001a 7B68     		ldr	r3, [r7, #4]
 877 001c FA68     		ldr	r2, [r7, #12]
 878 001e 9A61     		str	r2, [r3, #24]
 383:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Reset LCKK bit */
 384:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	GPIOx->LCKR = GPIO_Pin;
 879              		.loc 1 384 0
 880 0020 7A88     		ldrh	r2, [r7, #2]
 881 0022 7B68     		ldr	r3, [r7, #4]
 882 0024 9A61     		str	r2, [r3, #24]
 385:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Set LCKK bit */
 386:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	GPIOx->LCKR = tmp;
 883              		.loc 1 386 0
 884 0026 7B68     		ldr	r3, [r7, #4]
 885 0028 FA68     		ldr	r2, [r7, #12]
 886 002a 9A61     		str	r2, [r3, #24]
 387:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Read LCKK bit*/
 388:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmp = GPIOx->LCKR;
 887              		.loc 1 388 0
 888 002c 7B68     		ldr	r3, [r7, #4]
 889 002e 9B69     		ldr	r3, [r3, #24]
 890 0030 FB60     		str	r3, [r7, #12]
 389:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Read LCKK bit*/
 390:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmp = GPIOx->LCKR;
 891              		.loc 1 390 0
 892 0032 7B68     		ldr	r3, [r7, #4]
 893 0034 9B69     		ldr	r3, [r3, #24]
 894 0036 FB60     		str	r3, [r7, #12]
 391:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 895              		.loc 1 391 0
 896 0038 07F11407 		add	r7, r7, #20
 897 003c BD46     		mov	sp, r7
 898 003e 80BC     		pop	{r7}
 899 0040 7047     		bx	lr
 900              		.cfi_endproc
 901              	.LFE41:
 903 0042 00BF     		.section	.text.GPIO_EventOutputConfig,"ax",%progbits
 904              		.align	2
 905              		.global	GPIO_EventOutputConfig
 906              		.thumb
 907              		.thumb_func
 909              	GPIO_EventOutputConfig:
 910              	.LFB42:
 392:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 393:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 394:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Selects the GPIO pin used as Event output.
 395:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIO_PortSource: selects the GPIO port to be used as source
 396:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   for Event output.
 397:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be GPIO_PortSourceGPIOx where x can be (A..E).
 398:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIO_PinSource: specifies the pin for the Event output.
 399:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be GPIO_PinSourcex where x can be (0..15).
 400:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval None
 401:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 402:../StdPeripheralDriver/src/stm32f10x_gpio.c **** void GPIO_EventOutputConfig(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource) {
 911              		.loc 1 402 0
 912              		.cfi_startproc
 913              		@ args = 0, pretend = 0, frame = 16
 914              		@ frame_needed = 1, uses_anonymous_args = 0
 915              		@ link register save eliminated.
 916 0000 80B4     		push	{r7}
 917              	.LCFI38:
 918              		.cfi_def_cfa_offset 4
 919              		.cfi_offset 7, -4
 920 0002 85B0     		sub	sp, sp, #20
 921              	.LCFI39:
 922              		.cfi_def_cfa_offset 24
 923 0004 00AF     		add	r7, sp, #0
 924              	.LCFI40:
 925              		.cfi_def_cfa_register 7
 926 0006 0246     		mov	r2, r0
 927 0008 0B46     		mov	r3, r1
 928 000a FA71     		strb	r2, [r7, #7]
 929 000c BB71     		strb	r3, [r7, #6]
 403:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	uint32_t tmpreg = 0x00;
 930              		.loc 1 403 0
 931 000e 4FF00003 		mov	r3, #0
 932 0012 FB60     		str	r3, [r7, #12]
 404:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 405:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_EVENTOUT_PORT_SOURCE(GPIO_PortSource)); assert_param(IS_GPIO_PIN_SOURCE(GPIO_
 406:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 407:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmpreg = AFIO ->EVCR;
 933              		.loc 1 407 0
 934 0014 4FF00003 		mov	r3, #0
 935 0018 C4F20103 		movt	r3, 16385
 936 001c 1B68     		ldr	r3, [r3, #0]
 937 001e FB60     		str	r3, [r7, #12]
 408:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Clear the PORT[6:4] and PIN[3:0] bits */
 409:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmpreg &= EVCR_PORTPINCONFIG_MASK;
 938              		.loc 1 409 0
 939 0020 FA68     		ldr	r2, [r7, #12]
 940 0022 4FF68073 		movw	r3, #65408
 941 0026 1340     		ands	r3, r3, r2
 942 0028 FB60     		str	r3, [r7, #12]
 410:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmpreg |= (uint32_t) GPIO_PortSource << 0x04;
 943              		.loc 1 410 0
 944 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 945 002c 4FEA0313 		lsl	r3, r3, #4
 946 0030 FA68     		ldr	r2, [r7, #12]
 947 0032 1343     		orrs	r3, r3, r2
 948 0034 FB60     		str	r3, [r7, #12]
 411:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmpreg |= GPIO_PinSource;
 949              		.loc 1 411 0
 950 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 951 0038 FA68     		ldr	r2, [r7, #12]
 952 003a 1343     		orrs	r3, r3, r2
 953 003c FB60     		str	r3, [r7, #12]
 412:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	AFIO ->EVCR = tmpreg;
 954              		.loc 1 412 0
 955 003e 4FF00003 		mov	r3, #0
 956 0042 C4F20103 		movt	r3, 16385
 957 0046 FA68     		ldr	r2, [r7, #12]
 958 0048 1A60     		str	r2, [r3, #0]
 413:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 959              		.loc 1 413 0
 960 004a 07F11407 		add	r7, r7, #20
 961 004e BD46     		mov	sp, r7
 962 0050 80BC     		pop	{r7}
 963 0052 7047     		bx	lr
 964              		.cfi_endproc
 965              	.LFE42:
 967              		.section	.text.GPIO_EventOutputCmd,"ax",%progbits
 968              		.align	2
 969              		.global	GPIO_EventOutputCmd
 970              		.thumb
 971              		.thumb_func
 973              	GPIO_EventOutputCmd:
 974              	.LFB43:
 414:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 415:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 416:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Enables or disables the Event Output.
 417:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  NewState: new state of the Event output.
 418:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be: ENABLE or DISABLE.
 419:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval None
 420:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 421:../StdPeripheralDriver/src/stm32f10x_gpio.c **** void GPIO_EventOutputCmd(FunctionalState NewState) {
 975              		.loc 1 421 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 8
 978              		@ frame_needed = 1, uses_anonymous_args = 0
 979              		@ link register save eliminated.
 980 0000 80B4     		push	{r7}
 981              	.LCFI41:
 982              		.cfi_def_cfa_offset 4
 983              		.cfi_offset 7, -4
 984 0002 83B0     		sub	sp, sp, #12
 985              	.LCFI42:
 986              		.cfi_def_cfa_offset 16
 987 0004 00AF     		add	r7, sp, #0
 988              	.LCFI43:
 989              		.cfi_def_cfa_register 7
 990 0006 0346     		mov	r3, r0
 991 0008 FB71     		strb	r3, [r7, #7]
 422:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 423:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_FUNCTIONAL_STATE(NewState));
 424:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 425:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	*(__IO uint32_t *) EVCR_EVOE_BB = (uint32_t) NewState;
 992              		.loc 1 425 0
 993 000a 4FF01C03 		mov	r3, #28
 994 000e C4F22023 		movt	r3, 16928
 995 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 996 0014 1A60     		str	r2, [r3, #0]
 426:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 997              		.loc 1 426 0
 998 0016 07F10C07 		add	r7, r7, #12
 999 001a BD46     		mov	sp, r7
 1000 001c 80BC     		pop	{r7}
 1001 001e 7047     		bx	lr
 1002              		.cfi_endproc
 1003              	.LFE43:
 1005              		.section	.text.GPIO_PinRemapConfig,"ax",%progbits
 1006              		.align	2
 1007              		.global	GPIO_PinRemapConfig
 1008              		.thumb
 1009              		.thumb_func
 1011              	GPIO_PinRemapConfig:
 1012              	.LFB44:
 427:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 428:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 429:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Changes the mapping of the specified pin.
 430:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIO_Remap: selects the pin to remap.
 431:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be one of the following values:
 432:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_SPI1             : SPI1 Alternate Function mapping
 433:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_I2C1             : I2C1 Alternate Function mapping
 434:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_USART1           : USART1 Alternate Function mapping
 435:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_USART2           : USART2 Alternate Function mapping
 436:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_PartialRemap_USART3    : USART3 Partial Alternate Function mapping
 437:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_FullRemap_USART3       : USART3 Full Alternate Function mapping
 438:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_PartialRemap_TIM1      : TIM1 Partial Alternate Function mapping
 439:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_FullRemap_TIM1         : TIM1 Full Alternate Function mapping
 440:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_PartialRemap1_TIM2     : TIM2 Partial1 Alternate Function mapping
 441:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_PartialRemap2_TIM2     : TIM2 Partial2 Alternate Function mapping
 442:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_FullRemap_TIM2         : TIM2 Full Alternate Function mapping
 443:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_PartialRemap_TIM3      : TIM3 Partial Alternate Function mapping
 444:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_FullRemap_TIM3         : TIM3 Full Alternate Function mapping
 445:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_TIM4             : TIM4 Alternate Function mapping
 446:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap1_CAN1            : CAN1 Alternate Function mapping
 447:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap2_CAN1            : CAN1 Alternate Function mapping
 448:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_PD01             : PD01 Alternate Function mapping
 449:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_TIM5CH4_LSI      : LSI connected to TIM5 Channel4 input capture for calibrat
 450:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_ADC1_ETRGINJ     : ADC1 External Trigger Injected Conversion remapping
 451:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_ADC1_ETRGREG     : ADC1 External Trigger Regular Conversion remapping
 452:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_ADC2_ETRGINJ     : ADC2 External Trigger Injected Conversion remapping
 453:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_ADC2_ETRGREG     : ADC2 External Trigger Regular Conversion remapping
 454:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_ETH              : Ethernet remapping (only for Connectivity line devices)
 455:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_CAN2             : CAN2 remapping (only for Connectivity line devices)
 456:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_SWJ_NoJTRST      : Full SWJ Enabled (JTAG-DP + SW-DP) but without JTRST
 457:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_SWJ_JTAGDisable  : JTAG-DP Disabled and SW-DP Enabled
 458:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_SWJ_Disable      : Full SWJ Disabled (JTAG-DP + SW-DP)
 459:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_SPI3             : SPI3/I2S3 Alternate Function mapping (only for Connectivi
 460:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *                                        When the SPI3/I2S3 is remapped using this function, the S
 461:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *                                        to Full SWJ Enabled (JTAG-DP + SW-DP) but without JTRST. 
 462:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_TIM2ITR1_PTP_SOF : Ethernet PTP output or USB OTG SOF (Start of Frame) conne
 463:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *                                        to TIM2 Internal Trigger 1 for calibration (only for Conn
 464:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *                                        If the GPIO_Remap_TIM2ITR1_PTP_SOF is enabled the TIM2 IT
 465:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *                                        Ethernet PTP output. When Reset TIM2 ITR1 is connected to
 466:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_PTP_PPS          : Ethernet MAC PPS_PTS output on PB05 (only for Connectivit
 467:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_TIM15            : TIM15 Alternate Function mapping (only for Value line dev
 468:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_TIM16            : TIM16 Alternate Function mapping (only for Value line dev
 469:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_TIM17            : TIM17 Alternate Function mapping (only for Value line dev
 470:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_CEC              : CEC Alternate Function mapping (only for Value line devic
 471:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_TIM1_DMA         : TIM1 DMA requests mapping (only for Value line devices)
 472:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_TIM9             : TIM9 Alternate Function mapping (only for XL-density devi
 473:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_TIM10            : TIM10 Alternate Function mapping (only for XL-density dev
 474:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_TIM11            : TIM11 Alternate Function mapping (only for XL-density dev
 475:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_TIM13            : TIM13 Alternate Function mapping (only for High density V
 476:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_TIM14            : TIM14 Alternate Function mapping (only for High density V
 477:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_FSMC_NADV        : FSMC_NADV Alternate Function mapping (only for High densi
 478:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_TIM67_DAC_DMA    : TIM6/TIM7 and DAC DMA requests remapping (only for High d
 479:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_TIM12            : TIM12 Alternate Function mapping (only for High density V
 480:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_Remap_MISC             : Miscellaneous Remap (DMA2 Channel5 Position and DAC Trigg
 481:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *                                        only for High density Value line devices)     
 482:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  NewState: new state of the port pin remapping.
 483:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be: ENABLE or DISABLE.
 484:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval None
 485:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 486:../StdPeripheralDriver/src/stm32f10x_gpio.c **** void GPIO_PinRemapConfig(uint32_t GPIO_Remap, FunctionalState NewState) {
 1013              		.loc 1 486 0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 24
 1016              		@ frame_needed = 1, uses_anonymous_args = 0
 1017              		@ link register save eliminated.
 1018 0000 80B4     		push	{r7}
 1019              	.LCFI44:
 1020              		.cfi_def_cfa_offset 4
 1021              		.cfi_offset 7, -4
 1022 0002 87B0     		sub	sp, sp, #28
 1023              	.LCFI45:
 1024              		.cfi_def_cfa_offset 32
 1025 0004 00AF     		add	r7, sp, #0
 1026              	.LCFI46:
 1027              		.cfi_def_cfa_register 7
 1028 0006 7860     		str	r0, [r7, #4]
 1029 0008 0B46     		mov	r3, r1
 1030 000a FB70     		strb	r3, [r7, #3]
 487:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	uint32_t tmp = 0x00, tmp1 = 0x00, tmpreg = 0x00, tmpmask = 0x00;
 1031              		.loc 1 487 0
 1032 000c 4FF00003 		mov	r3, #0
 1033 0010 3B61     		str	r3, [r7, #16]
 1034 0012 4FF00003 		mov	r3, #0
 1035 0016 FB60     		str	r3, [r7, #12]
 1036 0018 4FF00003 		mov	r3, #0
 1037 001c 7B61     		str	r3, [r7, #20]
 1038 001e 4FF00003 		mov	r3, #0
 1039 0022 BB60     		str	r3, [r7, #8]
 488:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 489:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 490:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_REMAP(GPIO_Remap)); assert_param(IS_FUNCTIONAL_STATE(NewState));
 491:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 492:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	if ((GPIO_Remap & 0x80000000) == 0x80000000) {
 1040              		.loc 1 492 0
 1041 0024 7B68     		ldr	r3, [r7, #4]
 1042 0026 002B     		cmp	r3, #0
 1043 0028 06DA     		bge	.L45
 493:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		tmpreg = AFIO ->MAPR2;
 1044              		.loc 1 493 0
 1045 002a 4FF00003 		mov	r3, #0
 1046 002e C4F20103 		movt	r3, 16385
 1047 0032 DB69     		ldr	r3, [r3, #28]
 1048 0034 7B61     		str	r3, [r7, #20]
 1049 0036 05E0     		b	.L46
 1050              	.L45:
 494:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	} else {
 495:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		tmpreg = AFIO ->MAPR;
 1051              		.loc 1 495 0
 1052 0038 4FF00003 		mov	r3, #0
 1053 003c C4F20103 		movt	r3, 16385
 1054 0040 5B68     		ldr	r3, [r3, #4]
 1055 0042 7B61     		str	r3, [r7, #20]
 1056              	.L46:
 496:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	}
 497:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 498:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK ) >> 0x10;
 1057              		.loc 1 498 0
 1058 0044 7B68     		ldr	r3, [r7, #4]
 1059 0046 03F47023 		and	r3, r3, #983040
 1060 004a 4FEA1343 		lsr	r3, r3, #16
 1061 004e BB60     		str	r3, [r7, #8]
 499:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmp = GPIO_Remap & LSB_MASK;
 1062              		.loc 1 499 0
 1063 0050 7B68     		ldr	r3, [r7, #4]
 1064 0052 4FEA0343 		lsl	r3, r3, #16
 1065 0056 4FEA1343 		lsr	r3, r3, #16
 1066 005a 3B61     		str	r3, [r7, #16]
 500:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 501:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	if ((GPIO_Remap & (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK ))== (DBGAFR_LOCATION_MASK | DBGAFR_
 1067              		.loc 1 501 0
 1068 005c 7B68     		ldr	r3, [r7, #4]
 1069 005e 03F44013 		and	r3, r3, #3145728
 1070 0062 B3F5401F 		cmp	r3, #3145728
 1071 0066 10D1     		bne	.L47
 502:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmpreg &= DBGAFR_SWJCFG_MASK;
 1072              		.loc 1 502 0
 1073 0068 7B69     		ldr	r3, [r7, #20]
 1074 006a 23F07063 		bic	r3, r3, #251658240
 1075 006e 7B61     		str	r3, [r7, #20]
 503:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	AFIO->MAPR &= DBGAFR_SWJCFG_MASK;
 1076              		.loc 1 503 0
 1077 0070 4FF00003 		mov	r3, #0
 1078 0074 C4F20103 		movt	r3, 16385
 1079 0078 4FF00002 		mov	r2, #0
 1080 007c C4F20102 		movt	r2, 16385
 1081 0080 5268     		ldr	r2, [r2, #4]
 1082 0082 22F07062 		bic	r2, r2, #251658240
 1083 0086 5A60     		str	r2, [r3, #4]
 1084 0088 26E0     		b	.L48
 1085              	.L47:
 504:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 505:../StdPeripheralDriver/src/stm32f10x_gpio.c **** else if ((GPIO_Remap & DBGAFR_NUMBITS_MASK) == DBGAFR_NUMBITS_MASK)
 1086              		.loc 1 505 0
 1087 008a 7B68     		ldr	r3, [r7, #4]
 1088 008c 03F48013 		and	r3, r3, #1048576
 1089 0090 002B     		cmp	r3, #0
 1090 0092 10D0     		beq	.L49
 506:../StdPeripheralDriver/src/stm32f10x_gpio.c **** {
 507:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmp1 = ((uint32_t)0x03) << tmpmask;
 1091              		.loc 1 507 0
 1092 0094 BB68     		ldr	r3, [r7, #8]
 1093 0096 4FF00302 		mov	r2, #3
 1094 009a 02FA03F3 		lsl	r3, r2, r3
 1095 009e FB60     		str	r3, [r7, #12]
 508:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmpreg &= ~tmp1;
 1096              		.loc 1 508 0
 1097 00a0 FB68     		ldr	r3, [r7, #12]
 1098 00a2 6FEA0303 		mvn	r3, r3
 1099 00a6 7A69     		ldr	r2, [r7, #20]
 1100 00a8 1340     		ands	r3, r3, r2
 1101 00aa 7B61     		str	r3, [r7, #20]
 509:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmpreg |= ~DBGAFR_SWJCFG_MASK;
 1102              		.loc 1 509 0
 1103 00ac 7B69     		ldr	r3, [r7, #20]
 1104 00ae 43F07063 		orr	r3, r3, #251658240
 1105 00b2 7B61     		str	r3, [r7, #20]
 1106 00b4 10E0     		b	.L48
 1107              	.L49:
 510:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 511:../StdPeripheralDriver/src/stm32f10x_gpio.c **** else
 512:../StdPeripheralDriver/src/stm32f10x_gpio.c **** {
 513:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmpreg &= ~(tmp << ((GPIO_Remap >> 0x15)*0x10));
 1108              		.loc 1 513 0
 1109 00b6 7B68     		ldr	r3, [r7, #4]
 1110 00b8 4FEA5353 		lsr	r3, r3, #21
 1111 00bc 4FEA0313 		lsl	r3, r3, #4
 1112 00c0 3A69     		ldr	r2, [r7, #16]
 1113 00c2 02FA03F3 		lsl	r3, r2, r3
 1114 00c6 6FEA0303 		mvn	r3, r3
 1115 00ca 7A69     		ldr	r2, [r7, #20]
 1116 00cc 1340     		ands	r3, r3, r2
 1117 00ce 7B61     		str	r3, [r7, #20]
 514:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmpreg |= ~DBGAFR_SWJCFG_MASK;
 1118              		.loc 1 514 0
 1119 00d0 7B69     		ldr	r3, [r7, #20]
 1120 00d2 43F07063 		orr	r3, r3, #251658240
 1121 00d6 7B61     		str	r3, [r7, #20]
 1122              	.L48:
 515:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 516:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 517:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	if (NewState != DISABLE) {
 1123              		.loc 1 517 0
 1124 00d8 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1125 00da 002B     		cmp	r3, #0
 1126 00dc 0AD0     		beq	.L50
 518:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		tmpreg |= (tmp << ((GPIO_Remap >> 0x15) * 0x10));
 1127              		.loc 1 518 0
 1128 00de 7B68     		ldr	r3, [r7, #4]
 1129 00e0 4FEA5353 		lsr	r3, r3, #21
 1130 00e4 4FEA0313 		lsl	r3, r3, #4
 1131 00e8 3A69     		ldr	r2, [r7, #16]
 1132 00ea 02FA03F3 		lsl	r3, r2, r3
 1133 00ee 7A69     		ldr	r2, [r7, #20]
 1134 00f0 1343     		orrs	r3, r3, r2
 1135 00f2 7B61     		str	r3, [r7, #20]
 1136              	.L50:
 519:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	}
 520:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 521:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	if ((GPIO_Remap & 0x80000000) == 0x80000000) {
 1137              		.loc 1 521 0
 1138 00f4 7B68     		ldr	r3, [r7, #4]
 1139 00f6 002B     		cmp	r3, #0
 1140 00f8 06DA     		bge	.L51
 522:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		AFIO ->MAPR2 = tmpreg;
 1141              		.loc 1 522 0
 1142 00fa 4FF00003 		mov	r3, #0
 1143 00fe C4F20103 		movt	r3, 16385
 1144 0102 7A69     		ldr	r2, [r7, #20]
 1145 0104 DA61     		str	r2, [r3, #28]
 1146 0106 05E0     		b	.L44
 1147              	.L51:
 523:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	} else {
 524:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 		AFIO ->MAPR = tmpreg;
 1148              		.loc 1 524 0
 1149 0108 4FF00003 		mov	r3, #0
 1150 010c C4F20103 		movt	r3, 16385
 1151 0110 7A69     		ldr	r2, [r7, #20]
 1152 0112 5A60     		str	r2, [r3, #4]
 1153              	.L44:
 525:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	}
 526:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 1154              		.loc 1 526 0
 1155 0114 07F11C07 		add	r7, r7, #28
 1156 0118 BD46     		mov	sp, r7
 1157 011a 80BC     		pop	{r7}
 1158 011c 7047     		bx	lr
 1159              		.cfi_endproc
 1160              	.LFE44:
 1162 011e 00BF     		.section	.text.GPIO_EXTILineConfig,"ax",%progbits
 1163              		.align	2
 1164              		.global	GPIO_EXTILineConfig
 1165              		.thumb
 1166              		.thumb_func
 1168              	GPIO_EXTILineConfig:
 1169              	.LFB45:
 527:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 528:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 529:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Selects the GPIO pin used as EXTI Line.
 530:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIO_PortSource: selects the GPIO port to be used as source for EXTI lines.
 531:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be GPIO_PortSourceGPIOx where x can be (A..G).
 532:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIO_PinSource: specifies the EXTI line to be configured.
 533:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be GPIO_PinSourcex where x can be (0..15).
 534:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval None
 535:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 536:../StdPeripheralDriver/src/stm32f10x_gpio.c **** void GPIO_EXTILineConfig(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource) {
 1170              		.loc 1 536 0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 16
 1173              		@ frame_needed = 1, uses_anonymous_args = 0
 1174              		@ link register save eliminated.
 1175 0000 90B4     		push	{r4, r7}
 1176              	.LCFI47:
 1177              		.cfi_def_cfa_offset 8
 1178              		.cfi_offset 4, -8
 1179              		.cfi_offset 7, -4
 1180 0002 84B0     		sub	sp, sp, #16
 1181              	.LCFI48:
 1182              		.cfi_def_cfa_offset 24
 1183 0004 00AF     		add	r7, sp, #0
 1184              	.LCFI49:
 1185              		.cfi_def_cfa_register 7
 1186 0006 0246     		mov	r2, r0
 1187 0008 0B46     		mov	r3, r1
 1188 000a FA71     		strb	r2, [r7, #7]
 1189 000c BB71     		strb	r3, [r7, #6]
 537:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	uint32_t tmp = 0x00;
 1190              		.loc 1 537 0
 1191 000e 4FF00003 		mov	r3, #0
 1192 0012 FB60     		str	r3, [r7, #12]
 538:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Check the parameters */
 539:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_EXTI_PORT_SOURCE(GPIO_PortSource)); assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinS
 540:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 541:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	tmp = ((uint32_t) 0x0F) << (0x04 * (GPIO_PinSource & (uint8_t) 0x03));
 1193              		.loc 1 541 0
 1194 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1195 0016 03F00303 		and	r3, r3, #3
 1196 001a 4FEA8303 		lsl	r3, r3, #2
 1197 001e 4FF00F02 		mov	r2, #15
 1198 0022 02FA03F3 		lsl	r3, r2, r3
 1199 0026 FB60     		str	r3, [r7, #12]
 542:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	AFIO ->EXTICR[GPIO_PinSource >> 0x02] &= ~tmp;
 1200              		.loc 1 542 0
 1201 0028 4FF00003 		mov	r3, #0
 1202 002c C4F20103 		movt	r3, 16385
 1203 0030 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 1204 0032 4FEA9202 		lsr	r2, r2, #2
 1205 0036 D2B2     		uxtb	r2, r2
 1206 0038 1046     		mov	r0, r2
 1207 003a 4FF00002 		mov	r2, #0
 1208 003e C4F20102 		movt	r2, 16385
 1209 0042 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 1210 0044 4FEA9101 		lsr	r1, r1, #2
 1211 0048 C9B2     		uxtb	r1, r1
 1212 004a 01F10201 		add	r1, r1, #2
 1213 004e 52F82110 		ldr	r1, [r2, r1, lsl #2]
 1214 0052 FA68     		ldr	r2, [r7, #12]
 1215 0054 6FEA0202 		mvn	r2, r2
 1216 0058 1140     		ands	r1, r1, r2
 1217 005a 00F10202 		add	r2, r0, #2
 1218 005e 43F82210 		str	r1, [r3, r2, lsl #2]
 543:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	AFIO ->EXTICR[GPIO_PinSource >> 0x02] |= (((uint32_t) GPIO_PortSource)
 1219              		.loc 1 543 0
 1220 0062 4FF00003 		mov	r3, #0
 1221 0066 C4F20103 		movt	r3, 16385
 1222 006a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 1223 006c 4FEA9202 		lsr	r2, r2, #2
 1224 0070 D2B2     		uxtb	r2, r2
 1225 0072 1046     		mov	r0, r2
 1226 0074 4FF00002 		mov	r2, #0
 1227 0078 C4F20102 		movt	r2, 16385
 1228 007c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 1229 007e 4FEA9101 		lsr	r1, r1, #2
 1230 0082 C9B2     		uxtb	r1, r1
 1231 0084 01F10201 		add	r1, r1, #2
 1232 0088 52F82110 		ldr	r1, [r2, r1, lsl #2]
 1233 008c FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 544:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 			<< (0x04 * (GPIO_PinSource & (uint8_t) 0x03)));
 1234              		.loc 1 544 0
 1235 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 1236 0090 02F00302 		and	r2, r2, #3
 1237 0094 4FEA8202 		lsl	r2, r2, #2
 1238 0098 04FA02F2 		lsl	r2, r4, r2
 543:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	AFIO ->EXTICR[GPIO_PinSource >> 0x02] |= (((uint32_t) GPIO_PortSource)
 1239              		.loc 1 543 0
 1240 009c 1143     		orrs	r1, r1, r2
 1241 009e 00F10202 		add	r2, r0, #2
 1242 00a2 43F82210 		str	r1, [r3, r2, lsl #2]
 545:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 1243              		.loc 1 545 0
 1244 00a6 07F11007 		add	r7, r7, #16
 1245 00aa BD46     		mov	sp, r7
 1246 00ac 90BC     		pop	{r4, r7}
 1247 00ae 7047     		bx	lr
 1248              		.cfi_endproc
 1249              	.LFE45:
 1251              		.section	.text.GPIO_ETH_MediaInterfaceConfig,"ax",%progbits
 1252              		.align	2
 1253              		.global	GPIO_ETH_MediaInterfaceConfig
 1254              		.thumb
 1255              		.thumb_func
 1257              	GPIO_ETH_MediaInterfaceConfig:
 1258              	.LFB46:
 546:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 547:../StdPeripheralDriver/src/stm32f10x_gpio.c **** /**
 548:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @brief  Selects the Ethernet media interface.
 549:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @note   This function applies only to STM32 Connectivity line devices.  
 550:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @param  GPIO_ETH_MediaInterface: specifies the Media Interface mode.
 551:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *   This parameter can be one of the following values:
 552:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_ETH_MediaInterface_MII: MII mode
 553:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  *     @arg GPIO_ETH_MediaInterface_RMII: RMII mode    
 554:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  * @retval None
 555:../StdPeripheralDriver/src/stm32f10x_gpio.c ****  */
 556:../StdPeripheralDriver/src/stm32f10x_gpio.c **** void GPIO_ETH_MediaInterfaceConfig(uint32_t GPIO_ETH_MediaInterface) {
 1259              		.loc 1 556 0
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 8
 1262              		@ frame_needed = 1, uses_anonymous_args = 0
 1263              		@ link register save eliminated.
 1264 0000 80B4     		push	{r7}
 1265              	.LCFI50:
 1266              		.cfi_def_cfa_offset 4
 1267              		.cfi_offset 7, -4
 1268 0002 83B0     		sub	sp, sp, #12
 1269              	.LCFI51:
 1270              		.cfi_def_cfa_offset 16
 1271 0004 00AF     		add	r7, sp, #0
 1272              	.LCFI52:
 1273              		.cfi_def_cfa_register 7
 1274 0006 7860     		str	r0, [r7, #4]
 557:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	assert_param(IS_GPIO_ETH_MEDIA_INTERFACE(GPIO_ETH_MediaInterface));
 558:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 
 559:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	/* Configure MII_RMII selection bit */
 560:../StdPeripheralDriver/src/stm32f10x_gpio.c **** 	*(__IO uint32_t *) MAPR_MII_RMII_SEL_BB = GPIO_ETH_MediaInterface;
 1275              		.loc 1 560 0
 1276 0008 4FF0DC03 		mov	r3, #220
 1277 000c C4F22023 		movt	r3, 16928
 1278 0010 7A68     		ldr	r2, [r7, #4]
 1279 0012 1A60     		str	r2, [r3, #0]
 561:../StdPeripheralDriver/src/stm32f10x_gpio.c **** }
 1280              		.loc 1 561 0
 1281 0014 07F10C07 		add	r7, r7, #12
 1282 0018 BD46     		mov	sp, r7
 1283 001a 80BC     		pop	{r7}
 1284 001c 7047     		bx	lr
 1285              		.cfi_endproc
 1286              	.LFE46:
 1288 001e 00BF     		.text
 1289              	.Letext0:
 1290              		.file 2 "/home/frolls/ARM/gcc-arm-none-eabi-4_7-2012q4/bin/../lib/gcc/arm-none-eabi/4.7.3/../../..
 1291              		.file 3 "/home/frolls/git/STM32_FreeRTOS_freeModBus/stm32vld_template/CMSIS/stm32f10x.h"
 1292              		.file 4 "/home/frolls/git/STM32_FreeRTOS_freeModBus/stm32vld_template/StdPeripheralDriver/inc/stm3
 1293              		.file 5 "/home/frolls/git/STM32_FreeRTOS_freeModBus/stm32vld_template/CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_gpio.c
     /tmp/cc19YEPy.s:19     .text.GPIO_DeInit:00000000 $t
     /tmp/cc19YEPy.s:24     .text.GPIO_DeInit:00000000 GPIO_DeInit
     /tmp/cc19YEPy.s:162    .text.GPIO_AFIODeInit:00000000 $t
     /tmp/cc19YEPy.s:167    .text.GPIO_AFIODeInit:00000000 GPIO_AFIODeInit
     /tmp/cc19YEPy.s:195    .text.GPIO_Init:00000000 $t
     /tmp/cc19YEPy.s:200    .text.GPIO_Init:00000000 GPIO_Init
     /tmp/cc19YEPy.s:447    .text.GPIO_StructInit:00000000 $t
     /tmp/cc19YEPy.s:452    .text.GPIO_StructInit:00000000 GPIO_StructInit
     /tmp/cc19YEPy.s:491    .text.GPIO_ReadInputDataBit:00000000 $t
     /tmp/cc19YEPy.s:496    .text.GPIO_ReadInputDataBit:00000000 GPIO_ReadInputDataBit
     /tmp/cc19YEPy.s:547    .text.GPIO_ReadInputData:00000000 $t
     /tmp/cc19YEPy.s:552    .text.GPIO_ReadInputData:00000000 GPIO_ReadInputData
     /tmp/cc19YEPy.s:584    .text.GPIO_ReadOutputDataBit:00000000 $t
     /tmp/cc19YEPy.s:589    .text.GPIO_ReadOutputDataBit:00000000 GPIO_ReadOutputDataBit
     /tmp/cc19YEPy.s:640    .text.GPIO_ReadOutputData:00000000 $t
     /tmp/cc19YEPy.s:645    .text.GPIO_ReadOutputData:00000000 GPIO_ReadOutputData
     /tmp/cc19YEPy.s:677    .text.GPIO_SetBits:00000000 $t
     /tmp/cc19YEPy.s:682    .text.GPIO_SetBits:00000000 GPIO_SetBits
     /tmp/cc19YEPy.s:715    .text.GPIO_ResetBits:00000000 $t
     /tmp/cc19YEPy.s:720    .text.GPIO_ResetBits:00000000 GPIO_ResetBits
     /tmp/cc19YEPy.s:753    .text.GPIO_WriteBit:00000000 $t
     /tmp/cc19YEPy.s:758    .text.GPIO_WriteBit:00000000 GPIO_WriteBit
     /tmp/cc19YEPy.s:804    .text.GPIO_Write:00000000 $t
     /tmp/cc19YEPy.s:809    .text.GPIO_Write:00000000 GPIO_Write
     /tmp/cc19YEPy.s:842    .text.GPIO_PinLockConfig:00000000 $t
     /tmp/cc19YEPy.s:847    .text.GPIO_PinLockConfig:00000000 GPIO_PinLockConfig
     /tmp/cc19YEPy.s:904    .text.GPIO_EventOutputConfig:00000000 $t
     /tmp/cc19YEPy.s:909    .text.GPIO_EventOutputConfig:00000000 GPIO_EventOutputConfig
     /tmp/cc19YEPy.s:968    .text.GPIO_EventOutputCmd:00000000 $t
     /tmp/cc19YEPy.s:973    .text.GPIO_EventOutputCmd:00000000 GPIO_EventOutputCmd
     /tmp/cc19YEPy.s:1006   .text.GPIO_PinRemapConfig:00000000 $t
     /tmp/cc19YEPy.s:1011   .text.GPIO_PinRemapConfig:00000000 GPIO_PinRemapConfig
     /tmp/cc19YEPy.s:1163   .text.GPIO_EXTILineConfig:00000000 $t
     /tmp/cc19YEPy.s:1168   .text.GPIO_EXTILineConfig:00000000 GPIO_EXTILineConfig
     /tmp/cc19YEPy.s:1252   .text.GPIO_ETH_MediaInterfaceConfig:00000000 $t
     /tmp/cc19YEPy.s:1257   .text.GPIO_ETH_MediaInterfaceConfig:00000000 GPIO_ETH_MediaInterfaceConfig
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.3f2d2167d278fc96c4a7439609634148
                           .group:00000000 wm4.stm32f10x.h.51.643d5396a325ce00fe75ea490db6ba44
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.524.bbf52ca28bdf7ef267115429e0387679
                           .group:00000000 wm4.stm32f10x_conf.h.9.3838e46d9de2be24c7ed73296c5ae8b5
                           .group:00000000 wm4.stm32f10x.h.8267.abe69e40cf43ea9673cb5d472d4b6964
                           .group:00000000 wm4.stm32f10x_gpio.h.46.4096b03458401eca76553253bd40f29d
                           .group:00000000 wm4.stm32f10x_rcc.h.25.ce2a81c1048696f722ee0c144eb62674

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
