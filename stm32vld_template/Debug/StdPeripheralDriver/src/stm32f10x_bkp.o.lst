   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f10x_bkp.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.BKP_DeInit,"ax",%progbits
  19              		.align	2
  20              		.global	BKP_DeInit
  21              		.thumb
  22              		.thumb_func
  24              	BKP_DeInit:
  25              	.LFB29:
  26              		.file 1 "../StdPeripheralDriver/src/stm32f10x_bkp.c"
   1:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
   2:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   ******************************************************************************
   3:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @file    stm32f10x_bkp.c
   4:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @author  MCD Application Team
   5:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @version V3.5.0
   6:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @date    11-March-2011
   7:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief   This file provides all the BKP firmware functions.
   8:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   ******************************************************************************
   9:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @attention
  10:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *
  11:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *
  18:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   ******************************************************************************
  20:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  21:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  22:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* Includes ------------------------------------------------------------------*/
  23:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #include "stm32f10x_bkp.h"
  24:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #include "stm32f10x_rcc.h"
  25:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  26:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @addtogroup STM32F10x_StdPeriph_Driver
  27:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
  28:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  29:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  30:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @defgroup BKP 
  31:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief BKP driver modules
  32:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
  33:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  34:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  35:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_TypesDefinitions
  36:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
  37:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  38:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  39:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
  40:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @}
  41:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  42:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  43:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Defines
  44:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
  45:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  46:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  47:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* ------------ BKP registers bit address in the alias region --------------- */
  48:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define BKP_OFFSET        (BKP_BASE - PERIPH_BASE)
  49:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  50:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* --- CR Register ----*/
  51:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  52:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* Alias word address of TPAL bit */
  53:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define CR_OFFSET         (BKP_OFFSET + 0x30)
  54:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define TPAL_BitNumber    0x01
  55:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define CR_TPAL_BB        (PERIPH_BB_BASE + (CR_OFFSET * 32) + (TPAL_BitNumber * 4))
  56:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  57:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* Alias word address of TPE bit */
  58:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define TPE_BitNumber     0x00
  59:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define CR_TPE_BB         (PERIPH_BB_BASE + (CR_OFFSET * 32) + (TPE_BitNumber * 4))
  60:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  61:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* --- CSR Register ---*/
  62:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  63:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* Alias word address of TPIE bit */
  64:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define CSR_OFFSET        (BKP_OFFSET + 0x34)
  65:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define TPIE_BitNumber    0x02
  66:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define CSR_TPIE_BB       (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TPIE_BitNumber * 4))
  67:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  68:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* Alias word address of TIF bit */
  69:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define TIF_BitNumber     0x09
  70:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define CSR_TIF_BB        (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TIF_BitNumber * 4))
  71:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  72:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* Alias word address of TEF bit */
  73:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define TEF_BitNumber     0x08
  74:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define CSR_TEF_BB        (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (TEF_BitNumber * 4))
  75:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  76:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* ---------------------- BKP registers bit mask ------------------------ */
  77:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  78:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /* RTCCR register bit mask */
  79:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define RTCCR_CAL_MASK    ((uint16_t)0xFF80)
  80:../StdPeripheralDriver/src/stm32f10x_bkp.c **** #define RTCCR_MASK        ((uint16_t)0xFC7F)
  81:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  82:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
  83:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @}
  84:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */ 
  85:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  86:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  87:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Macros
  88:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
  89:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  90:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  91:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
  92:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @}
  93:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  94:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  95:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Variables
  96:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
  97:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
  98:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
  99:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 100:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @}
 101:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 102:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 103:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_FunctionPrototypes
 104:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
 105:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 106:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 107:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 108:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @}
 109:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 110:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 111:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /** @defgroup BKP_Private_Functions
 112:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @{
 113:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 114:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 115:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 116:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Deinitializes the BKP peripheral registers to their default reset values.
 117:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  None
 118:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 119:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 120:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_DeInit(void)
 121:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
  27              		.loc 1 121 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
 122:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   RCC_BackupResetCmd(ENABLE);
  39              		.loc 1 122 0
  40 0004 4FF00100 		mov	r0, #1
  41 0008 FFF7FEFF 		bl	RCC_BackupResetCmd
 123:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   RCC_BackupResetCmd(DISABLE);
  42              		.loc 1 123 0
  43 000c 4FF00000 		mov	r0, #0
  44 0010 FFF7FEFF 		bl	RCC_BackupResetCmd
 124:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
  45              		.loc 1 124 0
  46 0014 80BD     		pop	{r7, pc}
  47              		.cfi_endproc
  48              	.LFE29:
  50 0016 00BF     		.section	.text.BKP_TamperPinLevelConfig,"ax",%progbits
  51              		.align	2
  52              		.global	BKP_TamperPinLevelConfig
  53              		.thumb
  54              		.thumb_func
  56              	BKP_TamperPinLevelConfig:
  57              	.LFB30:
 125:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 126:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 127:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Configures the Tamper Pin active level.
 128:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  BKP_TamperPinLevel: specifies the Tamper Pin active level.
 129:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *   This parameter can be one of the following values:
 130:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *     @arg BKP_TamperPinLevel_High: Tamper pin active on high level
 131:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *     @arg BKP_TamperPinLevel_Low: Tamper pin active on low level
 132:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 133:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 134:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_TamperPinLevelConfig(uint16_t BKP_TamperPinLevel)
 135:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
  58              		.loc 1 135 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 8
  61              		@ frame_needed = 1, uses_anonymous_args = 0
  62              		@ link register save eliminated.
  63 0000 80B4     		push	{r7}
  64              	.LCFI2:
  65              		.cfi_def_cfa_offset 4
  66              		.cfi_offset 7, -4
  67 0002 83B0     		sub	sp, sp, #12
  68              	.LCFI3:
  69              		.cfi_def_cfa_offset 16
  70 0004 00AF     		add	r7, sp, #0
  71              	.LCFI4:
  72              		.cfi_def_cfa_register 7
  73 0006 0346     		mov	r3, r0
  74 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 136:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 137:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_TAMPER_PIN_LEVEL(BKP_TamperPinLevel));
 138:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CR_TPAL_BB = BKP_TamperPinLevel;
  75              		.loc 1 138 0
  76 000a 48F20463 		movw	r3, #34308
  77 000e C4F20D23 		movt	r3, 16909
  78 0012 FA88     		ldrh	r2, [r7, #6]
  79 0014 1A60     		str	r2, [r3, #0]
 139:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
  80              		.loc 1 139 0
  81 0016 07F10C07 		add	r7, r7, #12
  82 001a BD46     		mov	sp, r7
  83 001c 80BC     		pop	{r7}
  84 001e 7047     		bx	lr
  85              		.cfi_endproc
  86              	.LFE30:
  88              		.section	.text.BKP_TamperPinCmd,"ax",%progbits
  89              		.align	2
  90              		.global	BKP_TamperPinCmd
  91              		.thumb
  92              		.thumb_func
  94              	BKP_TamperPinCmd:
  95              	.LFB31:
 140:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 141:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 142:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Enables or disables the Tamper Pin activation.
 143:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  NewState: new state of the Tamper Pin activation.
 144:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *   This parameter can be: ENABLE or DISABLE.
 145:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 146:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 147:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_TamperPinCmd(FunctionalState NewState)
 148:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
  96              		.loc 1 148 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 8
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101 0000 80B4     		push	{r7}
 102              	.LCFI5:
 103              		.cfi_def_cfa_offset 4
 104              		.cfi_offset 7, -4
 105 0002 83B0     		sub	sp, sp, #12
 106              	.LCFI6:
 107              		.cfi_def_cfa_offset 16
 108 0004 00AF     		add	r7, sp, #0
 109              	.LCFI7:
 110              		.cfi_def_cfa_register 7
 111 0006 0346     		mov	r3, r0
 112 0008 FB71     		strb	r3, [r7, #7]
 149:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 150:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 151:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CR_TPE_BB = (uint32_t)NewState;
 113              		.loc 1 151 0
 114 000a 4FF40643 		mov	r3, #34304
 115 000e C4F20D23 		movt	r3, 16909
 116 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 117 0014 1A60     		str	r2, [r3, #0]
 152:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 118              		.loc 1 152 0
 119 0016 07F10C07 		add	r7, r7, #12
 120 001a BD46     		mov	sp, r7
 121 001c 80BC     		pop	{r7}
 122 001e 7047     		bx	lr
 123              		.cfi_endproc
 124              	.LFE31:
 126              		.section	.text.BKP_ITConfig,"ax",%progbits
 127              		.align	2
 128              		.global	BKP_ITConfig
 129              		.thumb
 130              		.thumb_func
 132              	BKP_ITConfig:
 133              	.LFB32:
 153:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 154:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 155:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Enables or disables the Tamper Pin Interrupt.
 156:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  NewState: new state of the Tamper Pin Interrupt.
 157:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *   This parameter can be: ENABLE or DISABLE.
 158:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 159:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 160:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_ITConfig(FunctionalState NewState)
 161:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 134              		.loc 1 161 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 8
 137              		@ frame_needed = 1, uses_anonymous_args = 0
 138              		@ link register save eliminated.
 139 0000 80B4     		push	{r7}
 140              	.LCFI8:
 141              		.cfi_def_cfa_offset 4
 142              		.cfi_offset 7, -4
 143 0002 83B0     		sub	sp, sp, #12
 144              	.LCFI9:
 145              		.cfi_def_cfa_offset 16
 146 0004 00AF     		add	r7, sp, #0
 147              	.LCFI10:
 148              		.cfi_def_cfa_register 7
 149 0006 0346     		mov	r3, r0
 150 0008 FB71     		strb	r3, [r7, #7]
 162:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 163:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 164:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) CSR_TPIE_BB = (uint32_t)NewState;
 151              		.loc 1 164 0
 152 000a 48F28863 		movw	r3, #34440
 153 000e C4F20D23 		movt	r3, 16909
 154 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 155 0014 1A60     		str	r2, [r3, #0]
 165:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 156              		.loc 1 165 0
 157 0016 07F10C07 		add	r7, r7, #12
 158 001a BD46     		mov	sp, r7
 159 001c 80BC     		pop	{r7}
 160 001e 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE32:
 164              		.section	.text.BKP_RTCOutputConfig,"ax",%progbits
 165              		.align	2
 166              		.global	BKP_RTCOutputConfig
 167              		.thumb
 168              		.thumb_func
 170              	BKP_RTCOutputConfig:
 171              	.LFB33:
 166:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 167:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 168:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Select the RTC output source to output on the Tamper pin.
 169:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  BKP_RTCOutputSource: specifies the RTC output source.
 170:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *   This parameter can be one of the following values:
 171:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_None: no RTC output on the Tamper pin.
 172:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_CalibClock: output the RTC clock with frequency
 173:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *                                          divided by 64 on the Tamper pin.
 174:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_Alarm: output the RTC Alarm pulse signal on
 175:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *                                     the Tamper pin.
 176:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *     @arg BKP_RTCOutputSource_Second: output the RTC Second pulse signal on
 177:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *                                      the Tamper pin.  
 178:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 179:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 180:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_RTCOutputConfig(uint16_t BKP_RTCOutputSource)
 181:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 172              		.loc 1 181 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 16
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177 0000 80B4     		push	{r7}
 178              	.LCFI11:
 179              		.cfi_def_cfa_offset 4
 180              		.cfi_offset 7, -4
 181 0002 85B0     		sub	sp, sp, #20
 182              	.LCFI12:
 183              		.cfi_def_cfa_offset 24
 184 0004 00AF     		add	r7, sp, #0
 185              	.LCFI13:
 186              		.cfi_def_cfa_register 7
 187 0006 0346     		mov	r3, r0
 188 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 182:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   uint16_t tmpreg = 0;
 189              		.loc 1 182 0
 190 000a 4FF00003 		mov	r3, #0
 191 000e FB81     		strh	r3, [r7, #14]	@ movhi
 183:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 184:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_RTC_OUTPUT_SOURCE(BKP_RTCOutputSource));
 185:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmpreg = BKP->RTCCR;
 192              		.loc 1 185 0
 193 0010 4FF4D843 		mov	r3, #27648
 194 0014 C4F20003 		movt	r3, 16384
 195 0018 9B8D     		ldrh	r3, [r3, #44]	@ movhi
 196 001a FB81     		strh	r3, [r7, #14]	@ movhi
 186:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Clear CCO, ASOE and ASOS bits */
 187:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmpreg &= RTCCR_MASK;
 197              		.loc 1 187 0
 198 001c FB89     		ldrh	r3, [r7, #14]	@ movhi
 199 001e 23F46073 		bic	r3, r3, #896
 200 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 188:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   
 189:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Set CCO, ASOE and ASOS bits according to BKP_RTCOutputSource value */
 190:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmpreg |= BKP_RTCOutputSource;
 201              		.loc 1 190 0
 202 0024 FA89     		ldrh	r2, [r7, #14]	@ movhi
 203 0026 FB88     		ldrh	r3, [r7, #6]	@ movhi
 204 0028 1343     		orrs	r3, r3, r2
 205 002a FB81     		strh	r3, [r7, #14]	@ movhi
 191:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Store the new value */
 192:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   BKP->RTCCR = tmpreg;
 206              		.loc 1 192 0
 207 002c 4FF4D843 		mov	r3, #27648
 208 0030 C4F20003 		movt	r3, 16384
 209 0034 FA89     		ldrh	r2, [r7, #14]	@ movhi
 210 0036 9A85     		strh	r2, [r3, #44]	@ movhi
 193:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 211              		.loc 1 193 0
 212 0038 07F11407 		add	r7, r7, #20
 213 003c BD46     		mov	sp, r7
 214 003e 80BC     		pop	{r7}
 215 0040 7047     		bx	lr
 216              		.cfi_endproc
 217              	.LFE33:
 219 0042 00BF     		.section	.text.BKP_SetRTCCalibrationValue,"ax",%progbits
 220              		.align	2
 221              		.global	BKP_SetRTCCalibrationValue
 222              		.thumb
 223              		.thumb_func
 225              	BKP_SetRTCCalibrationValue:
 226              	.LFB34:
 194:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 195:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 196:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Sets RTC Clock Calibration value.
 197:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  CalibrationValue: specifies the RTC Clock Calibration value.
 198:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *   This parameter must be a number between 0 and 0x7F.
 199:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 200:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 201:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_SetRTCCalibrationValue(uint8_t CalibrationValue)
 202:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 227              		.loc 1 202 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 16
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232 0000 80B4     		push	{r7}
 233              	.LCFI14:
 234              		.cfi_def_cfa_offset 4
 235              		.cfi_offset 7, -4
 236 0002 85B0     		sub	sp, sp, #20
 237              	.LCFI15:
 238              		.cfi_def_cfa_offset 24
 239 0004 00AF     		add	r7, sp, #0
 240              	.LCFI16:
 241              		.cfi_def_cfa_register 7
 242 0006 0346     		mov	r3, r0
 243 0008 FB71     		strb	r3, [r7, #7]
 203:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   uint16_t tmpreg = 0;
 244              		.loc 1 203 0
 245 000a 4FF00003 		mov	r3, #0
 246 000e FB81     		strh	r3, [r7, #14]	@ movhi
 204:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 205:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_CALIBRATION_VALUE(CalibrationValue));
 206:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmpreg = BKP->RTCCR;
 247              		.loc 1 206 0
 248 0010 4FF4D843 		mov	r3, #27648
 249 0014 C4F20003 		movt	r3, 16384
 250 0018 9B8D     		ldrh	r3, [r3, #44]	@ movhi
 251 001a FB81     		strh	r3, [r7, #14]	@ movhi
 207:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Clear CAL[6:0] bits */
 208:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmpreg &= RTCCR_CAL_MASK;
 252              		.loc 1 208 0
 253 001c FB89     		ldrh	r3, [r7, #14]	@ movhi
 254 001e 23F07F03 		bic	r3, r3, #127
 255 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 209:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Set CAL[6:0] bits according to CalibrationValue value */
 210:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmpreg |= CalibrationValue;
 256              		.loc 1 210 0
 257 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 258 0026 9AB2     		uxth	r2, r3
 259 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 260 002a 1343     		orrs	r3, r3, r2
 261 002c FB81     		strh	r3, [r7, #14]	@ movhi
 211:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Store the new value */
 212:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   BKP->RTCCR = tmpreg;
 262              		.loc 1 212 0
 263 002e 4FF4D843 		mov	r3, #27648
 264 0032 C4F20003 		movt	r3, 16384
 265 0036 FA89     		ldrh	r2, [r7, #14]	@ movhi
 266 0038 9A85     		strh	r2, [r3, #44]	@ movhi
 213:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 267              		.loc 1 213 0
 268 003a 07F11407 		add	r7, r7, #20
 269 003e BD46     		mov	sp, r7
 270 0040 80BC     		pop	{r7}
 271 0042 7047     		bx	lr
 272              		.cfi_endproc
 273              	.LFE34:
 275              		.section	.text.BKP_WriteBackupRegister,"ax",%progbits
 276              		.align	2
 277              		.global	BKP_WriteBackupRegister
 278              		.thumb
 279              		.thumb_func
 281              	BKP_WriteBackupRegister:
 282              	.LFB35:
 214:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 215:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 216:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Writes user data to the specified Data Backup Register.
 217:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  BKP_DR: specifies the Data Backup Register.
 218:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *   This parameter can be BKP_DRx where x:[1, 42]
 219:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  Data: data to write
 220:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 221:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 222:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_WriteBackupRegister(uint16_t BKP_DR, uint16_t Data)
 223:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 283              		.loc 1 223 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 16
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288 0000 80B4     		push	{r7}
 289              	.LCFI17:
 290              		.cfi_def_cfa_offset 4
 291              		.cfi_offset 7, -4
 292 0002 85B0     		sub	sp, sp, #20
 293              	.LCFI18:
 294              		.cfi_def_cfa_offset 24
 295 0004 00AF     		add	r7, sp, #0
 296              	.LCFI19:
 297              		.cfi_def_cfa_register 7
 298 0006 0246     		mov	r2, r0
 299 0008 0B46     		mov	r3, r1
 300 000a FA80     		strh	r2, [r7, #6]	@ movhi
 301 000c BB80     		strh	r3, [r7, #4]	@ movhi
 224:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   __IO uint32_t tmp = 0;
 302              		.loc 1 224 0
 303 000e 4FF00003 		mov	r3, #0
 304 0012 FB60     		str	r3, [r7, #12]
 225:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 226:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 227:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_DR(BKP_DR));
 228:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 229:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmp = (uint32_t)BKP_BASE; 
 305              		.loc 1 229 0
 306 0014 4FF4D843 		mov	r3, #27648
 307 0018 C4F20003 		movt	r3, 16384
 308 001c FB60     		str	r3, [r7, #12]
 230:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmp += BKP_DR;
 309              		.loc 1 230 0
 310 001e FA88     		ldrh	r2, [r7, #6]
 311 0020 FB68     		ldr	r3, [r7, #12]
 312 0022 D318     		adds	r3, r2, r3
 313 0024 FB60     		str	r3, [r7, #12]
 231:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 232:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *(__IO uint32_t *) tmp = Data;
 314              		.loc 1 232 0
 315 0026 FB68     		ldr	r3, [r7, #12]
 316 0028 BA88     		ldrh	r2, [r7, #4]
 317 002a 1A60     		str	r2, [r3, #0]
 233:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 318              		.loc 1 233 0
 319 002c 07F11407 		add	r7, r7, #20
 320 0030 BD46     		mov	sp, r7
 321 0032 80BC     		pop	{r7}
 322 0034 7047     		bx	lr
 323              		.cfi_endproc
 324              	.LFE35:
 326 0036 00BF     		.section	.text.BKP_ReadBackupRegister,"ax",%progbits
 327              		.align	2
 328              		.global	BKP_ReadBackupRegister
 329              		.thumb
 330              		.thumb_func
 332              	BKP_ReadBackupRegister:
 333              	.LFB36:
 234:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 235:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 236:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Reads data from the specified Data Backup Register.
 237:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  BKP_DR: specifies the Data Backup Register.
 238:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   *   This parameter can be BKP_DRx where x:[1, 42]
 239:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval The content of the specified Data Backup Register
 240:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 241:../StdPeripheralDriver/src/stm32f10x_bkp.c **** uint16_t BKP_ReadBackupRegister(uint16_t BKP_DR)
 242:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 334              		.loc 1 242 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 16
 337              		@ frame_needed = 1, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 339 0000 80B4     		push	{r7}
 340              	.LCFI20:
 341              		.cfi_def_cfa_offset 4
 342              		.cfi_offset 7, -4
 343 0002 85B0     		sub	sp, sp, #20
 344              	.LCFI21:
 345              		.cfi_def_cfa_offset 24
 346 0004 00AF     		add	r7, sp, #0
 347              	.LCFI22:
 348              		.cfi_def_cfa_register 7
 349 0006 0346     		mov	r3, r0
 350 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 243:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   __IO uint32_t tmp = 0;
 351              		.loc 1 243 0
 352 000a 4FF00003 		mov	r3, #0
 353 000e FB60     		str	r3, [r7, #12]
 244:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 245:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Check the parameters */
 246:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   assert_param(IS_BKP_DR(BKP_DR));
 247:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 248:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmp = (uint32_t)BKP_BASE; 
 354              		.loc 1 248 0
 355 0010 4FF4D843 		mov	r3, #27648
 356 0014 C4F20003 		movt	r3, 16384
 357 0018 FB60     		str	r3, [r7, #12]
 249:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   tmp += BKP_DR;
 358              		.loc 1 249 0
 359 001a FA88     		ldrh	r2, [r7, #6]
 360 001c FB68     		ldr	r3, [r7, #12]
 361 001e D318     		adds	r3, r2, r3
 362 0020 FB60     		str	r3, [r7, #12]
 250:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 251:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   return (*(__IO uint16_t *) tmp);
 363              		.loc 1 251 0
 364 0022 FB68     		ldr	r3, [r7, #12]
 365 0024 1B88     		ldrh	r3, [r3, #0]	@ movhi
 366 0026 9BB2     		uxth	r3, r3
 252:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 367              		.loc 1 252 0
 368 0028 1846     		mov	r0, r3
 369 002a 07F11407 		add	r7, r7, #20
 370 002e BD46     		mov	sp, r7
 371 0030 80BC     		pop	{r7}
 372 0032 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE36:
 376              		.section	.text.BKP_GetFlagStatus,"ax",%progbits
 377              		.align	2
 378              		.global	BKP_GetFlagStatus
 379              		.thumb
 380              		.thumb_func
 382              	BKP_GetFlagStatus:
 383              	.LFB37:
 253:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 254:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 255:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Checks whether the Tamper Pin Event flag is set or not.
 256:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  None
 257:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval The new state of the Tamper Pin Event flag (SET or RESET).
 258:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 259:../StdPeripheralDriver/src/stm32f10x_bkp.c **** FlagStatus BKP_GetFlagStatus(void)
 260:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 384              		.loc 1 260 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389 0000 80B4     		push	{r7}
 390              	.LCFI23:
 391              		.cfi_def_cfa_offset 4
 392              		.cfi_offset 7, -4
 393 0002 00AF     		add	r7, sp, #0
 394              	.LCFI24:
 395              		.cfi_def_cfa_register 7
 261:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   return (FlagStatus)(*(__IO uint32_t *) CSR_TEF_BB);
 396              		.loc 1 261 0
 397 0004 48F2A063 		movw	r3, #34464
 398 0008 C4F20D23 		movt	r3, 16909
 399 000c 1B68     		ldr	r3, [r3, #0]
 400 000e DBB2     		uxtb	r3, r3
 262:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 401              		.loc 1 262 0
 402 0010 1846     		mov	r0, r3
 403 0012 BD46     		mov	sp, r7
 404 0014 80BC     		pop	{r7}
 405 0016 7047     		bx	lr
 406              		.cfi_endproc
 407              	.LFE37:
 409              		.section	.text.BKP_ClearFlag,"ax",%progbits
 410              		.align	2
 411              		.global	BKP_ClearFlag
 412              		.thumb
 413              		.thumb_func
 415              	BKP_ClearFlag:
 416              	.LFB38:
 263:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 264:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 265:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Clears Tamper Pin Event pending flag.
 266:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  None
 267:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 268:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 269:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_ClearFlag(void)
 270:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 417              		.loc 1 270 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 1, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422 0000 80B4     		push	{r7}
 423              	.LCFI25:
 424              		.cfi_def_cfa_offset 4
 425              		.cfi_offset 7, -4
 426 0002 00AF     		add	r7, sp, #0
 427              	.LCFI26:
 428              		.cfi_def_cfa_register 7
 271:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Set CTE bit to clear Tamper Pin Event flag */
 272:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   BKP->CSR |= BKP_CSR_CTE;
 429              		.loc 1 272 0
 430 0004 4FF4D843 		mov	r3, #27648
 431 0008 C4F20003 		movt	r3, 16384
 432 000c 4FF4D842 		mov	r2, #27648
 433 0010 C4F20002 		movt	r2, 16384
 434 0014 928E     		ldrh	r2, [r2, #52]	@ movhi
 435 0016 92B2     		uxth	r2, r2
 436 0018 42F00102 		orr	r2, r2, #1
 437 001c 92B2     		uxth	r2, r2
 438 001e 9A86     		strh	r2, [r3, #52]	@ movhi
 273:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 439              		.loc 1 273 0
 440 0020 BD46     		mov	sp, r7
 441 0022 80BC     		pop	{r7}
 442 0024 7047     		bx	lr
 443              		.cfi_endproc
 444              	.LFE38:
 446 0026 00BF     		.section	.text.BKP_GetITStatus,"ax",%progbits
 447              		.align	2
 448              		.global	BKP_GetITStatus
 449              		.thumb
 450              		.thumb_func
 452              	BKP_GetITStatus:
 453              	.LFB39:
 274:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 275:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 276:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Checks whether the Tamper Pin Interrupt has occurred or not.
 277:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  None
 278:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval The new state of the Tamper Pin Interrupt (SET or RESET).
 279:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 280:../StdPeripheralDriver/src/stm32f10x_bkp.c **** ITStatus BKP_GetITStatus(void)
 281:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 454              		.loc 1 281 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 1, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 459 0000 80B4     		push	{r7}
 460              	.LCFI27:
 461              		.cfi_def_cfa_offset 4
 462              		.cfi_offset 7, -4
 463 0002 00AF     		add	r7, sp, #0
 464              	.LCFI28:
 465              		.cfi_def_cfa_register 7
 282:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   return (ITStatus)(*(__IO uint32_t *) CSR_TIF_BB);
 466              		.loc 1 282 0
 467 0004 48F2A463 		movw	r3, #34468
 468 0008 C4F20D23 		movt	r3, 16909
 469 000c 1B68     		ldr	r3, [r3, #0]
 470 000e DBB2     		uxtb	r3, r3
 283:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 471              		.loc 1 283 0
 472 0010 1846     		mov	r0, r3
 473 0012 BD46     		mov	sp, r7
 474 0014 80BC     		pop	{r7}
 475 0016 7047     		bx	lr
 476              		.cfi_endproc
 477              	.LFE39:
 479              		.section	.text.BKP_ClearITPendingBit,"ax",%progbits
 480              		.align	2
 481              		.global	BKP_ClearITPendingBit
 482              		.thumb
 483              		.thumb_func
 485              	BKP_ClearITPendingBit:
 486              	.LFB40:
 284:../StdPeripheralDriver/src/stm32f10x_bkp.c **** 
 285:../StdPeripheralDriver/src/stm32f10x_bkp.c **** /**
 286:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @brief  Clears Tamper Pin Interrupt pending bit.
 287:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @param  None
 288:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   * @retval None
 289:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   */
 290:../StdPeripheralDriver/src/stm32f10x_bkp.c **** void BKP_ClearITPendingBit(void)
 291:../StdPeripheralDriver/src/stm32f10x_bkp.c **** {
 487              		.loc 1 291 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 1, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492 0000 80B4     		push	{r7}
 493              	.LCFI29:
 494              		.cfi_def_cfa_offset 4
 495              		.cfi_offset 7, -4
 496 0002 00AF     		add	r7, sp, #0
 497              	.LCFI30:
 498              		.cfi_def_cfa_register 7
 292:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   /* Set CTI bit to clear Tamper Pin Interrupt pending bit */
 293:../StdPeripheralDriver/src/stm32f10x_bkp.c ****   BKP->CSR |= BKP_CSR_CTI;
 499              		.loc 1 293 0
 500 0004 4FF4D843 		mov	r3, #27648
 501 0008 C4F20003 		movt	r3, 16384
 502 000c 4FF4D842 		mov	r2, #27648
 503 0010 C4F20002 		movt	r2, 16384
 504 0014 928E     		ldrh	r2, [r2, #52]	@ movhi
 505 0016 92B2     		uxth	r2, r2
 506 0018 42F00202 		orr	r2, r2, #2
 507 001c 92B2     		uxth	r2, r2
 508 001e 9A86     		strh	r2, [r3, #52]	@ movhi
 294:../StdPeripheralDriver/src/stm32f10x_bkp.c **** }
 509              		.loc 1 294 0
 510 0020 BD46     		mov	sp, r7
 511 0022 80BC     		pop	{r7}
 512 0024 7047     		bx	lr
 513              		.cfi_endproc
 514              	.LFE40:
 516 0026 00BF     		.text
 517              	.Letext0:
 518              		.file 2 "/home/frolls/ARM/gcc-arm-none-eabi-4_7-2012q4/bin/../lib/gcc/arm-none-eabi/4.7.3/../../..
 519              		.file 3 "/home/frolls/ARM/stm32vld_template/CMSIS/stm32f10x.h"
 520              		.file 4 "/home/frolls/ARM/stm32vld_template/CMSIS/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_bkp.c
     /tmp/ccV6kmJP.s:19     .text.BKP_DeInit:00000000 $t
     /tmp/ccV6kmJP.s:24     .text.BKP_DeInit:00000000 BKP_DeInit
     /tmp/ccV6kmJP.s:51     .text.BKP_TamperPinLevelConfig:00000000 $t
     /tmp/ccV6kmJP.s:56     .text.BKP_TamperPinLevelConfig:00000000 BKP_TamperPinLevelConfig
     /tmp/ccV6kmJP.s:89     .text.BKP_TamperPinCmd:00000000 $t
     /tmp/ccV6kmJP.s:94     .text.BKP_TamperPinCmd:00000000 BKP_TamperPinCmd
     /tmp/ccV6kmJP.s:127    .text.BKP_ITConfig:00000000 $t
     /tmp/ccV6kmJP.s:132    .text.BKP_ITConfig:00000000 BKP_ITConfig
     /tmp/ccV6kmJP.s:165    .text.BKP_RTCOutputConfig:00000000 $t
     /tmp/ccV6kmJP.s:170    .text.BKP_RTCOutputConfig:00000000 BKP_RTCOutputConfig
     /tmp/ccV6kmJP.s:220    .text.BKP_SetRTCCalibrationValue:00000000 $t
     /tmp/ccV6kmJP.s:225    .text.BKP_SetRTCCalibrationValue:00000000 BKP_SetRTCCalibrationValue
     /tmp/ccV6kmJP.s:276    .text.BKP_WriteBackupRegister:00000000 $t
     /tmp/ccV6kmJP.s:281    .text.BKP_WriteBackupRegister:00000000 BKP_WriteBackupRegister
     /tmp/ccV6kmJP.s:327    .text.BKP_ReadBackupRegister:00000000 $t
     /tmp/ccV6kmJP.s:332    .text.BKP_ReadBackupRegister:00000000 BKP_ReadBackupRegister
     /tmp/ccV6kmJP.s:377    .text.BKP_GetFlagStatus:00000000 $t
     /tmp/ccV6kmJP.s:382    .text.BKP_GetFlagStatus:00000000 BKP_GetFlagStatus
     /tmp/ccV6kmJP.s:410    .text.BKP_ClearFlag:00000000 $t
     /tmp/ccV6kmJP.s:415    .text.BKP_ClearFlag:00000000 BKP_ClearFlag
     /tmp/ccV6kmJP.s:447    .text.BKP_GetITStatus:00000000 $t
     /tmp/ccV6kmJP.s:452    .text.BKP_GetITStatus:00000000 BKP_GetITStatus
     /tmp/ccV6kmJP.s:480    .text.BKP_ClearITPendingBit:00000000 $t
     /tmp/ccV6kmJP.s:485    .text.BKP_ClearITPendingBit:00000000 BKP_ClearITPendingBit
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.3f2d2167d278fc96c4a7439609634148
                           .group:00000000 wm4.stm32f10x.h.51.643d5396a325ce00fe75ea490db6ba44
                           .group:00000000 wm4.core_cm3.h.25.d35e9a9b04ec4aaebae9bf79fff061f9
                           .group:00000000 wm4.stdint.h.10.90b695f550ca6cc3fb08fa83baf01e05
                           .group:00000000 wm4.core_cm3.h.113.b286929a54d33b4c8909a7132437b244
                           .group:00000000 wm4.stm32f10x.h.524.bbf52ca28bdf7ef267115429e0387679
                           .group:00000000 wm4.stm32f10x_conf.h.9.3838e46d9de2be24c7ed73296c5ae8b5
                           .group:00000000 wm4.stm32f10x.h.8267.abe69e40cf43ea9673cb5d472d4b6964
                           .group:00000000 wm4.stm32f10x_bkp.h.58.6453665ad39dc78c618a75ac337c70d3
                           .group:00000000 wm4.stm32f10x_rcc.h.25.ce2a81c1048696f722ee0c144eb62674

UNDEFINED SYMBOLS
RCC_BackupResetCmd
